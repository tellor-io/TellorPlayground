{"id":"9e05473b24ef985e65553fb42583e5ce","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/TellorPlayground.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TellorPlayground {\n    // Events\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event NewReport(\n        bytes32 _queryId,\n        uint256 _time,\n        bytes _value,\n        uint256 _nonce,\n        bytes _queryData,\n        address _reporter\n    );\n    event NewStaker(address _staker, uint256 _amount);\n    event StakeWithdrawRequested(address _staker, uint256 _amount);\n    event StakeWithdrawn(address _staker);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // Storage\n    mapping(bytes32 => mapping(uint256 => bool)) public isDisputed; //queryId -> timestamp -> value\n    mapping(bytes32 => mapping(uint256 => address)) public reporterByTimestamp;\n    mapping(address => StakeInfo) stakerDetails; //mapping from a persons address to their staking info\n    mapping(bytes32 => uint256[]) public timestamps;\n    mapping(bytes32 => uint256) public tips; // mapping of data IDs to the amount of TRB they are tipped\n    mapping(bytes32 => mapping(uint256 => bytes)) public values; //queryId -> timestamp -> value\n    mapping(bytes32 => uint256[]) public voteRounds; // mapping of vote identifier hashes to an array of dispute IDs\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => uint256) private _balances;\n\n    uint256 public stakeAmount;\n    uint256 public constant timeBasedReward = 5e17; // time based reward for a reporter for successfully submitting a value\n    uint256 public tipsInContract; // number of tips within the contract\n    uint256 public voteCount;\n    address public token;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    // Structs\n    struct StakeInfo {\n        uint256 startDate; //stake start date\n        uint256 stakedBalance; // staked balance\n        uint256 lockedBalance; // amount locked for withdrawal\n        uint256 reporterLastTimestamp; // timestamp of reporter's last reported value\n        uint256 reportsSubmitted; // total number of reports submitted by reporter\n    }\n\n    // Functions\n    /**\n     * @dev Initializes playground parameters\n     */\n    constructor() {\n        _name = \"TellorPlayground\";\n        _symbol = \"TRBP\";\n        _decimals = 18;\n        token = address(this);\n    }\n\n    /**\n     * @dev Mock function for adding staking rewards. No rewards actually given to stakers\n     * @param _amount Amount of TRB to be added to the contract\n     */\n    function addStakingRewards(uint256 _amount) external {\n        require(_transferFrom(msg.sender, address(this), _amount));\n    }\n\n    /**\n     * @dev Approves amount that an address is alowed to spend of behalf of another\n     * @param _spender The address which is allowed to spend the tokens\n     * @param _amount The amount that msg.sender is allowing spender to use\n     * @return bool Whether the transaction succeeded\n     *\n     */\n    function approve(address _spender, uint256 _amount) external returns (bool){\n        _approve(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    /**\n     * @dev A mock function to create a dispute\n     * @param _queryId The tellorId to be disputed\n     * @param _timestamp the timestamp of the value to be disputed\n     */\n    function beginDispute(bytes32 _queryId, uint256 _timestamp) external {\n        values[_queryId][_timestamp] = bytes(\"\");\n        isDisputed[_queryId][_timestamp] = true;\n        voteCount++;\n        voteRounds[keccak256(abi.encodePacked(_queryId, _timestamp))].push(\n            voteCount\n        );\n    }\n\n    /**\n     * @dev Allows a reporter to submit stake\n     * @param _amount amount of tokens to stake\n     */\n    function depositStake(uint256 _amount) external {\n        StakeInfo storage _staker = stakerDetails[msg.sender];\n        if (_staker.lockedBalance > 0) {\n            if (_staker.lockedBalance >= _amount) {\n                _staker.lockedBalance -= _amount;\n            } else {\n                require(\n                    _transferFrom(\n                        msg.sender,\n                        address(this),\n                        _amount - _staker.lockedBalance\n                    )\n                );\n                _staker.lockedBalance = 0;\n            }\n        } else {\n            require(_transferFrom(msg.sender, address(this), _amount));\n        }\n        _staker.startDate = block.timestamp; // This resets their stake start date to now\n        _staker.stakedBalance += _amount;\n        emit NewStaker(msg.sender, _amount);\n    }\n\n    /**\n     * @dev Public function to mint tokens to the given address\n     * @param _user The address which will receive the tokens\n     */\n    function faucet(address _user) external {\n        _mint(_user, 1000 ether);\n    }\n\n    /**\n     * @dev Allows a reporter to request to withdraw their stake\n     * @param _amount amount of staked tokens requesting to withdraw\n     */\n    function requestStakingWithdraw(uint256 _amount) external {\n        StakeInfo storage _staker = stakerDetails[msg.sender];\n        require(\n            _staker.stakedBalance >= _amount,\n            \"insufficient staked balance\"\n        );\n        _staker.startDate = block.timestamp;\n        _staker.lockedBalance += _amount;\n        _staker.stakedBalance -= _amount;\n        emit StakeWithdrawRequested(msg.sender, _amount);\n    }\n\n    /**\n     * @dev A mock function to submit a value to be read without reporter staking needed\n     * @param _queryId the ID to associate the value to\n     * @param _value the value for the queryId\n     * @param _nonce the current value count for the query id\n     * @param _queryData the data used by reporters to fulfill the data query\n     */\n    // slither-disable-next-line timestamp\n    function submitValue(\n        bytes32 _queryId,\n        bytes calldata _value,\n        uint256 _nonce,\n        bytes memory _queryData\n    ) external {\n        require(keccak256(_value) != keccak256(\"\"), \"value must be submitted\");\n        require(\n            _nonce == timestamps[_queryId].length || _nonce == 0,\n            \"nonce must match timestamp index\"\n        );\n        require(\n            _queryId == keccak256(_queryData) || uint256(_queryId) <= 100,\n            \"id must be hash of bytes data\"\n        );\n        values[_queryId][block.timestamp] = _value;\n        timestamps[_queryId].push(block.timestamp);\n        reporterByTimestamp[_queryId][block.timestamp] = msg.sender;\n        stakerDetails[msg.sender].reporterLastTimestamp = block.timestamp;\n        stakerDetails[msg.sender].reportsSubmitted++;\n        emit NewReport(\n            _queryId,\n            block.timestamp,\n            _value,\n            _nonce,\n            _queryData,\n            msg.sender\n        );\n    }\n\n    /**\n     * @dev Transfer tokens from one user to another\n     * @param _recipient The destination address\n     * @param _amount The amount of tokens, including decimals, to transfer\n     * @return bool If the transfer succeeded\n     */\n    function transfer(address _recipient, uint256 _amount)\n        public\n        returns (bool)\n    {\n        _transfer(msg.sender, _recipient, _amount);\n        return true;\n    }\n\n    /**\n     * @dev Transfer tokens from user to another\n     * @param _sender The address which owns the tokens\n     * @param _recipient The destination address\n     * @param _amount The quantity of tokens to transfer\n     * @return bool Whether the transfer succeeded\n     */\n    function transferFrom(\n        address _sender,\n        address _recipient,\n        uint256 _amount\n    ) public returns (bool) {\n        _transfer(_sender, _recipient, _amount);\n        _approve(\n            _sender,\n            msg.sender,\n            _allowances[_sender][msg.sender] - _amount\n        );\n        return true;\n    }\n\n    /**\n     * @dev Withdraws a reporter's stake\n     */\n    function withdrawStake() external {\n        StakeInfo storage _s = stakerDetails[msg.sender];\n        // Ensure reporter is locked and that enough time has passed\n        require(block.timestamp - _s.startDate >= 7 days, \"7 days didn't pass\");\n        require(_s.lockedBalance > 0, \"reporter not locked for withdrawal\");\n        _transfer(address(this), msg.sender, _s.lockedBalance);\n        _s.lockedBalance = 0;\n        emit StakeWithdrawn(msg.sender);\n    }\n\n    // Getters\n    /**\n     * @dev Returns the amount that an address is alowed to spend of behalf of another\n     * @param _owner The address which owns the tokens\n     * @param _spender The address that will use the tokens\n     * @return uint256 The amount of allowed tokens\n     */\n    function allowance(address _owner, address _spender) external view returns (uint256){\n        return _allowances[_owner][_spender];\n    }\n\n    /**\n     * @dev Returns the balance of a given user.\n     * @param _account user address\n     * @return uint256 user's token balance\n     */\n    function balanceOf(address _account) external view returns (uint256) {\n        return _balances[_account];\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * @return uint8 the number of decimals; used only for display purposes\n     */\n    function decimals() external view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Retrieves the latest value for the queryId before the specified timestamp\n     * @param _queryId is the queryId to look up the value for\n     * @param _timestamp before which to search for latest value\n     * @return _ifRetrieve bool true if able to retrieve a non-zero value\n     * @return _value the value retrieved\n     * @return _timestampRetrieved the value's timestamp\n     */\n    function getDataBefore(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (\n            bool _ifRetrieve,\n            bytes memory _value,\n            uint256 _timestampRetrieved\n        )\n    {\n        (bool _found, uint256 _index) = getIndexForDataBefore(\n            _queryId,\n            _timestamp\n        );\n        if (!_found) return (false, bytes(\"\"), 0);\n        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _index);\n        _value = values[_queryId][_timestampRetrieved];\n        return (true, _value, _timestampRetrieved);\n    }\n\n    /**\n     * @dev Retrieves latest array index of data before the specified timestamp for the queryId\n     * @param _queryId is the queryId to look up the index for\n     * @param _timestamp is the timestamp before which to search for the latest index\n     * @return _found whether the index was found\n     * @return _index the latest index found before the specified timestamp\n     */\n    // slither-disable-next-line calls-loop\n    function getIndexForDataBefore(bytes32 _queryId, uint256 _timestamp)\n        public\n        view\n        returns (bool _found, uint256 _index)\n    {\n        uint256 _count = getNewValueCountbyQueryId(_queryId);\n        if (_count > 0) {\n            uint256 _middle;\n            uint256 _start = 0;\n            uint256 _end = _count - 1;\n            uint256 _time;\n            //Checking Boundaries to short-circuit the algorithm\n            _time = getTimestampbyQueryIdandIndex(_queryId, _start);\n            if (_time >= _timestamp) return (false, 0);\n            _time = getTimestampbyQueryIdandIndex(_queryId, _end);\n            if (_time < _timestamp) {\n                while (isInDispute(_queryId, _time) && _end > 0) {\n                    _end--;\n                    _time = getTimestampbyQueryIdandIndex(_queryId, _end);\n                }\n                if (_end == 0 && isInDispute(_queryId, _time)) {\n                    return (false, 0);\n                }\n                return (true, _end);\n            }\n            //Since the value is within our boundaries, do a binary search\n            while (true) {\n                _middle = (_end - _start) / 2 + 1 + _start;\n                _time = getTimestampbyQueryIdandIndex(_queryId, _middle);\n                if (_time < _timestamp) {\n                    //get immediate next value\n                    uint256 _nextTime = getTimestampbyQueryIdandIndex(\n                        _queryId,\n                        _middle + 1\n                    );\n                    if (_nextTime >= _timestamp) {\n                        if (!isInDispute(_queryId, _time)) {\n                            // _time is correct\n                            return (true, _middle);\n                        } else {\n                            // iterate backwards until we find a non-disputed value\n                            while (\n                                isInDispute(_queryId, _time) && _middle > 0\n                            ) {\n                                _middle--;\n                                _time = getTimestampbyQueryIdandIndex(\n                                    _queryId,\n                                    _middle\n                                );\n                            }\n                            if (_middle == 0 && isInDispute(_queryId, _time)) {\n                                return (false, 0);\n                            }\n                            // _time is correct\n                            return (true, _middle);\n                        }\n                    } else {\n                        //look from middle + 1(next value) to end\n                        _start = _middle + 1;\n                    }\n                } else {\n                    uint256 _prevTime = getTimestampbyQueryIdandIndex(\n                        _queryId,\n                        _middle - 1\n                    );\n                    if (_prevTime < _timestamp) {\n                        if (!isInDispute(_queryId, _prevTime)) {\n                            // _prevTime is correct\n                            return (true, _middle - 1);\n                        } else {\n                            // iterate backwards until we find a non-disputed value\n                            _middle--;\n                            while (\n                                isInDispute(_queryId, _prevTime) && _middle > 0\n                            ) {\n                                _middle--;\n                                _prevTime = getTimestampbyQueryIdandIndex(\n                                    _queryId,\n                                    _middle\n                                );\n                            }\n                            if (\n                                _middle == 0 && isInDispute(_queryId, _prevTime)\n                            ) {\n                                return (false, 0);\n                            }\n                            // _prevtime is correct\n                            return (true, _middle);\n                        }\n                    } else {\n                        //look from start to middle -1(prev value)\n                        _end = _middle - 1;\n                    }\n                }\n            }\n        }\n        return (false, 0);\n    }\n\n    /**\n     * @dev Counts the number of values that have been submitted for a given ID\n     * @param _queryId the ID to look up\n     * @return uint256 count of the number of values received for the queryId\n     */\n    function getNewValueCountbyQueryId(bytes32 _queryId)\n        public\n        view\n        returns (uint256)\n    {\n        return timestamps[_queryId].length;\n    }\n\n    /**\n     * @dev Returns the reporter for a given timestamp and queryId\n     * @param _queryId bytes32 version of the queryId\n     * @param _timestamp uint256 timestamp of report\n     * @return address of data reporter\n     */\n    function getReporterByTimestamp(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (address)\n    {\n        return reporterByTimestamp[_queryId][_timestamp];\n    }\n\n    /**\n     * @dev Returns mock stake amount\n     * @return uint256 stake amount\n     */\n    function getStakeAmount() external view returns (uint256) {\n        return stakeAmount;\n    }\n\n    /**\n     * @dev Allows users to retrieve all information about a staker\n     * @param _stakerAddress address of staker inquiring about\n     * @return uint startDate of staking\n     * @return uint current amount staked\n     * @return uint current amount locked for withdrawal\n     * @return uint reward debt used to calculate staking reward\n     * @return uint reporter's last reported timestamp\n     * @return uint total number of reports submitted by reporter\n     * @return uint governance vote count when first staked\n     * @return uint number of votes case by staker when first staked\n     * @return uint whether staker is counted in totalStakers\n     */\n    function getStakerInfo(address _stakerAddress)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            bool\n        )\n    {\n        StakeInfo storage _staker = stakerDetails[_stakerAddress];\n        return (\n            _staker.startDate,\n            _staker.stakedBalance,\n            _staker.lockedBalance,\n            0, // reward debt\n            _staker.reporterLastTimestamp,\n            _staker.reportsSubmitted,\n            0, // start vote count\n            0, // start vote tally\n            false\n        );\n    }\n\n    /**\n     * @dev Gets the timestamp for the value based on their index\n     * @param _queryId is the queryId to look up\n     * @param _index is the value index to look up\n     * @return uint256 timestamp\n     */\n    function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 _len = timestamps[_queryId].length;\n        if (_len == 0 || _len <= _index) return 0;\n        return timestamps[_queryId][_index];\n    }\n\n    /**\n     * @dev Returns an array of voting rounds for a given vote\n     * @param _hash is the identifier hash for a vote\n     * @return uint256[] memory dispute IDs of the vote rounds\n     */\n    function getVoteRounds(bytes32 _hash) public view returns (uint256[] memory){\n        return voteRounds[_hash];\n    }\n\n    /**\n     * @dev Returns the governance address of the contract\n     * @return address (this address)\n     */\n    function governance() external view returns (address) {\n        return address(this);\n    }\n\n    /**\n     * @dev Returns whether a given value is disputed\n     * @param _queryId unique ID of the data feed\n     * @param _timestamp timestamp of the value\n     * @return bool whether the value is disputed\n     */\n    function isInDispute(bytes32 _queryId, uint256 _timestamp)\n        public\n        view\n        returns (bool)\n    {\n        return isDisputed[_queryId][_timestamp];\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     * @return string name of the token\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Retrieves value from oracle based on queryId/timestamp\n     * @param _queryId being requested\n     * @param _timestamp to retrieve data/value from\n     * @return bytes value for queryId/timestamp submitted\n     */\n    function retrieveData(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (bytes memory)\n    {\n        return values[_queryId][_timestamp];\n    }\n\n    /**\n     * @dev Returns the symbol of the token.\n     * @return string symbol of the token\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the total supply of the token.\n     * @return uint256 total supply of token\n     */\n    function totalSupply() external view returns (uint256) {\n        return _totalSupply;\n    }\n\n    // Internal functions\n    /**\n     * @dev Internal function to approve tokens for the user\n     * @param _owner The owner of the tokens\n     * @param _spender The address which is allowed to spend the tokens\n     * @param _amount The amount that msg.sender is allowing spender to use\n     */\n    function _approve(\n        address _owner,\n        address _spender,\n        uint256 _amount\n    ) internal {\n        require(_owner != address(0), \"ERC20: approve from the zero address\");\n        require(_spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[_owner][_spender] = _amount;\n        emit Approval(_owner, _spender, _amount);\n    }\n\n    /**\n     * @dev Internal function to burn tokens for the user\n     * @param _account The address whose tokens to burn\n     * @param _amount The quantity of tokens to burn\n     */\n    function _burn(address _account, uint256 _amount) internal{\n        require(_account != address(0), \"ERC20: burn from the zero address\");\n        _balances[_account] -= _amount;\n        _totalSupply -= _amount;\n        emit Transfer(_account, address(0), _amount);\n    }\n\n    /**\n     * @dev Internal function to create new tokens for the user\n     * @param _account The address which receives minted tokens\n     * @param _amount The quantity of tokens to min\n     */\n    function _mint(address _account, uint256 _amount) internal{\n        require(_account != address(0), \"ERC20: mint to the zero address\");\n        _totalSupply += _amount;\n        _balances[_account] += _amount;\n        emit Transfer(address(0), _account, _amount);\n    }\n\n    /**\n     * @dev Internal function to perform token transfer\n     * @param _sender The address which owns the tokens\n     * @param _recipient The destination address\n     * @param _amount The quantity of tokens to transfer\n     */\n    function _transfer(\n        address _sender,\n        address _recipient,\n        uint256 _amount\n    ) internal{\n        require(_sender != address(0), \"ERC20: transfer from the zero address\");\n        require( _recipient != address(0),\"ERC20: transfer to the zero address\");\n        _balances[_sender] -= _amount;\n        _balances[_recipient] += _amount;\n        emit Transfer(_sender, _recipient, _amount);\n    }\n\n    /**\n     * @dev Allows this contract to transfer tokens from one user to another\n     * @param _sender The address which owns the tokens\n     * @param _recipient The destination address\n     * @param _amount The quantity of tokens to transfer\n     * @return bool Whether the transfer succeeded\n     */\n    function _transferFrom(\n        address _sender,\n        address _recipient,\n        uint256 _amount\n    ) internal returns (bool) {\n        _transfer(_sender, _recipient, _amount);\n        _approve(\n            _sender,\n            msg.sender,\n            _allowances[_sender][address(this)] - _amount\n        );\n        return true;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.4.0","sources":{"contracts/TellorPlayground.sol":{"id":0,"ast":{"absolutePath":"contracts/TellorPlayground.sol","exportedSymbols":{"TellorPlayground":[1391]},"id":1392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"TellorPlayground","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1391,"linearizedBaseContracts":[1391],"name":"TellorPlayground","nameLocation":"66:16:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":9,"name":"Approval","nameLocation":"109:8:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"143:5:0","nodeType":"VariableDeclaration","scope":9,"src":"127:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"174:7:0","nodeType":"VariableDeclaration","scope":9,"src":"158:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"158:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"199:5:0","nodeType":"VariableDeclaration","scope":9,"src":"191:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"117:93:0"},"src":"103:108:0"},{"anonymous":false,"eventSelector":"48e9e2c732ba278de6ac88a3a57a5c5ba13d3d8370e709b3b98333a57876ca95","id":23,"name":"NewReport","nameLocation":"222:9:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"indexed":false,"mutability":"mutable","name":"_queryId","nameLocation":"249:8:0","nodeType":"VariableDeclaration","scope":23,"src":"241:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10,"name":"bytes32","nodeType":"ElementaryTypeName","src":"241:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13,"indexed":false,"mutability":"mutable","name":"_time","nameLocation":"275:5:0","nodeType":"VariableDeclaration","scope":23,"src":"267:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":false,"mutability":"mutable","name":"_value","nameLocation":"296:6:0","nodeType":"VariableDeclaration","scope":23,"src":"290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14,"name":"bytes","nodeType":"ElementaryTypeName","src":"290:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"320:6:0","nodeType":"VariableDeclaration","scope":23,"src":"312:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":false,"mutability":"mutable","name":"_queryData","nameLocation":"342:10:0","nodeType":"VariableDeclaration","scope":23,"src":"336:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":18,"name":"bytes","nodeType":"ElementaryTypeName","src":"336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":false,"mutability":"mutable","name":"_reporter","nameLocation":"370:9:0","nodeType":"VariableDeclaration","scope":23,"src":"362:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"231:154:0"},"src":"216:170:0"},{"anonymous":false,"eventSelector":"a96c2cce65119a2170d1711a6e82f18f2006448828483ba7545e595476543647","id":29,"name":"NewStaker","nameLocation":"397:9:0","nodeType":"EventDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"indexed":false,"mutability":"mutable","name":"_staker","nameLocation":"415:7:0","nodeType":"VariableDeclaration","scope":29,"src":"407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":27,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"432:7:0","nodeType":"VariableDeclaration","scope":29,"src":"424:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"406:34:0"},"src":"391:50:0"},{"anonymous":false,"eventSelector":"3d8d9df4bd0172df32e557fa48e96435cd7f2cac06aaffacfaee608e6f7898ef","id":35,"name":"StakeWithdrawRequested","nameLocation":"452:22:0","nodeType":"EventDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"indexed":false,"mutability":"mutable","name":"_staker","nameLocation":"483:7:0","nodeType":"VariableDeclaration","scope":35,"src":"475:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"500:7:0","nodeType":"VariableDeclaration","scope":35,"src":"492:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"474:34:0"},"src":"446:63:0"},{"anonymous":false,"eventSelector":"4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec","id":39,"name":"StakeWithdrawn","nameLocation":"520:14:0","nodeType":"EventDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":false,"mutability":"mutable","name":"_staker","nameLocation":"543:7:0","nodeType":"VariableDeclaration","scope":39,"src":"535:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"535:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"534:17:0"},"src":"514:38:0"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":47,"name":"Transfer","nameLocation":"563:8:0","nodeType":"EventDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"588:4:0","nodeType":"VariableDeclaration","scope":47,"src":"572:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":43,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"610:2:0","nodeType":"VariableDeclaration","scope":47,"src":"594:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"594:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"622:5:0","nodeType":"VariableDeclaration","scope":47,"src":"614:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"571:57:0"},"src":"557:72:0"},{"constant":false,"functionSelector":"64473df2","id":53,"mutability":"mutable","name":"isDisputed","nameLocation":"702:10:0","nodeType":"VariableDeclaration","scope":1391,"src":"650:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"},"typeName":{"id":52,"keyType":{"id":48,"name":"bytes32","nodeType":"ElementaryTypeName","src":"658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"650:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"},"valueType":{"id":51,"keyType":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"669:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":50,"name":"bool","nodeType":"ElementaryTypeName","src":"688:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"217053c0","id":59,"mutability":"mutable","name":"reporterByTimestamp","nameLocation":"805:19:0","nodeType":"VariableDeclaration","scope":1391,"src":"750:74:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(bytes32 => mapping(uint256 => address))"},"typeName":{"id":58,"keyType":{"id":54,"name":"bytes32","nodeType":"ElementaryTypeName","src":"758:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"750:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(bytes32 => mapping(uint256 => address))"},"valueType":{"id":57,"keyType":{"id":55,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"769:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"id":64,"mutability":"mutable","name":"stakerDetails","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":1391,"src":"830:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo)"},"typeName":{"id":63,"keyType":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"830:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo)"},"valueType":{"id":62,"nodeType":"UserDefinedTypeName","pathNode":{"id":61,"name":"StakeInfo","nameLocations":["849:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":124,"src":"849:9:0"},"referencedDeclaration":124,"src":"849:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"}}},"visibility":"internal"},{"constant":false,"functionSelector":"f25133f3","id":69,"mutability":"mutable","name":"timestamps","nameLocation":"971:10:0","nodeType":"VariableDeclaration","scope":1391,"src":"934:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[])"},"typeName":{"id":68,"keyType":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"942:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"934:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[])"},"valueType":{"baseType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":67,"nodeType":"ArrayTypeName","src":"953:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"602bf227","id":73,"mutability":"mutable","name":"tips","nameLocation":"1022:4:0","nodeType":"VariableDeclaration","scope":1391,"src":"987:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":72,"keyType":{"id":70,"name":"bytes32","nodeType":"ElementaryTypeName","src":"995:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"987:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"091b50ff","id":79,"mutability":"mutable","name":"values","nameLocation":"1145:6:0","nodeType":"VariableDeclaration","scope":1391,"src":"1092:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bytes))"},"typeName":{"id":78,"keyType":{"id":74,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1100:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1092:45:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bytes))"},"valueType":{"id":77,"keyType":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1111:25:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes)"},"valueType":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"1130:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c979fe9f","id":84,"mutability":"mutable","name":"voteRounds","nameLocation":"1226:10:0","nodeType":"VariableDeclaration","scope":1391,"src":"1189:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[])"},"typeName":{"id":83,"keyType":{"id":80,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1197:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1189:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[])"},"valueType":{"baseType":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":82,"nodeType":"ArrayTypeName","src":"1208:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"id":90,"mutability":"mutable","name":"_allowances","nameLocation":"1362:11:0","nodeType":"VariableDeclaration","scope":1391,"src":"1306:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":89,"keyType":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1306:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":88,"keyType":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"1333:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1325:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":94,"mutability":"mutable","name":"_balances","nameLocation":"1415:9:0","nodeType":"VariableDeclaration","scope":1391,"src":"1379:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":93,"keyType":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1387:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1379:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"60c7dc47","id":96,"mutability":"mutable","name":"stakeAmount","nameLocation":"1446:11:0","nodeType":"VariableDeclaration","scope":1391,"src":"1431:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"96426d97","id":99,"mutability":"constant","name":"timeBasedReward","nameLocation":"1487:15:0","nodeType":"VariableDeclaration","scope":1391,"src":"1463:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35653137","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1505:4:0","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"5e17"},"visibility":"public"},{"constant":false,"functionSelector":"69d43bd3","id":101,"mutability":"mutable","name":"tipsInContract","nameLocation":"1602:14:0","nodeType":"VariableDeclaration","scope":1391,"src":"1587:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c6384071","id":103,"mutability":"mutable","name":"voteCount","nameLocation":"1675:9:0","nodeType":"VariableDeclaration","scope":1391,"src":"1660:24:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":105,"mutability":"mutable","name":"token","nameLocation":"1705:5:0","nodeType":"VariableDeclaration","scope":1391,"src":"1690:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":107,"mutability":"mutable","name":"_totalSupply","nameLocation":"1732:12:0","nodeType":"VariableDeclaration","scope":1391,"src":"1716:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":109,"mutability":"mutable","name":"_name","nameLocation":"1765:5:0","nodeType":"VariableDeclaration","scope":1391,"src":"1750:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":108,"name":"string","nodeType":"ElementaryTypeName","src":"1750:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":111,"mutability":"mutable","name":"_symbol","nameLocation":"1791:7:0","nodeType":"VariableDeclaration","scope":1391,"src":"1776:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":110,"name":"string","nodeType":"ElementaryTypeName","src":"1776:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":113,"mutability":"mutable","name":"_decimals","nameLocation":"1818:9:0","nodeType":"VariableDeclaration","scope":1391,"src":"1804:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":112,"name":"uint8","nodeType":"ElementaryTypeName","src":"1804:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"canonicalName":"TellorPlayground.StakeInfo","id":124,"members":[{"constant":false,"id":115,"mutability":"mutable","name":"startDate","nameLocation":"1884:9:0","nodeType":"VariableDeclaration","scope":124,"src":"1876:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"stakedBalance","nameLocation":"1930:13:0","nodeType":"VariableDeclaration","scope":124,"src":"1922:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"lockedBalance","nameLocation":"1979:13:0","nodeType":"VariableDeclaration","scope":124,"src":"1971:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"reporterLastTimestamp","nameLocation":"2042:21:0","nodeType":"VariableDeclaration","scope":124,"src":"2034:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"reportsSubmitted","nameLocation":"2128:16:0","nodeType":"VariableDeclaration","scope":124,"src":"2120:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1856:9:0","nodeType":"StructDefinition","scope":1391,"src":"1849:351:0","visibility":"public"},{"body":{"id":147,"nodeType":"Block","src":"2299:124:0","statements":[{"expression":{"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":128,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2309:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"54656c6c6f72506c617967726f756e64","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2317:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a51d9d55f81c1d139d00a35fe45d3274bad996badcbc04d6c9b409ab08c9ed24","typeString":"literal_string \"TellorPlayground\""},"value":"TellorPlayground"},"src":"2309:26:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":131,"nodeType":"ExpressionStatement","src":"2309:26:0"},{"expression":{"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":132,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2345:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"54524250","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2355:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0a2c6180d1ed34252a94f0ebb2b60879dac0618c8b26c1bc5fe17abaafe1942","typeString":"literal_string \"TRBP\""},"value":"TRBP"},"src":"2345:16:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":135,"nodeType":"ExpressionStatement","src":"2345:16:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2371:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2383:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2371:14:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":139,"nodeType":"ExpressionStatement","src":"2371:14:0"},{"expression":{"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":140,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2395:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":143,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2411:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2403:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"2403:7:0","typeDescriptions":{}}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2395:21:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":146,"nodeType":"ExpressionStatement","src":"2395:21:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2223:57:0","text":" @dev Initializes playground parameters"},"id":148,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"2296:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"2299:0:0"},"scope":1391,"src":"2285:138:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":166,"nodeType":"Block","src":"2653:75:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":156,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2685:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2689:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2685:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":160,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2705:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2697:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:0","typeDescriptions":{}}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":162,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2712:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":155,"name":"_transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"2671:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2671:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2663:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"2663:58:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"2429:166:0","text":" @dev Mock function for adding staking rewards. No rewards actually given to stakers\n @param _amount Amount of TRB to be added to the contract"},"functionSelector":"d9c51cd4","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"addStakingRewards","nameLocation":"2609:17:0","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"_amount","nameLocation":"2635:7:0","nodeType":"VariableDeclaration","scope":167,"src":"2627:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2626:17:0"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[],"src":"2653:0:0"},"scope":1391,"src":"2600:128:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":186,"nodeType":"Block","src":"3118:77:0","statements":[{"expression":{"arguments":[{"expression":{"id":178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3137:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3137:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":180,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"3149:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":181,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3159:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":177,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"3128:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3128:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"ExpressionStatement","src":"3128:39:0"},{"expression":{"hexValue":"74727565","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3184:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":176,"id":185,"nodeType":"Return","src":"3177:11:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2734:304:0","text":" @dev Approves amount that an address is alowed to spend of behalf of another\n @param _spender The address which is allowed to spend the tokens\n @param _amount The amount that msg.sender is allowing spender to use\n @return bool Whether the transaction succeeded"},"functionSelector":"095ea7b3","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3052:7:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"_spender","nameLocation":"3068:8:0","nodeType":"VariableDeclaration","scope":187,"src":"3060:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"3060:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"_amount","nameLocation":"3086:7:0","nodeType":"VariableDeclaration","scope":187,"src":"3078:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3059:35:0"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3113:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"3113:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3112:6:0"},"scope":1391,"src":"3043:152:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":230,"nodeType":"Block","src":"3452:236:0","statements":[{"expression":{"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":195,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3462:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bytes storage ref))"}},"id":198,"indexExpression":{"id":196,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3469:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3462:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes storage ref)"}},"id":199,"indexExpression":{"id":197,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3479:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3462:28:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3499:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3493:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3493:5:0","typeDescriptions":{}}},"id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3493:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3462:40:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":205,"nodeType":"ExpressionStatement","src":"3462:40:0"},{"expression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":206,"name":"isDisputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"3512:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"}},"id":209,"indexExpression":{"id":207,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3523:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3512:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":210,"indexExpression":{"id":208,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3533:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3512:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3547:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3512:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":213,"nodeType":"ExpressionStatement","src":"3512:39:0"},{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3561:11:0","subExpression":{"id":214,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3561:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":216,"nodeType":"ExpressionStatement","src":"3561:11:0"},{"expression":{"arguments":[{"id":227,"name":"voteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3662:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":217,"name":"voteRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3582:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":225,"indexExpression":{"arguments":[{"arguments":[{"id":221,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3620:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":222,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"3630:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":219,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3603:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3607:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"3603:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3593:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:61:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3644:4:0","memberName":"push","nodeType":"MemberAccess","src":"3582:66:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"ExpressionStatement","src":"3582:99:0"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3201:177:0","text":" @dev A mock function to create a dispute\n @param _queryId The tellorId to be disputed\n @param _timestamp the timestamp of the value to be disputed"},"functionSelector":"1f379acc","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"beginDispute","nameLocation":"3392:12:0","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"_queryId","nameLocation":"3413:8:0","nodeType":"VariableDeclaration","scope":231,"src":"3405:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3405:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"_timestamp","nameLocation":"3431:10:0","nodeType":"VariableDeclaration","scope":231,"src":"3423:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3404:38:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"3452:0:0"},"scope":1391,"src":"3383:305:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":317,"nodeType":"Block","src":"3852:799:0","statements":[{"assignments":[239],"declarations":[{"constant":false,"id":239,"mutability":"mutable","name":"_staker","nameLocation":"3880:7:0","nodeType":"VariableDeclaration","scope":317,"src":"3862:25:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"StakeInfo","nameLocations":["3862:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":124,"src":"3862:9:0"},"referencedDeclaration":124,"src":"3862:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"}},"visibility":"internal"}],"id":244,"initialValue":{"baseExpression":{"id":240,"name":"stakerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"3890:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo storage ref)"}},"id":243,"indexExpression":{"expression":{"id":241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3904:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3908:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3904:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3890:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage","typeString":"struct TellorPlayground.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3862:53:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":245,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3929:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3937:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"3929:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3953:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3929:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":296,"nodeType":"Block","src":"4385:83:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":286,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4421:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4425:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4421:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":290,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4441:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4433:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4433:7:0","typeDescriptions":{}}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4433:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":292,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":285,"name":"_transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"4407:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4399:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"4399:58:0"}]},"id":297,"nodeType":"IfStatement","src":"3925:543:0","trueBody":{"id":283,"nodeType":"Block","src":"3956:423:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":249,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3974:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3982:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"3974:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":251,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"3999:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3974:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":281,"nodeType":"Block","src":"4079:290:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4165:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4169:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4165:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":266,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4209:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4201:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:0","typeDescriptions":{}}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4201:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":268,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4240:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":269,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4250:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4258:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"4250:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4240:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":261,"name":"_transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"4126:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:167:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4097:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4097:214:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":274,"nodeType":"ExpressionStatement","src":"4097:214:0"},{"expression":{"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":275,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4329:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4337:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"4329:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4353:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4329:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":280,"nodeType":"ExpressionStatement","src":"4329:25:0"}]},"id":282,"nodeType":"IfStatement","src":"3970:399:0","trueBody":{"id":259,"nodeType":"Block","src":"4008:65:0","statements":[{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":253,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4026:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4034:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"4026:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":256,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4051:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4026:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":258,"nodeType":"ExpressionStatement","src":"4026:32:0"}]}}]}},{"expression":{"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":298,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4477:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4485:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":115,"src":"4477:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":301,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4497:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4503:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4497:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4477:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":304,"nodeType":"ExpressionStatement","src":"4477:35:0"},{"expression":{"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":305,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4567:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4575:13:0","memberName":"stakedBalance","nodeType":"MemberAccess","referencedDeclaration":117,"src":"4567:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":308,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4592:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4567:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":310,"nodeType":"ExpressionStatement","src":"4567:32:0"},{"eventCall":{"arguments":[{"expression":{"id":312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4624:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4628:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4624:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":314,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":311,"name":"NewStaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4614:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"EmitStatement","src":"4609:35:0"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"3694:105:0","text":" @dev Allows a reporter to submit stake\n @param _amount amount of tokens to stake"},"functionSelector":"cb82cc8f","id":318,"implemented":true,"kind":"function","modifiers":[],"name":"depositStake","nameLocation":"3813:12:0","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"_amount","nameLocation":"3834:7:0","nodeType":"VariableDeclaration","scope":318,"src":"3826:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3826:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3825:17:0"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3852:0:0"},"scope":1391,"src":"3804:847:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":329,"nodeType":"Block","src":"4839:41:0","statements":[{"expression":{"arguments":[{"id":325,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4855:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:10:0","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}],"id":324,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4849:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4849:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"4849:24:0"}]},"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"4657:137:0","text":" @dev Public function to mint tokens to the given address\n @param _user The address which will receive the tokens"},"functionSelector":"b86d1d63","id":330,"implemented":true,"kind":"function","modifiers":[],"name":"faucet","nameLocation":"4808:6:0","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"_user","nameLocation":"4823:5:0","nodeType":"VariableDeclaration","scope":330,"src":"4815:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"4815:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4814:15:0"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"4839:0:0"},"scope":1391,"src":"4799:81:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":377,"nodeType":"Block","src":"5094:373:0","statements":[{"assignments":[338],"declarations":[{"constant":false,"id":338,"mutability":"mutable","name":"_staker","nameLocation":"5122:7:0","nodeType":"VariableDeclaration","scope":377,"src":"5104:25:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"},"typeName":{"id":337,"nodeType":"UserDefinedTypeName","pathNode":{"id":336,"name":"StakeInfo","nameLocations":["5104:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":124,"src":"5104:9:0"},"referencedDeclaration":124,"src":"5104:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"}},"visibility":"internal"}],"id":343,"initialValue":{"baseExpression":{"id":339,"name":"stakerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"5132:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo storage ref)"}},"id":342,"indexExpression":{"expression":{"id":340,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5146:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5146:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5132:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage","typeString":"struct TellorPlayground.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5104:53:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":345,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5188:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5196:13:0","memberName":"stakedBalance","nodeType":"MemberAccess","referencedDeclaration":117,"src":"5188:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":347,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5188:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e73756666696369656e74207374616b65642062616c616e6365","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5234:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8d4cb8e01b84ee20a4e50dd6369720cccce60f70a5f340975bb2a78d6c776db","typeString":"literal_string \"insufficient staked balance\""},"value":"insufficient staked balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8d4cb8e01b84ee20a4e50dd6369720cccce60f70a5f340975bb2a78d6c776db","typeString":"literal_string \"insufficient staked balance\""}],"id":344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5167:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5167:106:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"ExpressionStatement","src":"5167:106:0"},{"expression":{"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":352,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5283:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5291:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":115,"src":"5283:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":355,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5303:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5309:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"5303:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5283:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":358,"nodeType":"ExpressionStatement","src":"5283:35:0"},{"expression":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":359,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5328:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5336:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"5328:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":362,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5328:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":364,"nodeType":"ExpressionStatement","src":"5328:32:0"},{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":365,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5370:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5378:13:0","memberName":"stakedBalance","nodeType":"MemberAccess","referencedDeclaration":117,"src":"5370:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":368,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5395:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5370:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":370,"nodeType":"ExpressionStatement","src":"5370:32:0"},{"eventCall":{"arguments":[{"expression":{"id":372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5440:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5444:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5440:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":374,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"5452:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":371,"name":"StakeWithdrawRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"5417:22:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5417:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"EmitStatement","src":"5412:48:0"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"4886:145:0","text":" @dev Allows a reporter to request to withdraw their stake\n @param _amount amount of staked tokens requesting to withdraw"},"functionSelector":"8929f4c6","id":378,"implemented":true,"kind":"function","modifiers":[],"name":"requestStakingWithdraw","nameLocation":"5045:22:0","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"_amount","nameLocation":"5076:7:0","nodeType":"VariableDeclaration","scope":378,"src":"5068:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5068:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5067:17:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"5094:0:0"},"scope":1391,"src":"5036:431:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":485,"nodeType":"Block","src":"6014:850:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":392,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6042:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6032:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6032:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6063:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":394,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6053:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6053:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6032:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"76616c7565206d757374206265207375626d6974746564","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6068:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_636f174ff67ca7140adc9458c2b19043be8a02ad18dc01646daef061a2b7bffe","typeString":"literal_string \"value must be submitted\""},"value":"value must be submitted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_636f174ff67ca7140adc9458c2b19043be8a02ad18dc01646daef061a2b7bffe","typeString":"literal_string \"value must be submitted\""}],"id":390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6024:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6024:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"ExpressionStatement","src":"6024:70:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"6125:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":403,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"6135:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":405,"indexExpression":{"id":404,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6146:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6135:20:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6156:6:0","memberName":"length","nodeType":"MemberAccess","src":"6135:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6125:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"6166:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6166:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6125:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f6e6365206d757374206d617463682074696d657374616d7020696e646578","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6191:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b15e51d279d80d81e1fc0908dcc556966bdf31135ced551977dc05553339722","typeString":"literal_string \"nonce must match timestamp index\""},"value":"nonce must match timestamp index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b15e51d279d80d81e1fc0908dcc556966bdf31135ced551977dc05553339722","typeString":"literal_string \"nonce must match timestamp index\""}],"id":401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6104:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6104:131:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"6104:131:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6266:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":418,"name":"_queryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6288:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":417,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6278:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6278:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6266:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":423,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6311:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6303:7:0","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6303:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6324:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6303:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6266:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6964206d7573742062652068617368206f662062797465732064617461","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6341:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_365165a3cc331b03e63440264952201ac1cbb1ccd5c356779f410908d37b2f0f","typeString":"literal_string \"id must be hash of bytes data\""},"value":"id must be hash of bytes data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_365165a3cc331b03e63440264952201ac1cbb1ccd5c356779f410908d37b2f0f","typeString":"literal_string \"id must be hash of bytes data\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6245:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6245:137:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"6245:137:0"},{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":431,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"6392:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bytes storage ref))"}},"id":435,"indexExpression":{"id":432,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6399:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6392:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes storage ref)"}},"id":436,"indexExpression":{"expression":{"id":433,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6409:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6415:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6409:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6392:33:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":437,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6428:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"6392:42:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":439,"nodeType":"ExpressionStatement","src":"6392:42:0"},{"expression":{"arguments":[{"expression":{"id":444,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6470:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6476:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6470:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":440,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"6444:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":442,"indexExpression":{"id":441,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6455:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6444:20:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6465:4:0","memberName":"push","nodeType":"MemberAccess","src":"6444:25:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6444:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"6444:42:0"},{"expression":{"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":448,"name":"reporterByTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"6496:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(bytes32 => mapping(uint256 => address))"}},"id":452,"indexExpression":{"id":449,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6516:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6496:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":453,"indexExpression":{"expression":{"id":450,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6526:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6532:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6526:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6496:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6545:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6549:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6545:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6496:59:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":457,"nodeType":"ExpressionStatement","src":"6496:59:0"},{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":458,"name":"stakerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"6565:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo storage ref)"}},"id":461,"indexExpression":{"expression":{"id":459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6579:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6583:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6579:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6565:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage","typeString":"struct TellorPlayground.StakeInfo storage ref"}},"id":462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6591:21:0","memberName":"reporterLastTimestamp","nodeType":"MemberAccess","referencedDeclaration":121,"src":"6565:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":463,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6615:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6621:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6615:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6565:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":466,"nodeType":"ExpressionStatement","src":"6565:65:0"},{"expression":{"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6640:44:0","subExpression":{"expression":{"baseExpression":{"id":467,"name":"stakerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"6640:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo storage ref)"}},"id":470,"indexExpression":{"expression":{"id":468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6654:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6658:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6654:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6640:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage","typeString":"struct TellorPlayground.StakeInfo storage ref"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6666:16:0","memberName":"reportsSubmitted","nodeType":"MemberAccess","referencedDeclaration":123,"src":"6640:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"nodeType":"ExpressionStatement","src":"6640:44:0"},{"eventCall":{"arguments":[{"id":475,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6722:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":476,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6744:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6750:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6744:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":478,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6773:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":479,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"6793:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":480,"name":"_queryData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6813:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6837:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6841:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6837:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":474,"name":"NewReport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"6699:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,bytes memory,uint256,bytes memory,address)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6699:158:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"EmitStatement","src":"6694:163:0"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"5473:343:0","text":" @dev A mock function to submit a value to be read without reporter staking needed\n @param _queryId the ID to associate the value to\n @param _value the value for the queryId\n @param _nonce the current value count for the query id\n @param _queryData the data used by reporters to fulfill the data query"},"functionSelector":"5eaa9ced","id":486,"implemented":true,"kind":"function","modifiers":[],"name":"submitValue","nameLocation":"5873:11:0","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"_queryId","nameLocation":"5902:8:0","nodeType":"VariableDeclaration","scope":486,"src":"5894:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5894:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"_value","nameLocation":"5935:6:0","nodeType":"VariableDeclaration","scope":486,"src":"5920:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":382,"name":"bytes","nodeType":"ElementaryTypeName","src":"5920:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"_nonce","nameLocation":"5959:6:0","nodeType":"VariableDeclaration","scope":486,"src":"5951:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"5951:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"_queryData","nameLocation":"5988:10:0","nodeType":"VariableDeclaration","scope":486,"src":"5975:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":386,"name":"bytes","nodeType":"ElementaryTypeName","src":"5975:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:120:0"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"6014:0:0"},"scope":1391,"src":"5864:1000:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":505,"nodeType":"Block","src":"7207:80:0","statements":[{"expression":{"arguments":[{"expression":{"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7227:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7231:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7227:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7239:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"7251:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":496,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"7217:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"7217:42:0"},{"expression":{"hexValue":"74727565","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7276:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":495,"id":504,"nodeType":"Return","src":"7269:11:0"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"6870:235:0","text":" @dev Transfer tokens from one user to another\n @param _recipient The destination address\n @param _amount The amount of tokens, including decimals, to transfer\n @return bool If the transfer succeeded"},"functionSelector":"a9059cbb","id":506,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"7119:8:0","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"_recipient","nameLocation":"7136:10:0","nodeType":"VariableDeclaration","scope":506,"src":"7128:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"7128:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"_amount","nameLocation":"7156:7:0","nodeType":"VariableDeclaration","scope":506,"src":"7148:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"7148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7127:37:0"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":506,"src":"7197:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":493,"name":"bool","nodeType":"ElementaryTypeName","src":"7197:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7196:6:0"},"scope":1391,"src":"7110:177:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":540,"nodeType":"Block","src":"7699:206:0","statements":[{"expression":{"arguments":[{"id":519,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7719:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"7728:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":518,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"7709:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7709:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"7709:39:0"},{"expression":{"arguments":[{"id":525,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7780:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7801:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7805:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7801:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":528,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"7825:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":530,"indexExpression":{"id":529,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7837:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7825:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":533,"indexExpression":{"expression":{"id":531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7846:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7850:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7846:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7825:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":534,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7860:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7825:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":524,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"7758:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7758:119:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"7758:119:0"},{"expression":{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7894:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":517,"id":539,"nodeType":"Return","src":"7887:11:0"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"7293:273:0","text":" @dev Transfer tokens from user to another\n @param _sender The address which owns the tokens\n @param _recipient The destination address\n @param _amount The quantity of tokens to transfer\n @return bool Whether the transfer succeeded"},"functionSelector":"23b872dd","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"7580:12:0","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"_sender","nameLocation":"7610:7:0","nodeType":"VariableDeclaration","scope":541,"src":"7602:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"7602:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"_recipient","nameLocation":"7635:10:0","nodeType":"VariableDeclaration","scope":541,"src":"7627:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"7627:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"_amount","nameLocation":"7663:7:0","nodeType":"VariableDeclaration","scope":541,"src":"7655:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"7655:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7592:84:0"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"7693:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"7693:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7692:6:0"},"scope":1391,"src":"7571:334:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":594,"nodeType":"Block","src":"8002:427:0","statements":[{"assignments":[547],"declarations":[{"constant":false,"id":547,"mutability":"mutable","name":"_s","nameLocation":"8030:2:0","nodeType":"VariableDeclaration","scope":594,"src":"8012:20:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"},"typeName":{"id":546,"nodeType":"UserDefinedTypeName","pathNode":{"id":545,"name":"StakeInfo","nameLocations":["8012:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":124,"src":"8012:9:0"},"referencedDeclaration":124,"src":"8012:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"}},"visibility":"internal"}],"id":552,"initialValue":{"baseExpression":{"id":548,"name":"stakerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"8035:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo storage ref)"}},"id":551,"indexExpression":{"expression":{"id":549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8049:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8053:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8049:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8035:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage","typeString":"struct TellorPlayground.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8012:48:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":554,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8147:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8153:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"8147:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":556,"name":"_s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8165:2:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8168:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":115,"src":"8165:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8147:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"37","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8181:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"8147:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"372064617973206469646e27742070617373","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8189:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5164376a34f3fc53325bb8adc1cd7d656523d5ae2d49ee3ed4e8e2f54a5d3790","typeString":"literal_string \"7 days didn't pass\""},"value":"7 days didn't pass"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5164376a34f3fc53325bb8adc1cd7d656523d5ae2d49ee3ed4e8e2f54a5d3790","typeString":"literal_string \"7 days didn't pass\""}],"id":553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8139:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"8139:71:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":565,"name":"_s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8228:2:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8231:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"8228:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8247:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8228:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7265706f72746572206e6f74206c6f636b656420666f72207769746864726177616c","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8250:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c41f72c59331ebb81fb9f07a8ed7914d4a048f238f80301189e2a9368bbeb774","typeString":"literal_string \"reporter not locked for withdrawal\""},"value":"reporter not locked for withdrawal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c41f72c59331ebb81fb9f07a8ed7914d4a048f238f80301189e2a9368bbeb774","typeString":"literal_string \"reporter not locked for withdrawal\""}],"id":564,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8220:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8220:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"ExpressionStatement","src":"8220:67:0"},{"expression":{"arguments":[{"arguments":[{"id":575,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8315:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8307:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"8307:7:0","typeDescriptions":{}}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8307:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8322:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8326:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8322:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":579,"name":"_s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8334:2:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8337:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"8334:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":572,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"8297:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8297:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"ExpressionStatement","src":"8297:54:0"},{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":583,"name":"_s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8361:2:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8364:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"8361:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8380:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8361:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ExpressionStatement","src":"8361:20:0"},{"eventCall":{"arguments":[{"expression":{"id":590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8411:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8415:6:0","memberName":"sender","nodeType":"MemberAccess","src":"8411:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":589,"name":"StakeWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"8396:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8396:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"EmitStatement","src":"8391:31:0"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"7911:52:0","text":" @dev Withdraws a reporter's stake"},"functionSelector":"bed9d861","id":595,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"7977:13:0","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"7990:2:0"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"8002:0:0"},"scope":1391,"src":"7968:461:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":611,"nodeType":"Block","src":"8804:53:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":605,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"8821:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":607,"indexExpression":{"id":606,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"8833:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8821:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":609,"indexExpression":{"id":608,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8841:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8821:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":604,"id":610,"nodeType":"Return","src":"8814:36:0"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"8450:265:0","text":" @dev Returns the amount that an address is alowed to spend of behalf of another\n @param _owner The address which owns the tokens\n @param _spender The address that will use the tokens\n @return uint256 The amount of allowed tokens"},"functionSelector":"dd62ed3e","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"8729:9:0","nodeType":"FunctionDefinition","parameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"_owner","nameLocation":"8747:6:0","nodeType":"VariableDeclaration","scope":612,"src":"8739:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"_spender","nameLocation":"8763:8:0","nodeType":"VariableDeclaration","scope":612,"src":"8755:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"8755:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8738:34:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"8796:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"8796:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8795:9:0"},"scope":1391,"src":"8720:137:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":624,"nodeType":"Block","src":"9077:43:0","statements":[{"expression":{"baseExpression":{"id":620,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"9094:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":621,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"9104:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9094:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":619,"id":623,"nodeType":"Return","src":"9087:26:0"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"8863:140:0","text":" @dev Returns the balance of a given user.\n @param _account user address\n @return uint256 user's token balance"},"functionSelector":"70a08231","id":625,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"9017:9:0","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"_account","nameLocation":"9035:8:0","nodeType":"VariableDeclaration","scope":625,"src":"9027:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"9027:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9026:18:0"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"9068:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"9068:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9067:9:0"},"scope":1391,"src":"9008:112:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":633,"nodeType":"Block","src":"9348:33:0","statements":[{"expression":{"id":631,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"9365:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":630,"id":632,"nodeType":"Return","src":"9358:16:0"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"9126:167:0","text":" @dev Returns the number of decimals used to get its user representation.\n @return uint8 the number of decimals; used only for display purposes"},"functionSelector":"313ce567","id":634,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"9307:8:0","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"9315:2:0"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":634,"src":"9341:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":628,"name":"uint8","nodeType":"ElementaryTypeName","src":"9341:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"9340:7:0"},"scope":1391,"src":"9298:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":688,"nodeType":"Block","src":"10016:364:0","statements":[{"assignments":[649,651],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"_found","nameLocation":"10032:6:0","nodeType":"VariableDeclaration","scope":688,"src":"10027:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"10027:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"_index","nameLocation":"10048:6:0","nodeType":"VariableDeclaration","scope":688,"src":"10040:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"10040:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":656,"initialValue":{"arguments":[{"id":653,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"10093:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":654,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"10115:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":652,"name":"getIndexForDataBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"10058:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (bool,uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10026:109:0"},{"condition":{"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10149:7:0","subExpression":{"id":657,"name":"_found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"10150:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":667,"nodeType":"IfStatement","src":"10145:41:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10166:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10179:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10173:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"10173:5:0","typeDescriptions":{}}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10173:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10184:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10165:21:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$_t_rational_0_by_1_$","typeString":"tuple(bool,bytes memory,int_const 0)"}},"functionReturnParameters":647,"id":666,"nodeType":"Return","src":"10158:28:0"}},{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":668,"name":"_timestampRetrieved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"10196:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":670,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"10248:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":671,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"10258:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":669,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"10218:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10218:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10196:69:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":674,"nodeType":"ExpressionStatement","src":"10196:69:0"},{"expression":{"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"10275:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":676,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"10284:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bytes storage ref))"}},"id":678,"indexExpression":{"id":677,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"10291:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes storage ref)"}},"id":680,"indexExpression":{"id":679,"name":"_timestampRetrieved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"10301:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10284:37:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"src":"10275:46:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":682,"nodeType":"ExpressionStatement","src":"10275:46:0"},{"expression":{"components":[{"hexValue":"74727565","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10339:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":684,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"10345:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":685,"name":"_timestampRetrieved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"10353:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10338:35:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bool,bytes memory,uint256)"}},"functionReturnParameters":647,"id":687,"nodeType":"Return","src":"10331:42:0"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"9387:398:0","text":" @dev Retrieves the latest value for the queryId before the specified timestamp\n @param _queryId is the queryId to look up the value for\n @param _timestamp before which to search for latest value\n @return _ifRetrieve bool true if able to retrieve a non-zero value\n @return _value the value retrieved\n @return _timestampRetrieved the value's timestamp"},"functionSelector":"a792765f","id":689,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBefore","nameLocation":"9799:13:0","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"_queryId","nameLocation":"9821:8:0","nodeType":"VariableDeclaration","scope":689,"src":"9813:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9813:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"_timestamp","nameLocation":"9839:10:0","nodeType":"VariableDeclaration","scope":689,"src":"9831:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"9831:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9812:38:0"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"_ifRetrieve","nameLocation":"9916:11:0","nodeType":"VariableDeclaration","scope":689,"src":"9911:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":641,"name":"bool","nodeType":"ElementaryTypeName","src":"9911:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"_value","nameLocation":"9954:6:0","nodeType":"VariableDeclaration","scope":689,"src":"9941:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":643,"name":"bytes","nodeType":"ElementaryTypeName","src":"9941:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"_timestampRetrieved","nameLocation":"9982:19:0","nodeType":"VariableDeclaration","scope":689,"src":"9974:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"9974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9897:114:0"},"scope":1391,"src":"9790:590:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":973,"nodeType":"Block","src":"10964:4136:0","statements":[{"assignments":[702],"declarations":[{"constant":false,"id":702,"mutability":"mutable","name":"_count","nameLocation":"10982:6:0","nodeType":"VariableDeclaration","scope":973,"src":"10974:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"10974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"arguments":[{"id":704,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11017:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":703,"name":"getNewValueCountbyQueryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"10991:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10991:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10974:52:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"11040:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11049:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11040:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"11036:4031:0","trueBody":{"id":967,"nodeType":"Block","src":"11052:4015:0","statements":[{"assignments":[711],"declarations":[{"constant":false,"id":711,"mutability":"mutable","name":"_middle","nameLocation":"11074:7:0","nodeType":"VariableDeclaration","scope":967,"src":"11066:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"11066:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":712,"nodeType":"VariableDeclarationStatement","src":"11066:15:0"},{"assignments":[714],"declarations":[{"constant":false,"id":714,"mutability":"mutable","name":"_start","nameLocation":"11103:6:0","nodeType":"VariableDeclaration","scope":967,"src":"11095:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"11095:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":716,"initialValue":{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11112:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11095:18:0"},{"assignments":[718],"declarations":[{"constant":false,"id":718,"mutability":"mutable","name":"_end","nameLocation":"11135:4:0","nodeType":"VariableDeclaration","scope":967,"src":"11127:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":719,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"11142:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11151:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11142:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11127:25:0"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"_time","nameLocation":"11174:5:0","nodeType":"VariableDeclaration","scope":967,"src":"11166:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"11166:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":725,"nodeType":"VariableDeclarationStatement","src":"11166:13:0"},{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":726,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11258:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":728,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11296:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":729,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11306:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":727,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11266:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11266:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11258:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"11258:55:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":733,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11331:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":734,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"11340:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11331:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":740,"nodeType":"IfStatement","src":"11327:42:0","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11360:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11367:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11359:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":700,"id":739,"nodeType":"Return","src":"11352:17:0"}},{"expression":{"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":741,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11383:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":743,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11421:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":744,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11431:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11391:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11391:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11383:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":747,"nodeType":"ExpressionStatement","src":"11383:53:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11454:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":749,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"11462:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11454:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":790,"nodeType":"IfStatement","src":"11450:386:0","trueBody":{"id":789,"nodeType":"Block","src":"11474:362:0","statements":[{"body":{"id":769,"nodeType":"Block","src":"11541:122:0","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"11563:6:0","subExpression":{"id":759,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11563:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"11563:6:0"},{"expression":{"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":762,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11591:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":764,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11629:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":765,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11639:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":763,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11599:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11599:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11591:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":768,"nodeType":"ExpressionStatement","src":"11591:53:0"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":752,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11511:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":753,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11521:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":751,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11499:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":755,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11531:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11538:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11531:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11499:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":770,"nodeType":"WhileStatement","src":"11492:171:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":771,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11684:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11692:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11684:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":775,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11709:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":776,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"11719:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11697:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11697:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11684:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"11680:105:0","trueBody":{"id":783,"nodeType":"Block","src":"11727:58:0","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11757:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11764:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11756:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":700,"id":782,"nodeType":"Return","src":"11749:17:0"}]}},{"expression":{"components":[{"hexValue":"74727565","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":786,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11816:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11809:12:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":700,"id":788,"nodeType":"Return","src":"11802:19:0"}]}},{"body":{"id":965,"nodeType":"Block","src":"11937:3120:0","statements":[{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":792,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"11955:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"11966:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":794,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11973:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11966:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11965:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11983:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11965:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11965:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":801,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11991:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11965:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11955:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"11955:42:0"},{"expression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":805,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12015:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":807,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"12053:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":808,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"12063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12023:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12023:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12015:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":811,"nodeType":"ExpressionStatement","src":"12015:56:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12093:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":813,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"12101:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12093:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":963,"nodeType":"Block","src":"13541:1502:0","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"_prevTime","nameLocation":"13571:9:0","nodeType":"VariableDeclaration","scope":963,"src":"13563:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"13563:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":895,"initialValue":{"arguments":[{"id":890,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"13638:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":891,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"13672:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13682:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13672:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":889,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"13583:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13583:122:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13563:142:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"_prevTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"13731:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":897,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"13743:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13731:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":961,"nodeType":"Block","src":"14891:134:0","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":955,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"14984:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14991:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15001:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14991:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14984:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":960,"nodeType":"ExpressionStatement","src":"14984:18:0"}]},"id":962,"nodeType":"IfStatement","src":"13727:1298:0","trueBody":{"id":954,"nodeType":"Block","src":"13755:1130:0","statements":[{"condition":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13785:33:0","subExpression":{"arguments":[{"id":900,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"13798:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":901,"name":"_prevTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"13808:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":899,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"13786:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13786:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":952,"nodeType":"Block","src":"13961:902:0","statements":[{"expression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"14075:9:0","subExpression":{"id":911,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14075:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ExpressionStatement","src":"14075:9:0"},{"body":{"id":932,"nodeType":"Block","src":"14232:274:0","statements":[{"expression":{"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"14266:9:0","subExpression":{"id":922,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":924,"nodeType":"ExpressionStatement","src":"14266:9:0"},{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":925,"name":"_prevTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"14309:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":927,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14388:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":928,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14434:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":926,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"14321:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14321:154:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14309:166:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"14309:166:0"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":915,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14166:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":916,"name":"_prevTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"14176:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":914,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"14154:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14154:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":918,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14190:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14200:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14190:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14154:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"WhileStatement","src":"14114:392:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14572:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14583:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14572:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":938,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"14600:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":939,"name":"_prevTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"14610:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":937,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"14588:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14588:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14572:48:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"nodeType":"IfStatement","src":"14535:198:0","trueBody":{"id":946,"nodeType":"Block","src":"14651:82:0","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14693:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14692:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":700,"id":945,"nodeType":"Return","src":"14685:17:0"}]}},{"expression":{"components":[{"hexValue":"74727565","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14822:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":949,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"14828:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14821:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":700,"id":951,"nodeType":"Return","src":"14814:22:0"}]},"id":953,"nodeType":"IfStatement","src":"13781:1082:0","trueBody":{"id":910,"nodeType":"Block","src":"13820:135:0","statements":[{"expression":{"components":[{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13910:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"13916:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13926:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13916:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13909:19:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":700,"id":909,"nodeType":"Return","src":"13902:26:0"}]}}]}}]},"id":964,"nodeType":"IfStatement","src":"12089:2954:0","trueBody":{"id":886,"nodeType":"Block","src":"12113:1422:0","statements":[{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"_nextTime","nameLocation":"12190:9:0","nodeType":"VariableDeclaration","scope":886,"src":"12182:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"12182:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":823,"initialValue":{"arguments":[{"id":818,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"12257:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":819,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"12291:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12301:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12291:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12202:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12202:122:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12182:142:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"_nextTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"12350:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":825,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"12363:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12350:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":884,"nodeType":"Block","src":"13382:135:0","statements":[{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":878,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"13474:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"13483:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13493:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13483:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13474:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"nodeType":"ExpressionStatement","src":"13474:20:0"}]},"id":885,"nodeType":"IfStatement","src":"12346:1171:0","trueBody":{"id":877,"nodeType":"Block","src":"12375:1001:0","statements":[{"condition":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12405:29:0","subExpression":{"arguments":[{"id":828,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"12418:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":829,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12428:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":827,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"12406:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":875,"nodeType":"Block","src":"12569:785:0","statements":[{"body":{"id":855,"nodeType":"Block","src":"12797:270:0","statements":[{"expression":{"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"12831:9:0","subExpression":{"id":845,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"12831:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ExpressionStatement","src":"12831:9:0"},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":848,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12874:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":850,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"12949:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":851,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"12995:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"getTimestampbyQueryIdandIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12882:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bytes32,uint256) view returns (uint256)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:154:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12874:162:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"12874:162:0"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":838,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"12735:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":839,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"12745:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"12723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":841,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"12755:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12765:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12755:11:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12723:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":856,"nodeType":"WhileStatement","src":"12683:384:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"13100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13111:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13100:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":861,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"13128:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":862,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"13138:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":860,"name":"isInDispute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"13116:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) view returns (bool)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13116:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13100:44:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":870,"nodeType":"IfStatement","src":"13096:132:0","trueBody":{"id":869,"nodeType":"Block","src":"13146:82:0","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13188:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13195:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13187:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":700,"id":868,"nodeType":"Return","src":"13180:17:0"}]}},{"expression":{"components":[{"hexValue":"74727565","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13313:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":872,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"13319:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13312:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":700,"id":874,"nodeType":"Return","src":"13305:22:0"}]},"id":876,"nodeType":"IfStatement","src":"12401:953:0","trueBody":{"id":836,"nodeType":"Block","src":"12436:127:0","statements":[{"expression":{"components":[{"hexValue":"74727565","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12522:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":833,"name":"_middle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"12528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12521:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":700,"id":835,"nodeType":"Return","src":"12514:22:0"}]}}]}}]}}]},"condition":{"hexValue":"74727565","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":966,"nodeType":"WhileStatement","src":"11924:3133:0"}]}},{"expression":{"components":[{"hexValue":"66616c7365","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15084:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15091:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15083:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":700,"id":972,"nodeType":"Return","src":"15076:17:0"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"10386:382:0","text":" @dev Retrieves latest array index of data before the specified timestamp for the queryId\n @param _queryId is the queryId to look up the index for\n @param _timestamp is the timestamp before which to search for the latest index\n @return _found whether the index was found\n @return _index the latest index found before the specified timestamp"},"functionSelector":"29449085","id":974,"implemented":true,"kind":"function","modifiers":[],"name":"getIndexForDataBefore","nameLocation":"10826:21:0","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"_queryId","nameLocation":"10856:8:0","nodeType":"VariableDeclaration","scope":974,"src":"10848:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10848:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"_timestamp","nameLocation":"10874:10:0","nodeType":"VariableDeclaration","scope":974,"src":"10866:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"10866:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10847:38:0"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"_found","nameLocation":"10936:6:0","nodeType":"VariableDeclaration","scope":974,"src":"10931:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":696,"name":"bool","nodeType":"ElementaryTypeName","src":"10931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"_index","nameLocation":"10952:6:0","nodeType":"VariableDeclaration","scope":974,"src":"10944:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10930:29:0"},"scope":1391,"src":"10817:4283:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":987,"nodeType":"Block","src":"15432:51:0","statements":[{"expression":{"expression":{"baseExpression":{"id":982,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"15449:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":984,"indexExpression":{"id":983,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"15460:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15449:20:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15470:6:0","memberName":"length","nodeType":"MemberAccess","src":"15449:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":981,"id":986,"nodeType":"Return","src":"15442:34:0"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"15106:210:0","text":" @dev Counts the number of values that have been submitted for a given ID\n @param _queryId the ID to look up\n @return uint256 count of the number of values received for the queryId"},"functionSelector":"77b03e0d","id":988,"implemented":true,"kind":"function","modifiers":[],"name":"getNewValueCountbyQueryId","nameLocation":"15330:25:0","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"_queryId","nameLocation":"15364:8:0","nodeType":"VariableDeclaration","scope":988,"src":"15356:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15355:18:0"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"15419:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"15419:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15418:9:0"},"scope":1391,"src":"15321:162:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1004,"nodeType":"Block","src":"15849:65:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":998,"name":"reporterByTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"15866:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(bytes32 => mapping(uint256 => address))"}},"id":1000,"indexExpression":{"id":999,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"15886:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15866:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1002,"indexExpression":{"id":1001,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"15896:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15866:41:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":997,"id":1003,"nodeType":"Return","src":"15859:48:0"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"15489:225:0","text":" @dev Returns the reporter for a given timestamp and queryId\n @param _queryId bytes32 version of the queryId\n @param _timestamp uint256 timestamp of report\n @return address of data reporter"},"functionSelector":"e07c5486","id":1005,"implemented":true,"kind":"function","modifiers":[],"name":"getReporterByTimestamp","nameLocation":"15728:22:0","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"_queryId","nameLocation":"15759:8:0","nodeType":"VariableDeclaration","scope":1005,"src":"15751:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"_timestamp","nameLocation":"15777:10:0","nodeType":"VariableDeclaration","scope":1005,"src":"15769:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"15769:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15750:38:0"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"15836:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"15836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15835:9:0"},"scope":1391,"src":"15719:195:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1013,"nodeType":"Block","src":"16068:35:0","statements":[{"expression":{"id":1011,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"16085:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1010,"id":1012,"nodeType":"Return","src":"16078:18:0"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"15920:85:0","text":" @dev Returns mock stake amount\n @return uint256 stake amount"},"functionSelector":"722580b6","id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"getStakeAmount","nameLocation":"16019:14:0","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"16033:2:0"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"16059:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"16059:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16058:9:0"},"scope":1391,"src":"16010:93:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1061,"nodeType":"Block","src":"17067:402:0","statements":[{"assignments":[1040],"declarations":[{"constant":false,"id":1040,"mutability":"mutable","name":"_staker","nameLocation":"17095:7:0","nodeType":"VariableDeclaration","scope":1061,"src":"17077:25:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"},"typeName":{"id":1039,"nodeType":"UserDefinedTypeName","pathNode":{"id":1038,"name":"StakeInfo","nameLocations":["17077:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":124,"src":"17077:9:0"},"referencedDeclaration":124,"src":"17077:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo"}},"visibility":"internal"}],"id":1044,"initialValue":{"baseExpression":{"id":1041,"name":"stakerDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"17105:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakeInfo_$124_storage_$","typeString":"mapping(address => struct TellorPlayground.StakeInfo storage ref)"}},"id":1043,"indexExpression":{"id":1042,"name":"_stakerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"17119:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17105:29:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage","typeString":"struct TellorPlayground.StakeInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17077:57:0"},{"expression":{"components":[{"expression":{"id":1045,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"17165:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17173:9:0","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":115,"src":"17165:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1047,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"17196:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":1048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17204:13:0","memberName":"stakedBalance","nodeType":"MemberAccess","referencedDeclaration":117,"src":"17196:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1049,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"17231:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":1050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17239:13:0","memberName":"lockedBalance","nodeType":"MemberAccess","referencedDeclaration":119,"src":"17231:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17266:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1052,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"17296:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":1053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17304:21:0","memberName":"reporterLastTimestamp","nodeType":"MemberAccess","referencedDeclaration":121,"src":"17296:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1054,"name":"_staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"17339:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$124_storage_ptr","typeString":"struct TellorPlayground.StakeInfo storage pointer"}},"id":1055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17347:16:0","memberName":"reportsSubmitted","nodeType":"MemberAccess","referencedDeclaration":123,"src":"17339:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17377:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17412:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17447:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":1059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17151:311:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_rational_0_by_1_$_t_uint256_$_t_uint256_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,int_const 0,uint256,uint256,int_const 0,int_const 0,bool)"}},"functionReturnParameters":1037,"id":1060,"nodeType":"Return","src":"17144:318:0"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"16109:659:0","text":" @dev Allows users to retrieve all information about a staker\n @param _stakerAddress address of staker inquiring about\n @return uint startDate of staking\n @return uint current amount staked\n @return uint current amount locked for withdrawal\n @return uint reward debt used to calculate staking reward\n @return uint reporter's last reported timestamp\n @return uint total number of reports submitted by reporter\n @return uint governance vote count when first staked\n @return uint number of votes case by staker when first staked\n @return uint whether staker is counted in totalStakers"},"functionSelector":"733bdef0","id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"getStakerInfo","nameLocation":"16782:13:0","nodeType":"FunctionDefinition","parameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"_stakerAddress","nameLocation":"16804:14:0","nodeType":"VariableDeclaration","scope":1062,"src":"16796:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"16796:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16795:24:0"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"16880:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"16901:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"16901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"16922:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"16922:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"16943:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"16943:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"16964:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"16985:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"16985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"17006:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"17006:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"17027:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"17027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"17048:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1035,"name":"bool","nodeType":"ElementaryTypeName","src":"17048:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16866:196:0"},"scope":1391,"src":"16773:696:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1095,"nodeType":"Block","src":"17821:155:0","statements":[{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"_len","nameLocation":"17839:4:0","nodeType":"VariableDeclaration","scope":1095,"src":"17831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"17831:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1078,"initialValue":{"expression":{"baseExpression":{"id":1074,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"17846:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":1076,"indexExpression":{"id":1075,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"17857:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17846:20:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17867:6:0","memberName":"length","nodeType":"MemberAccess","src":"17846:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17831:42:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1079,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"17887:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17895:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17887:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"17900:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1083,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"17908:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17900:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17887:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"nodeType":"IfStatement","src":"17883:41:0","trueBody":{"expression":{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17923:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1071,"id":1087,"nodeType":"Return","src":"17916:8:0"}},{"expression":{"baseExpression":{"baseExpression":{"id":1089,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"17941:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":1091,"indexExpression":{"id":1090,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"17952:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17941:20:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1093,"indexExpression":{"id":1092,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"17962:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17941:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1071,"id":1094,"nodeType":"Return","src":"17934:35:0"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"17475:210:0","text":" @dev Gets the timestamp for the value based on their index\n @param _queryId is the queryId to look up\n @param _index is the value index to look up\n @return uint256 timestamp"},"functionSelector":"ce5e11bf","id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"getTimestampbyQueryIdandIndex","nameLocation":"17699:29:0","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"_queryId","nameLocation":"17737:8:0","nodeType":"VariableDeclaration","scope":1096,"src":"17729:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"_index","nameLocation":"17755:6:0","nodeType":"VariableDeclaration","scope":1096,"src":"17747:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"17747:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17728:34:0"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"17808:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"17808:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17807:9:0"},"scope":1391,"src":"17690:286:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1109,"nodeType":"Block","src":"18254:41:0","statements":[{"expression":{"baseExpression":{"id":1105,"name":"voteRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"18271:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(bytes32 => uint256[] storage ref)"}},"id":1107,"indexExpression":{"id":1106,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"18282:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18271:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":1104,"id":1108,"nodeType":"Return","src":"18264:24:0"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"17982:191:0","text":" @dev Returns an array of voting rounds for a given vote\n @param _hash is the identifier hash for a vote\n @return uint256[] memory dispute IDs of the vote rounds"},"functionSelector":"248638e5","id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteRounds","nameLocation":"18187:13:0","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"_hash","nameLocation":"18209:5:0","nodeType":"VariableDeclaration","scope":1110,"src":"18201:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18201:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18200:15:0"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"18237:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"18237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1102,"nodeType":"ArrayTypeName","src":"18237:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"18236:18:0"},"scope":1391,"src":"18178:117:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1121,"nodeType":"Block","src":"18468:37:0","statements":[{"expression":{"arguments":[{"id":1118,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18493:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18485:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"18485:7:0","typeDescriptions":{}}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18485:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1115,"id":1120,"nodeType":"Return","src":"18478:20:0"}]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"18301:108:0","text":" @dev Returns the governance address of the contract\n @return address (this address)"},"functionSelector":"5aa6e675","id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"governance","nameLocation":"18423:10:0","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"18433:2:0"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"18459:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"18459:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18458:9:0"},"scope":1391,"src":"18414:91:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1138,"nodeType":"Block","src":"18843:56:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1132,"name":"isDisputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"18860:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"}},"id":1134,"indexExpression":{"id":1133,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"18871:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18860:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":1136,"indexExpression":{"id":1135,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"18881:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18860:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1131,"id":1137,"nodeType":"Return","src":"18853:39:0"}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"18511:213:0","text":" @dev Returns whether a given value is disputed\n @param _queryId unique ID of the data feed\n @param _timestamp timestamp of the value\n @return bool whether the value is disputed"},"functionSelector":"44e87f91","id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"isInDispute","nameLocation":"18738:11:0","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"_queryId","nameLocation":"18758:8:0","nodeType":"VariableDeclaration","scope":1139,"src":"18750:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18750:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"_timestamp","nameLocation":"18776:10:0","nodeType":"VariableDeclaration","scope":1139,"src":"18768:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"18768:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18749:38:0"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"18833:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1129,"name":"bool","nodeType":"ElementaryTypeName","src":"18833:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18832:6:0"},"scope":1391,"src":"18729:170:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1147,"nodeType":"Block","src":"19058:29:0","statements":[{"expression":{"id":1145,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"19075:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1144,"id":1146,"nodeType":"Return","src":"19068:12:0"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"18905:94:0","text":" @dev Returns the name of the token.\n @return string name of the token"},"functionSelector":"06fdde03","id":1148,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"19013:4:0","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"19017:2:0"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"19043:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1142,"name":"string","nodeType":"ElementaryTypeName","src":"19043:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19042:15:0"},"scope":1391,"src":"19004:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1164,"nodeType":"Block","src":"19452:52:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1158,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"19469:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bytes storage ref))"}},"id":1160,"indexExpression":{"id":1159,"name":"_queryId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"19476:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19469:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes storage ref)"}},"id":1162,"indexExpression":{"id":1161,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"19486:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19469:28:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":1157,"id":1163,"nodeType":"Return","src":"19462:35:0"}]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"19093:229:0","text":" @dev Retrieves value from oracle based on queryId/timestamp\n @param _queryId being requested\n @param _timestamp to retrieve data/value from\n @return bytes value for queryId/timestamp submitted"},"functionSelector":"c5958af9","id":1165,"implemented":true,"kind":"function","modifiers":[],"name":"retrieveData","nameLocation":"19336:12:0","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"_queryId","nameLocation":"19357:8:0","nodeType":"VariableDeclaration","scope":1165,"src":"19349:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19349:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"_timestamp","nameLocation":"19375:10:0","nodeType":"VariableDeclaration","scope":1165,"src":"19367:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"19367:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19348:38:0"},"returnParameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"19434:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"19434:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19433:14:0"},"scope":1391,"src":"19327:177:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1173,"nodeType":"Block","src":"19669:31:0","statements":[{"expression":{"id":1171,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"19686:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1170,"id":1172,"nodeType":"Return","src":"19679:14:0"}]},"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"19510:98:0","text":" @dev Returns the symbol of the token.\n @return string symbol of the token"},"functionSelector":"95d89b41","id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"19622:6:0","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"19628:2:0"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1174,"src":"19654:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"19654:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19653:15:0"},"scope":1391,"src":"19613:87:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1182,"nodeType":"Block","src":"19873:36:0","statements":[{"expression":{"id":1180,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"19890:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1179,"id":1181,"nodeType":"Return","src":"19883:19:0"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"19706:107:0","text":" @dev Returns the total supply of the token.\n @return uint256 total supply of token"},"functionSelector":"18160ddd","id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"19827:11:0","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"19838:2:0"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1183,"src":"19864:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"19864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19863:9:0"},"scope":1391,"src":"19818:91:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1227,"nodeType":"Block","src":"20319:264:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"20337:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20355:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20347:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"20347:7:0","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20347:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20337:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20359:38:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1193,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20329:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20329:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"20329:69:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"20416:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20436:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20428:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"20428:7:0","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20428:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20416:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20440:36:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20408:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20408:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"20408:69:0"},{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1213,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"20487:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1216,"indexExpression":{"id":1214,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"20499:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20487:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1217,"indexExpression":{"id":1215,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"20507:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20487:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1218,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"20519:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20487:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"20487:39:0"},{"eventCall":{"arguments":[{"id":1222,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"20550:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"20558:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"20568:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"20541:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20541:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"EmitStatement","src":"20536:40:0"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"19941:265:0","text":" @dev Internal function to approve tokens for the user\n @param _owner The owner of the tokens\n @param _spender The address which is allowed to spend the tokens\n @param _amount The amount that msg.sender is allowing spender to use"},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"20220:8:0","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"_owner","nameLocation":"20246:6:0","nodeType":"VariableDeclaration","scope":1228,"src":"20238:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"20238:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"_spender","nameLocation":"20270:8:0","nodeType":"VariableDeclaration","scope":1228,"src":"20262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"20262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"_amount","nameLocation":"20296:7:0","nodeType":"VariableDeclaration","scope":1228,"src":"20288:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"20288:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20228:81:0"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"20319:0:0"},"scope":1391,"src":"20211:372:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"20830:212:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"20848:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20868:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20860:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"20860:7:0","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20860:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20848:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20872:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20840:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20840:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"ExpressionStatement","src":"20840:68:0"},{"expression":{"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1246,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"20918:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1248,"indexExpression":{"id":1247,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"20928:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20918:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1249,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"20941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20918:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1251,"nodeType":"ExpressionStatement","src":"20918:30:0"},{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1252,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"20958:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1253,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"20974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20958:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"20958:23:0"},{"eventCall":{"arguments":[{"id":1257,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"21005:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21023:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21015:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"21015:7:0","typeDescriptions":{}}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21015:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"21027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1256,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"20996:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20996:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"EmitStatement","src":"20991:44:0"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"20589:178:0","text":" @dev Internal function to burn tokens for the user\n @param _account The address whose tokens to burn\n @param _amount The quantity of tokens to burn"},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"20781:5:0","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"_account","nameLocation":"20795:8:0","nodeType":"VariableDeclaration","scope":1266,"src":"20787:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"20787:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"_amount","nameLocation":"20813:7:0","nodeType":"VariableDeclaration","scope":1266,"src":"20805:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"20805:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20786:35:0"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"20830:0:0"},"scope":1391,"src":"20772:270:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1303,"nodeType":"Block","src":"21302:210:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"21320:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21340:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21332:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"21332:7:0","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21332:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21320:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21344:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21312:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21312:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"ExpressionStatement","src":"21312:66:0"},{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1284,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"21388:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1285,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"21404:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21388:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"21388:23:0"},{"expression":{"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1288,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"21421:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1290,"indexExpression":{"id":1289,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"21431:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21421:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1291,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"21444:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21421:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1293,"nodeType":"ExpressionStatement","src":"21421:30:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21483:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21475:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"21475:7:0","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21475:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"21487:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1300,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"21497:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1294,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"21466:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21466:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1302,"nodeType":"EmitStatement","src":"21461:44:0"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"21048:191:0","text":" @dev Internal function to create new tokens for the user\n @param _account The address which receives minted tokens\n @param _amount The quantity of tokens to min"},"id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"21253:5:0","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"_account","nameLocation":"21267:8:0","nodeType":"VariableDeclaration","scope":1304,"src":"21259:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"21259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_amount","nameLocation":"21285:7:0","nodeType":"VariableDeclaration","scope":1304,"src":"21277:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"21277:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21258:35:0"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"21302:0:0"},"scope":1391,"src":"21244:268:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"21863:304:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"21881:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21900:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21892:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"21892:7:0","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21892:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21881:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21904:39:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21873:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21873:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1323,"nodeType":"ExpressionStatement","src":"21873:71:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"21963:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21977:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"21977:7:0","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21977:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21963:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21988:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21954:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21954:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1333,"nodeType":"ExpressionStatement","src":"21954:72:0"},{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1334,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"22036:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1336,"indexExpression":{"id":1335,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"22046:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22036:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1337,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"22058:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22036:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"22036:29:0"},{"expression":{"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1340,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"22075:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1342,"indexExpression":{"id":1341,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"22085:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22075:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1343,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"22100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22075:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1345,"nodeType":"ExpressionStatement","src":"22075:32:0"},{"eventCall":{"arguments":[{"id":1347,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"22131:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1348,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"22140:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"22152:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1346,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"22122:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22122:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"EmitStatement","src":"22117:43:0"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"21518:229:0","text":" @dev Internal function to perform token transfer\n @param _sender The address which owns the tokens\n @param _recipient The destination address\n @param _amount The quantity of tokens to transfer"},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"21761:9:0","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"_sender","nameLocation":"21788:7:0","nodeType":"VariableDeclaration","scope":1353,"src":"21780:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"21780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"_recipient","nameLocation":"21813:10:0","nodeType":"VariableDeclaration","scope":1353,"src":"21805:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"21805:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"_amount","nameLocation":"21841:7:0","nodeType":"VariableDeclaration","scope":1353,"src":"21833:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"21833:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21770:84:0"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[],"src":"21863:0:0"},"scope":1391,"src":"21752:415:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"22610:209:0","statements":[{"expression":{"arguments":[{"id":1366,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"22630:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1367,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"22639:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"22651:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"22620:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22620:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1370,"nodeType":"ExpressionStatement","src":"22620:39:0"},{"expression":{"arguments":[{"id":1372,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"22691:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1373,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22712:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22716:6:0","memberName":"sender","nodeType":"MemberAccess","src":"22712:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1375,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"22736:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1377,"indexExpression":{"id":1376,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"22748:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22736:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1382,"indexExpression":{"arguments":[{"id":1380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22765:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TellorPlayground_$1391","typeString":"contract TellorPlayground"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22757:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"22757:7:0","typeDescriptions":{}}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22757:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22736:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1383,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"22774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22736:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1371,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"22669:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22669:122:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"22669:122:0"},{"expression":{"hexValue":"74727565","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1364,"id":1388,"nodeType":"Return","src":"22801:11:0"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"22173:301:0","text":" @dev Allows this contract to transfer tokens from one user to another\n @param _sender The address which owns the tokens\n @param _recipient The destination address\n @param _amount The quantity of tokens to transfer\n @return bool Whether the transfer succeeded"},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"_transferFrom","nameLocation":"22488:13:0","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"_sender","nameLocation":"22519:7:0","nodeType":"VariableDeclaration","scope":1390,"src":"22511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"22511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"_recipient","nameLocation":"22544:10:0","nodeType":"VariableDeclaration","scope":1390,"src":"22536:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"22536:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"_amount","nameLocation":"22572:7:0","nodeType":"VariableDeclaration","scope":1390,"src":"22564:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"22564:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22501:84:0"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"22604:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1362,"name":"bool","nodeType":"ElementaryTypeName","src":"22604:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22603:6:0"},"scope":1391,"src":"22479:340:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1392,"src":"57:22764:0","usedErrors":[]}],"src":"32:22790:0"}}},"contracts":{"contracts/TellorPlayground.sol":{"TellorPlayground":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"_time","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_value","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"_nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_queryData","type":"bytes"},{"indexed":false,"internalType":"address","name":"_reporter","type":"address"}],"name":"NewReport","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"NewStaker","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"StakeWithdrawRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_staker","type":"address"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"addStakingRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"beginDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"faucet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"getDataBefore","outputs":[{"internalType":"bool","name":"_ifRetrieve","type":"bool"},{"internalType":"bytes","name":"_value","type":"bytes"},{"internalType":"uint256","name":"_timestampRetrieved","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"getIndexForDataBefore","outputs":[{"internalType":"bool","name":"_found","type":"bool"},{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"}],"name":"getNewValueCountbyQueryId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"getReporterByTimestamp","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_stakerAddress","type":"address"}],"name":"getStakerInfo","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getTimestampbyQueryIdandIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_hash","type":"bytes32"}],"name":"getVoteRounds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"isDisputed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"isInDispute","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"reporterByTimestamp","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"requestStakingWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"uint256","name":"_timestamp","type":"uint256"}],"name":"retrieveData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_queryId","type":"bytes32"},{"internalType":"bytes","name":"_value","type":"bytes"},{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"bytes","name":"_queryData","type":"bytes"}],"name":"submitValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeBasedReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"timestamps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"tips","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tipsInContract","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"values","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voteCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"voteRounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_queryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"}],\"name\":\"NewReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"NewStaker\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addStakingRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"beginDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getDataBefore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIndexForDataBefore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_found\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"}],\"name\":\"getNewValueCountbyQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getReporterByTimestamp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakerAddress\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyQueryIdandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getVoteRounds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isDisputed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isInDispute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reporterByTimestamp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_queryData\",\"type\":\"bytes\"}],\"name\":\"submitValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeBasedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tips\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tipsInContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"values\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStakingRewards(uint256)\":{\"details\":\"Mock function for adding staking rewards. No rewards actually given to stakers\",\"params\":{\"_amount\":\"Amount of TRB to be added to the contract\"}},\"allowance(address,address)\":{\"details\":\"Returns the amount that an address is alowed to spend of behalf of another\",\"params\":{\"_owner\":\"The address which owns the tokens\",\"_spender\":\"The address that will use the tokens\"},\"returns\":{\"_0\":\"uint256 The amount of allowed tokens\"}},\"approve(address,uint256)\":{\"details\":\"Approves amount that an address is alowed to spend of behalf of another\",\"params\":{\"_amount\":\"The amount that msg.sender is allowing spender to use\",\"_spender\":\"The address which is allowed to spend the tokens\"},\"returns\":{\"_0\":\"bool Whether the transaction succeeded\"}},\"balanceOf(address)\":{\"details\":\"Returns the balance of a given user.\",\"params\":{\"_account\":\"user address\"},\"returns\":{\"_0\":\"uint256 user's token balance\"}},\"beginDispute(bytes32,uint256)\":{\"details\":\"A mock function to create a dispute\",\"params\":{\"_queryId\":\"The tellorId to be disputed\",\"_timestamp\":\"the timestamp of the value to be disputed\"}},\"constructor\":{\"details\":\"Initializes playground parameters\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation.\",\"returns\":{\"_0\":\"uint8 the number of decimals; used only for display purposes\"}},\"depositStake(uint256)\":{\"details\":\"Allows a reporter to submit stake\",\"params\":{\"_amount\":\"amount of tokens to stake\"}},\"faucet(address)\":{\"details\":\"Public function to mint tokens to the given address\",\"params\":{\"_user\":\"The address which will receive the tokens\"}},\"getDataBefore(bytes32,uint256)\":{\"details\":\"Retrieves the latest value for the queryId before the specified timestamp\",\"params\":{\"_queryId\":\"is the queryId to look up the value for\",\"_timestamp\":\"before which to search for latest value\"},\"returns\":{\"_ifRetrieve\":\"bool true if able to retrieve a non-zero value\",\"_timestampRetrieved\":\"the value's timestamp\",\"_value\":\"the value retrieved\"}},\"getIndexForDataBefore(bytes32,uint256)\":{\"details\":\"Retrieves latest array index of data before the specified timestamp for the queryId\",\"params\":{\"_queryId\":\"is the queryId to look up the index for\",\"_timestamp\":\"is the timestamp before which to search for the latest index\"},\"returns\":{\"_found\":\"whether the index was found\",\"_index\":\"the latest index found before the specified timestamp\"}},\"getNewValueCountbyQueryId(bytes32)\":{\"details\":\"Counts the number of values that have been submitted for a given ID\",\"params\":{\"_queryId\":\"the ID to look up\"},\"returns\":{\"_0\":\"uint256 count of the number of values received for the queryId\"}},\"getReporterByTimestamp(bytes32,uint256)\":{\"details\":\"Returns the reporter for a given timestamp and queryId\",\"params\":{\"_queryId\":\"bytes32 version of the queryId\",\"_timestamp\":\"uint256 timestamp of report\"},\"returns\":{\"_0\":\"address of data reporter\"}},\"getStakeAmount()\":{\"details\":\"Returns mock stake amount\",\"returns\":{\"_0\":\"uint256 stake amount\"}},\"getStakerInfo(address)\":{\"details\":\"Allows users to retrieve all information about a staker\",\"params\":{\"_stakerAddress\":\"address of staker inquiring about\"},\"returns\":{\"_0\":\"uint startDate of staking\",\"_1\":\"uint current amount staked\",\"_2\":\"uint current amount locked for withdrawal\",\"_3\":\"uint reward debt used to calculate staking reward\",\"_4\":\"uint reporter's last reported timestamp\",\"_5\":\"uint total number of reports submitted by reporter\",\"_6\":\"uint governance vote count when first staked\",\"_7\":\"uint number of votes case by staker when first staked\",\"_8\":\"uint whether staker is counted in totalStakers\"}},\"getTimestampbyQueryIdandIndex(bytes32,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_queryId\":\"is the queryId to look up\"},\"returns\":{\"_0\":\"uint256 timestamp\"}},\"getVoteRounds(bytes32)\":{\"details\":\"Returns an array of voting rounds for a given vote\",\"params\":{\"_hash\":\"is the identifier hash for a vote\"},\"returns\":{\"_0\":\"uint256[] memory dispute IDs of the vote rounds\"}},\"governance()\":{\"details\":\"Returns the governance address of the contract\",\"returns\":{\"_0\":\"address (this address)\"}},\"isInDispute(bytes32,uint256)\":{\"details\":\"Returns whether a given value is disputed\",\"params\":{\"_queryId\":\"unique ID of the data feed\",\"_timestamp\":\"timestamp of the value\"},\"returns\":{\"_0\":\"bool whether the value is disputed\"}},\"name()\":{\"details\":\"Returns the name of the token.\",\"returns\":{\"_0\":\"string name of the token\"}},\"requestStakingWithdraw(uint256)\":{\"details\":\"Allows a reporter to request to withdraw their stake\",\"params\":{\"_amount\":\"amount of staked tokens requesting to withdraw\"}},\"retrieveData(bytes32,uint256)\":{\"details\":\"Retrieves value from oracle based on queryId/timestamp\",\"params\":{\"_queryId\":\"being requested\",\"_timestamp\":\"to retrieve data/value from\"},\"returns\":{\"_0\":\"bytes value for queryId/timestamp submitted\"}},\"submitValue(bytes32,bytes,uint256,bytes)\":{\"details\":\"A mock function to submit a value to be read without reporter staking needed\",\"params\":{\"_nonce\":\"the current value count for the query id\",\"_queryData\":\"the data used by reporters to fulfill the data query\",\"_queryId\":\"the ID to associate the value to\",\"_value\":\"the value for the queryId\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\",\"returns\":{\"_0\":\"string symbol of the token\"}},\"totalSupply()\":{\"details\":\"Returns the total supply of the token.\",\"returns\":{\"_0\":\"uint256 total supply of token\"}},\"transfer(address,uint256)\":{\"details\":\"Transfer tokens from one user to another\",\"params\":{\"_amount\":\"The amount of tokens, including decimals, to transfer\",\"_recipient\":\"The destination address\"},\"returns\":{\"_0\":\"bool If the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from user to another\",\"params\":{\"_amount\":\"The quantity of tokens to transfer\",\"_recipient\":\"The destination address\",\"_sender\":\"The address which owns the tokens\"},\"returns\":{\"_0\":\"bool Whether the transfer succeeded\"}},\"withdrawStake()\":{\"details\":\"Withdraws a reporter's stake\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TellorPlayground.sol\":\"TellorPlayground\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TellorPlayground.sol\":{\"keccak256\":\"0xf31fb46d417cddc842d772ee0cdd87a9c2ef58b88f3f52ecdd8ee0a8b4712d0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcafb42a010c7e8b4e41493100f902212044b21baaea35d42e2c347a3074f8c0\",\"dweb:/ipfs/QmUa2EAVsWECdyDyFGd1UakoHcunUuU69Ei3qf4Q8ejNKa\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"TellorPlayground.sol:TellorPlayground\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[11]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_46\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.le\t@.BB0_21\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.gt\t@.BB0_40\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_42[0], r2, r4\n\tjump.eq\t@.BB0_153\n\tsub.s!\t@CPI0_43[0], r2, r4\n\tjump.eq\t@.BB0_155\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tjump\t@.BB0_238\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_10\n\tadd\tr3, r0, stack-[10]\n\tadd\tr4, r0, stack-[11]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[11], r0, r4\n\tjump.ge\t@.BB0_10\n.BB0_12:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_12\n.BB0_10:\n\tadd\t@CPI0_2[0], r0, r1\n\tsstore\tr4, r1\n\tadd\t15, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_11\n.BB0_4:\n\tadd\t@CPI0_97[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_98[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_46:\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.le\t@.BB0_47\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.gt\t@.BB0_66\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.le\t@.BB0_61\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.eq\t@.BB0_315\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_320\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getTimestampbyQueryIdandIndex, @DEFAULT_UNWIND\n\tjump\t@.BB0_89\n.BB0_21:\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.le\t@.BB0_22\n\tsub.s!\t@CPI0_48[0], r2, r4\n\tjump.le\t@.BB0_28\n\tsub.s!\t@CPI0_49[0], r2, r4\n\tjump.eq\t@.BB0_126\n\tsub.s!\t@CPI0_50[0], r2, r4\n\tjump.eq\t@.BB0_134\n\tsub.s!\t@CPI0_51[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_getIndexForDataBefore, @DEFAULT_UNWIND\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_94[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_47:\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.le\t@.BB0_48\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.le\t@.BB0_54\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.eq\t@.BB0_290\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.eq\t@.BB0_294\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_191\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB0_110\n\tsub\tr1, r3, r1\n\tsub.s!\t@CPI0_66[0], r1, r1\n\tjump.gt\t@.BB0_310\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t18, r0, r3\n\tjump\t@.BB0_179\n.BB0_11:\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB0_16\n\tadd\tr3, r0, stack-[10]\n\tadd\tr4, r0, stack-[11]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[11], r0, r4\n\tjump.ge\t@.BB0_16\n.BB0_17:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_17\n.BB0_16:\n\tadd\t@CPI0_3[0], r0, r1\n\tsstore\tr4, r1\n\tadd\t16, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t18, r2, r2\n\tsstore\tr1, r2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tcontext.this\tr3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_40:\n\tsub.s!\t@CPI0_35[0], r2, r4\n\tjump.le\t@.BB0_41\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_232\n\tsub.s!\t@CPI0_37[0], r2, r4\n\tjump.eq\t@.BB0_234\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.eq\t@.BB0_230\n\tjump\t@.BB0_2\n.BB0_66:\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.le\t@.BB0_67\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_342\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_59[0], r1, r1\n\tjump\t@.BB0_93\n.BB0_22:\n\tsub.s!\t@CPI0_54[0], r2, r4\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_57[0], r2, r1\n\tjump.eq\t@.BB0_72\n\tsub.s!\t@CPI0_58[0], r2, r1\n\tjump.eq\t@.BB0_81\n\tjump\t@.BB0_2\n.BB0_48:\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.gt\t@.BB0_51\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.eq\t@.BB0_240\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tjump\t@.BB0_238\n.BB0_25:\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_56[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n\tjump\t@.BB0_92\n.BB0_51:\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_247\n\tsub.s!\t@CPI0_30[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t15, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_259\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_258\n\tadd\t@CPI0_82[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_262:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_262\n\tadd\t192, r3, r2\n\tjump\t@.BB0_258\n.BB0_28:\n\tsub.s!\t@CPI0_52[0], r2, r4\n\tjump.eq\t@.BB0_94\n\tsub.s!\t@CPI0_53[0], r2, r1\n\tjump.ne\t@.BB0_2\n.BB0_124:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_uint256, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_59[0], r1, r1\n\tjump\t@.BB0_89\n.BB0_54:\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_264\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tnear_call\tr0, @fun_getIndexForDataBefore, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_271\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_80[0], r4, r2\n\tjump.gt\t@.BB0_99\n\tadd\t32, r4, r2\n\tst.1\t64, r2\n\tst.1\tr4, r0\n\tld.1\t64, r2\n\tadd\tr0, r0, stack-[10]\n.BB0_288:\n\tadd\t32, r2, r3\n\tadd\tr2, r0, r5\n\tadd\tr5, r0, stack-[11]\n\tadd\t96, r0, r2\n\tst.1\tr3, r2\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr5, r1\n\tadd\t96, r5, r2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tadd\t64, r4, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_289\n.BB0_35:\n\tsub.s!\t@CPI0_45[0], r2, r1\n\tjump.eq\t@.BB0_149\n\tsub.s!\t@CPI0_46[0], r2, r1\n\tjump.eq\t@.BB0_151\n\tjump\t@.BB0_2\n.BB0_61:\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_20[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t11, r0, r1\n\tjump\t@.BB0_92\n.BB0_41:\n\tsub.s!\t@CPI0_39[0], r2, r1\n\tjump.eq\t@.BB0_230\n\tsub.s!\t@CPI0_40[0], r2, r1\n\tjump.ne\t@.BB0_2\n.BB0_151:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_uint256, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_89\n.BB0_67:\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_334\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_59[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r2\n\tjump\t@.BB0_239\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes32t_uint256, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tnear_call\tr0, @copy_array_from_storage_to_memory_bytes, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tjump\t@.BB0_289\n.BB0_230:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t9, r0, r1\n\tjump\t@.BB0_92\n.BB0_72:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_76\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_75\n\tadd\t@CPI0_99[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_79:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_79\n\tadd\t192, r3, r2\n\tjump\t@.BB0_75\n.BB0_240:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t4, r1, r2\n\tsload\tr2, r2\n\tadd\t3, r1, r3\n\tsload\tr3, r3\n\tadd\t2, r1, r4\n\tsload\tr4, r4\n\tadd\t1, r1, r5\n\tsload\tr5, r5\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tst.1\t160, r5\n\tst.1\t192, r4\n\tst.1\t224, r0\n\tst.1\t256, r3\n\tst.1\t288, r2\n\tst.1\t320, r0\n\tst.1\t352, r0\n\tst.1\t384, r0\n\tadd\t@CPI0_85[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n.BB0_87:\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_88\n.BB0_247:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r4\n\tadd\t1, r4, r2\n\tsload\tr2, r3\n\tsub.s!\tstack-[11], r3, r1\n\tjump.ge\t@.BB0_252\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_84[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t27, r0, r3\n.BB0_179:\n\tst.1\tr2, r3\n\tadd\t@CPI0_70[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n.BB0_180:\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_73[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_134:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr3, r0, stack-[9]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[11], r0, r6\n\tadd\tr6, r0, r2\n\tjump.eq\t@.BB0_141\n\tld\tr1, r1\n\tadd\tr0, r0, r3\n\tadd\tr6, r0, r2\n.BB0_140:\n\tsload\tr1, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB0_140\n.BB0_141:\n\tadd\tstack-[10], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_79[0], r1, r3\n\tjump.gt\t@.BB0_99\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_99\n\tst.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr4, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_146\n\tadd\tr0, r0, r4\n.BB0_145:\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_145\n.BB0_146:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_294:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_59[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tstack-[11], r0, r1\n\tjump.ne\t@.BB0_299\n\tadd\t@CPI0_70[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_77[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_78[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_94:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t160, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t64, r2\n\tst.1\t128, r0\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r4\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_95[0], r5, r1\n\tjump.ge\t@.BB0_99\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[8]\n\tjump.lt\t@.BB0_106\n\tadd\tr5, r0, stack-[7]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[8], r0, r4\n\tjump.ge\t@.BB0_106\n.BB0_105:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_105\n.BB0_106:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_120\n\tadd\tr5, r0, stack-[7]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tand!\tstack-[7], r2, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_117\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r3\n.BB0_115:\n\tadd\tr4, r0, r5\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_115\n\tadd\t160, r5, stack-[9]\n.BB0_117:\n\tsub.s!\tstack-[7], r2, r2\n\tjump.ge\t@.BB0_119\n\tadd\tstack-[7], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tadd\tstack-[9], r0, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_119:\n\tadd\tstack-[7], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_107\n.BB0_264:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_81[0], r0, r1\n\tjump\t@.BB0_93\n.BB0_149:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t16, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tjump\t@.BB0_93\n.BB0_334:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tcontext.this\tr2\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_155:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_79[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tadd\t@CPI0_86[0], r0, r5\n\tsub!\tr2, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_86[0], r2, r2\n\tsub!\tr2, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_86[0], r2, r2\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r4, r2\n\tptr.add\tr1, r2, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[10]\n\tsub.s!\t@CPI0_79[0], r5, r5\n\tjump.gt\t@.BB0_2\n\tadd\t36, r4, r5\n\tadd\tr5, r0, stack-[9]\n\tadd\tstack-[10], r5, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[8]\n\tptr.add.s\t100, r1, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_79[0], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r4\n\tadd\t@CPI0_86[0], r0, r6\n\tsub!\tr4, r3, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_86[0], r4, r4\n\tsub!\tr4, r0, r8\n\tadd.ge\tr0, r0, r6\n\tsub.s!\t@CPI0_86[0], r4, r4\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_79[0], r4, r7\n\tjump.gt\t@.BB0_99\n\tadd\t191, r4, r7\n\tsub.s\t32, r0, stack-[7]\n\tand\tstack-[7], r7, r7\n\tsub.s!\t@CPI0_79[0], r7, r8\n\tjump.gt\t@.BB0_99\n\tadd\t36, r5, r5\n\tst.1\t64, r7\n\tst.1\t128, r4\n\tadd\tr4, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r3\n\tptr.add\tr1, r3, r3\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_351\n\tadd\tr0, r0, r7\n.BB0_168:\n\tshl.s\t5, r7, r8\n\tptr.add\tr3, r8, r9\n\tld\tr9, r9\n\tadd\t160, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_168\n.BB0_351:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_170\n\tshl.s\t5, r6, r6\n\tptr.add\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tadd\t160, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB0_170:\n\tadd\t160, r4, r3\n\tst.1\tr3, r0\n\tadd\tstack-[10], r0, r3\n\tadd\t63, r3, r3\n\tand\tstack-[7], r3, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_79[0], r4, r6\n\tjump.gt\t@.BB0_99\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_99\n\tst.1\t64, r4\n\tadd\t32, r2, r2\n\tptr.add\tr1, r2, r2\n\tadd\tstack-[10], r0, r4\n\tand\t31, r4, stack-[5]\n\tst.1.inc\tr3, r4, r1\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB0_350\n\tadd\tr0, r0, r4\n.BB0_174:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB0_174\n.BB0_350:\n\tadd\tr7, r0, stack-[6]\n\tsub!\tstack-[5], r0, r4\n\tjump.eq\t@.BB0_176\n\tadd\tstack-[6], r0, r4\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tr1, r4, r4\n\tadd\tstack-[5], r0, r5\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr2, r2\n\tsub\t256, r5, r5\n\tshr\tr2, r5, r2\n\tshl\tr2, r5, r2\n\tor\tr2, r6, r2\n\tst.1\tr4, r2\n.BB0_176:\n\tadd\tstack-[10], r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub.s!\t@CPI0_88[0], r1, r1\n\tjump.ne\t@.BB0_181\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_93[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tjump\t@.BB0_179\n.BB0_320:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r3\n\tadd\t2, r3, r4\n\tsload\tr4, r1\n\tsub!\tr1, r0, r2\n\tadd\tr3, r0, stack-[9]\n\tjump.ne\t@.BB0_329\n\tcontext.this\tr2\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[11], r0, r3\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tjump\t@.BB0_324\n.BB0_126:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_59[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\tstack-[11], r0, r1\n\tadd\tr3, r0, stack-[10]\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[10], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB0_110\n\tsub\tr1, r3, r3\n\tadd\tstack-[11], r0, r1\n\tadd\tstack-[9], r0, r2\n\tjump\t@.BB0_87\n.BB0_290:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_59[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_88:\n\tadd\t1, r0, r1\n\tjump\t@.BB0_89\n.BB0_234:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n.BB0_238:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_239:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_92\n.BB0_342:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[11], r2, r2\n\tjump.ge\t@.BB0_2\n\tjump\t@.BB0_319\n.BB0_153:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.this\tr1\n\tjump\t@.BB0_93\n.BB0_315:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tstack-[11], r2, r2\n\tjump.ge\t@.BB0_2\n.BB0_319:\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @storage_array_index_access_uint256_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n.BB0_89:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_232:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r1\n.BB0_92:\n\tsload\tr1, r1\n.BB0_93:\n\tst.1\t128, r1\n\tadd\t@CPI0_60[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_271:\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_276\n\tsub.s!\tstack-[10], r2, r2\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB0_276\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r1, r1\n\tsload\tr1, r3\n.BB0_276:\n\tadd\tr3, r0, stack-[10]\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\tr5, r0, stack-[8]\n\tst.1.inc\tr4, r5, r4\n\tadd\tr4, r0, stack-[7]\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_282\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_280\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_286:\n\tadd\tr6, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_286\n\tjump\t@.BB0_280\n.BB0_76:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_75\n.BB0_252:\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_191\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tadd\t2, r2, r1\n\tsload\tr1, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_110\n\tsstore\tr1, r2\n\tsub\tstack-[7], r4, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[10], r0, r2\n\tand\t@CPI0_59[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_83[0], r0, r4\n\tjump\t@.BB0_327\n.BB0_259:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n.BB0_258:\n.BB0_75:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[11], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n.BB0_289:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_299:\n\tadd\t13, r0, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_74[0], r2, r3\n\tjump.gt\t@.BB0_110\n\tadd\t@CPI0_75[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_74[0], r2, r3\n\tjump.gt\t@.BB0_110\n\tadd\t@CPI0_75[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_75[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_76[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[11], r0, r6\n\tjump\t@.BB0_303\n.BB0_329:\n\tadd\tstack-[11], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_331\n\tsub\tr3, r1, r3\n\tcontext.this\tr2\n\tadd\tstack-[10], r0, r1\n\tadd\tr4, r0, stack-[8]\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tsstore\tr1, r0\n\tjump\t@.BB0_324\n.BB0_331:\n\tsub\tr1, r3, r1\n\tsstore\tr4, r1\n.BB0_324:\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_191\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr2, r1\n\tadd\t1, r2, r1\n\tsload\tr1, r3\n\tadd\tstack-[11], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_326\n.BB0_110:\n\tadd\t@CPI0_97[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_326:\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r4\n\tadd\tstack-[10], r0, r2\n\tand\t@CPI0_59[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_65[0], r0, r4\n\tjump\t@.BB0_327\n.BB0_310:\n\tadd\tstack-[9], r0, r1\n\tadd\t2, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_312\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_68[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_69[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_70[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_71[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_312:\n\tcontext.this\tr1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r1\n\tsstore\tr1, r0\n\tld.1\t64, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_67[0], r0, r4\n.BB0_327:\n.BB0_303:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_120:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_122\n\tld.1\t160, r1\n.BB0_122:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB0_107:\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t11, r0, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_110\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[9]\n\tsstore\tr1, r2\n\tld.1\t64, r2\n\tadd\t64, r2, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr1, r3\n\tadd\t64, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_96[0], r2, r3\n\tjump.gt\t@.BB0_99\n\tadd\t96, r2, r3\n\tst.1\t64, r3\n\tld.1\tr2, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @array_push_from_uint256_to_array_uint256_dyn_storage_ptr, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_282:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr2, r1\n\tsub!\tstack-[8], r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_280:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\tstack-[11], r0, r4\n\tadd\tr1, r4, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tadd\tr2, r0, r5\n\tsub.s!\t@CPI0_79[0], r2, r2\n\tadd\tstack-[9], r0, r1\n\tjump.gt\t@.BB0_99\n\tand!\t1, r3, r2\n\tjump.ne\t@.BB0_99\n\tadd\tr5, r0, r2\n\tst.1\t64, r2\n\tjump\t@.BB0_288\n.BB0_181:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tstack-[8], r0, r2\n\tjump.eq\t@.BB0_185\n\tsload\tr1, r1\n\tsub!\tstack-[8], r1, r1\n\tjump.eq\t@.BB0_185\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_89[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_70[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tjump\t@.BB0_180\n.BB0_185:\n\tld.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_90[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t101, r2, r2\n\tjump.lt\t@.BB0_189\n\tsub!\tstack-[11], r1, r1\n\tjump.eq\t@.BB0_189\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_92[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tjump\t@.BB0_179\n.BB0_189:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_191\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_199\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_199\n.BB0_198:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_198\n.BB0_199:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_223\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tand!\tstack-[10], r3, r3\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_220\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tadd\tr0, r0, r2\n.BB0_219:\n\tadd\tr2, r6, r5\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tsstore\tr1, r5\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_219\n.BB0_220:\n\tsub.s!\tstack-[10], r3, r3\n\tjump.ge\t@.BB0_222\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[9], r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_222:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_200\n.BB0_191:\n\trevert\n.BB0_223:\n\tsub!\tstack-[10], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_225\n\tadd\tstack-[9], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n.BB0_225:\n\tadd\tstack-[10], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_200:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_79[0], r2, r2\n\tjump.le\t@.BB0_202\n.BB0_99:\n\tadd\t@CPI0_97[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB0_5\n.BB0_202:\n\tadd\tstack-[4], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tcontext.caller\tr3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t3, r1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_110\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t192, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t192, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t224, r1, r2\n\tadd\tstack-[9], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tsub!\tstack-[6], r0, r4\n\tjump.eq\t@.BB0_349\n\tadd\tr0, r0, r4\n.BB0_210:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub.s!\tstack-[6], r4, r5\n\tjump.lt\t@.BB0_210\n.BB0_349:\n\tsub!\tstack-[5], r0, r4\n\tjump.eq\t@.BB0_212\n\tadd\tstack-[6], r0, r4\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr2, r4, r4\n\tadd\tstack-[5], r0, r5\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB0_212:\n\tadd\tstack-[10], r0, r3\n\tadd\tr2, r3, r2\n\tst.1\tr2, r0\n\tadd\t96, r1, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tadd\t31, r3, r2\n\tand\tstack-[7], r2, r2\n\tadd\t224, r2, r3\n\tadd\t128, r1, r4\n\tst.1\tr4, r3\n\tadd\tr1, r2, r4\n\tadd\t224, r4, r5\n\tld.1\t128, r3\n\tst.1\tr5, r3\n\tadd\t256, r4, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_215\n\tadd\tr0, r0, r5\n.BB0_214:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_214\n.BB0_215:\n\tadd\tr3, r4, r4\n\tst.1\tr4, r0\n\tadd\t160, r1, r4\n\tadd\tstack-[4], r0, r5\n\tst.1\tr4, r5\n\tadd\t31, r3, r3\n\tand\tstack-[7], r3, r3\n\tadd\tr2, r3, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t256, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_87[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_91[0], r0, r4\n\tjump\t@.BB0_327\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_decode_bytes32t_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t63, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation:\n.func_begin3:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tjump.gt\t@.BB3_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_2\n\tst.1\t64, r1\n\tret\n.BB3_2:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\ncopy_array_from_storage_to_memory_bytes:\n.func_begin4:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tand\t1, r4, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB4_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB4_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_10\n\tadd\tstack-[2], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB4_4\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB4_13:\n\tadd\tr7, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB4_13\n\tjump\t@.BB4_4\n.BB4_8:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB4_4:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_2[0], r1, r3\n\tjump.gt\t@.BB4_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB4_2\n.BB4_6:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB4_2:\n\tst.1\t4, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nstorage_array_index_access_uint256_dyn:\n.func_begin5:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB5_1\n\tst.1\t0, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB5_1:\n\tadd\t@CPI5_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\narray_push_from_uint256_to_array_uint256_dyn_storage_ptr:\n.func_begin6:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, stack-[2]\n\tsload\tr1, r3\n\tsub.s!\t@CPI6_0[0], r3, r2\n\tjump.ge\t@.BB6_1\n\tadd\tr3, r0, stack-[1]\n\tadd\t1, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tret\n.BB6_1:\n\tadd\t@CPI6_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_getIndexForDataBefore:\n.func_begin7:\n\tnop\tstack+=[9]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB7_3\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB7_8\n\tst.1\t0, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r2\n.BB7_8:\n\tsub.s!\tstack-[5], r2, r1\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n\tjump.ge\t@.BB7_3\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[9], r0, r2\n\tsub.s\t1, r2, stack-[9]\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB7_14\n\tsub.s!\tstack-[9], r2, r2\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB7_14\n\tst.1\t0, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r3\n.BB7_14:\n\tsub.s!\tstack-[5], r3, r1\n\tjump.ge\t@.BB7_15\n\tadd\t32784, r0, stack-[7]\n.BB7_17:\n\tadd\tr3, r0, stack-[5]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB7_21\n\tsub!\tstack-[9], r0, r1\n\tjump.eq\t@.BB7_27\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[9], r0, r2\n\tsub.s\t1, r2, stack-[9]\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB7_17\n\tsub.s!\tstack-[9], r2, r2\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB7_17\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r3\n\tjump\t@.BB7_17\n.BB7_15:\n\tadd\t32784, r0, stack-[2]\n\tadd\tr0, r0, r4\n\tjump\t@.BB7_32\n.BB7_45:\n\tsub.s!\tstack-[5], r5, r1\n\tjump.lt\t@.BB7_46\n.BB7_39:\n\tsub!\tr3, r4, r1\n\tadd\tr3, r0, stack-[9]\n\tjump.lt\t@.BB7_31\n.BB7_32:\n\tsub\tstack-[9], r4, r1\n\tshr.s\t1, r1, r1\n\tadd\tr1, r4, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t1, r2, stack-[7]\n\tsub!\tstack-[7], r1, r1\n\tjump.le\t@.BB7_31\n\tadd\tr4, r0, stack-[3]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB7_38\n\tsub.s!\tstack-[7], r2, r2\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB7_38\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[7], r1, r1\n\tsload\tr1, r3\n.BB7_38:\n\tsub.s!\tstack-[5], r3, r1\n\tjump.ge\t@.BB7_40\n\tadd\tr3, r0, stack-[1]\n\tsub.s\t1, r0, r1\n\tsub!\tstack-[7], r1, r1\n\tjump.eq\t@.BB7_31\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[4], r0, r2\n\tadd\t2, r2, r4\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB7_70\n\tsub!\tr3, r4, r2\n\tadd\tr0, r0, r2\n\tjump.le\t@.BB7_70\n\tadd\tr4, r0, stack-[3]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r4\n\tadd\tr1, r4, r1\n\tsload\tr1, r2\n.BB7_70:\n\tsub.s!\tstack-[5], r2, r1\n\tadd\tstack-[9], r0, r3\n\tjump.lt\t@.BB7_39\n\tjump\t@.BB7_71\n.BB7_40:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r5\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB7_45\n\tsub!\tr2, r3, r2\n\tadd\tr0, r0, r5\n\tjump.le\t@.BB7_45\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r3\n\tadd\tr1, r3, r1\n\tsload\tr1, r5\n\tadd\tstack-[3], r0, r4\n\tjump\t@.BB7_45\n.BB7_21:\n\tsub!\tstack-[9], r0, r1\n\tjump.ne\t@.BB7_30\n.BB7_27:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI7_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n\tjump.ne\t@.BB7_3\n.BB7_30:\n\tadd\t1, r0, r1\n\tadd\tstack-[9], r0, r2\n\tjump\t@.BB7_3\n.BB7_46:\n\tadd\tr5, r0, stack-[5]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI7_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\t1, r0, stack-[3]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[5], r0, r3\n\tjump.eq\t@.BB7_3\n\tadd\t32784, r0, stack-[7]\n\tadd\tr2, r0, stack-[9]\n.BB7_50:\n\tadd\tr3, r0, stack-[5]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB7_53\n\tsub!\tstack-[9], r0, r1\n\tjump.eq\t@.BB7_60\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[9], r0, r2\n\tsub.s\t1, r2, stack-[9]\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB7_50\n\tsub.s!\tstack-[9], r2, r2\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB7_50\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r3\n\tjump\t@.BB7_50\n.BB7_71:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI7_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\t1, r0, stack-[5]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[7], r0, r2\n\tjump.eq\t@.BB7_3\n\tadd\t32784, r0, stack-[9]\n\tadd\tstack-[1], r0, r3\n.BB7_75:\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB7_78\n\tsub!\tstack-[7], r0, r1\n\tjump.eq\t@.BB7_85\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tadd\tstack-[7], r0, r2\n\tsub.s\t1, r2, stack-[7]\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB7_75\n\tsub.s!\tstack-[7], r2, r2\n\tadd\tr0, r0, r3\n\tjump.le\t@.BB7_75\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[7], r1, r1\n\tsload\tr1, r3\n\tjump\t@.BB7_75\n.BB7_53:\n\tsub!\tstack-[9], r0, r1\n\tjump.ne\t@.BB7_63\n.BB7_60:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI7_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n\tjump.ne\t@.BB7_3\n.BB7_63:\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[9], r0, r2\n\tjump\t@.BB7_3\n.BB7_78:\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB7_88\n.BB7_85:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI7_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tr0, r0, r1\n\tadd\tr0, r0, r2\n\tjump.ne\t@.BB7_3\n.BB7_88:\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[7], r0, r2\n.BB7_3:\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_31:\n\tadd\t@CPI7_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_getTimestampbyQueryIdandIndex:\n.func_begin8:\n\tnop\tstack+=[1]\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r2\n\tsload\tr2, r3\n\tsub!\tr3, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB8_4\n\tsub.s!\tstack-[1], r3, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB8_4\n\tst.1\t0, r2\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tsload\tr1, r1\n.BB8_4:\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_approve:\n.func_begin9:\n\tnop\tstack+=[3]\n\tand!\t@CPI9_0[0], r1, r1\n\tjump.eq\t@.BB9_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI9_0[0], r2, stack-[3]\n\tjump.eq\t@.BB9_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB9_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_1[0], r1, r2\n\tadd.ge\t@CPI9_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI9_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI9_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI9_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI9_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_6\n\tret\n.BB9_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB9_2\n.BB9_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB9_2:\n\tst.1\tr2, r3\n\tadd\t@CPI9_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_1[0], r0, r2\n\tsub.s!\t@CPI9_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_transfer:\n.func_begin10:\n\tnop\tstack+=[4]\n\tand!\t@CPI10_0[0], r1, r1\n\tjump.eq\t@.BB10_1\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI10_0[0], r2, stack-[3]\n\tjump.eq\t@.BB10_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r4\n\tjump.eq\t@.BB10_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB10_8\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_6\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[4], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tadd\tstack-[4], r0, r3\n\tjump.ne\t@.BB10_8\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI10_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI10_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI10_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_6\n\tret\n.BB10_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_8:\n\tadd\t@CPI10_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB10_2\n.BB10_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n.BB10_2:\n\tst.1\tr2, r3\n\tadd\t@CPI10_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_1[0], r0, r2\n\tsub.s!\t@CPI10_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_transferFrom:\n.func_begin11:\n\tnop\tstack+=[5]\n\tand!\t@CPI11_0[0], r1, stack-[5]\n\tjump.eq\t@.BB11_1\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI11_0[0], r2, stack-[3]\n\tjump.eq\t@.BB11_4\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r4\n\tsub!\tr2, r4, r3\n\tjump.lt\t@.BB11_8\n\tsub\tr2, r4, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_6\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tstack-[4], r0, r4\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB11_8\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI11_1[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI11_1[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI11_4[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_6\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_1[0], r1, r2\n\tadd.ge\t@CPI11_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_6\n\tld\tr1, r1\n\tcontext.this\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB11_8\n\tadd\tr2, r0, stack-[1]\n\tcontext.caller\tr1\n\tand!\t@CPI11_0[0], r1, stack-[3]\n\tjump.eq\t@.BB11_16\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB11_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_1[0], r1, r2\n\tadd.ge\t@CPI11_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI11_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI11_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI11_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI11_5[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_6\n\tret\n.BB11_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_8:\n\tadd\t@CPI11_10[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_11[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB11_2\n.BB11_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB11_2\n.BB11_16:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB11_2:\n\tst.1\tr2, r3\n\tadd\t@CPI11_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_1[0], r0, r2\n\tsub.s!\t@CPI11_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin12:\n\tadd\t@CPI13_0[0], r0, r3\n\tsub.s!\t@CPI13_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI13_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_2\n\tld\tr1, r1\n\tret\n.BB13_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__farcall:\n.func_begin13:\n.tmp0:\n\tfar_call\tr1, r2, @.BB14_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end13:\n\n__staticcall:\n.func_begin14:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB15_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n\t.data\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_0:\nCPI5_2:\nCPI6_1:\nCPI7_0:\nCPI8_0:\nCPI9_1:\nCPI10_1:\nCPI11_1:\nCPI13_0:\n\t.cell 4294967295\nCPI0_1:\nCPI4_1:\nCPI5_3:\nCPI6_2:\nCPI7_2:\nCPI8_2:\nCPI9_3:\nCPI10_3:\nCPI11_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_2:\n\t.cell 38173479146553377364259374798949727765908647452134138086496694572875494981664\nCPI0_3:\n\t.cell 38139618412360825687646214118284756327902383062120827878771430675990081175560\nCPI0_4:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 1933303535\nCPI0_7:\n\t.cell 3314911992\nCPI0_8:\n\t.cell 3653573843\nCPI0_9:\n\t.cell 3766244485\nCPI0_10:\n\t.cell 3766244486\nCPI0_11:\n\t.cell 4065407987\nCPI0_12:\n\t.cell 4228666474\nCPI0_13:\n\t.cell 3653573844\nCPI0_14:\n\t.cell 3714247998\nCPI0_15:\n\t.cell 3380215454\nCPI0_16:\n\t.cell 3380215455\nCPI0_17:\n\t.cell 3414346895\nCPI0_18:\n\t.cell 3462271423\nCPI0_19:\n\t.cell 3314911993\nCPI0_20:\n\t.cell 3325575281\nCPI0_21:\n\t.cell 2520935830\nCPI0_22:\n\t.cell 2835717306\nCPI0_23:\n\t.cell 2835717307\nCPI0_24:\n\t.cell 3094158691\nCPI0_25:\n\t.cell 3201947745\nCPI0_26:\n\t.cell 2520935831\nCPI0_27:\n\t.cell 2811393631\nCPI0_28:\n\t.cell 2301228229\nCPI0_29:\n\t.cell 2301228230\nCPI0_30:\n\t.cell 2514000705\nCPI0_31:\n\t.cell 1933303536\nCPI0_32:\n\t.cell 2008038925\nCPI0_33:\n\t.cell 826074470\nCPI0_34:\n\t.cell 1623710790\nCPI0_35:\n\t.cell 1775516626\nCPI0_36:\n\t.cell 1775516627\nCPI0_37:\n\t.cell 1889567281\nCPI0_38:\n\t.cell 1915060406\nCPI0_39:\n\t.cell 1623710791\nCPI0_40:\n\t.cell 1682390514\nCPI0_41:\n\t.cell 1520887412\nCPI0_42:\n\t.cell 1520887413\nCPI0_43:\n\t.cell 1588239597\nCPI0_44:\n\t.cell 1613492775\nCPI0_45:\n\t.cell 826074471\nCPI0_46:\n\t.cell 1156087697\nCPI0_47:\n\t.cell 523737803\nCPI0_48:\n\t.cell 599290588\nCPI0_49:\n\t.cell 599290589\nCPI0_50:\n\t.cell 612776165\nCPI0_51:\n\t.cell 692359301\nCPI0_52:\n\t.cell 523737804\nCPI0_53:\n\t.cell 561009600\nCPI0_54:\n\t.cell 157198258\nCPI0_55:\n\t.cell 157198259\nCPI0_56:\n\t.cell 404098525\nCPI0_57:\n\t.cell 117300739\nCPI0_58:\n\t.cell 152785151\nCPI0_59:\nCPI9_0:\nCPI10_0:\nCPI11_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_60:\n\t.cell 2535301202817642044428229017600\nCPI0_61:\nCPI7_1:\nCPI8_1:\nCPI9_2:\nCPI10_2:\nCPI11_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_62:\n\t.cell 2535301200456458802993406410752\nCPI0_63:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_64:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_65:\n\t.cell -39160089102516055531783404292187669875032827921144873222437417943323210664377\nCPI0_66:\n\t.cell 604799\nCPI0_67:\n\t.cell 33685300958931807149508467151921979016957651564885213653494308433239575111916\nCPI0_68:\n\t.cell 44065165795572905179807439668528387784737448388077936815552858660237937213440\nCPI0_69:\n\t.cell 51742892292233389588217194784352814794866458642248739208584152790732696084855\nCPI0_70:\nCPI9_7:\nCPI10_9:\nCPI11_8:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_71:\nCPI9_8:\nCPI10_10:\nCPI11_9:\n\t.cell 10458117451882892562347801444352\nCPI0_72:\n\t.cell 24934438580692213029300503798620430203432360329108475950974467647554545778688\nCPI0_73:\n\t.cell 7922816251426433759354395033600\nCPI0_74:\n\t.cell -1000000000000000000001\nCPI0_75:\n\t.cell 1000000000000000000000\nCPI0_76:\nCPI10_4:\nCPI11_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_77:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_78:\n\t.cell 7922816253787617000789217640448\nCPI0_79:\nCPI3_0:\nCPI4_2:\n\t.cell 18446744073709551615\nCPI0_80:\n\t.cell 18446744073709551583\nCPI0_81:\n\t.cell 500000000000000000\nCPI0_82:\n\t.cell -51985879905773483620722137737738627760414206467914438128783404424367696066558\nCPI0_83:\n\t.cell 27841299372021053877990090169643976099483242285984292626090935607938629802223\nCPI0_84:\n\t.cell 47687999144296217495830161024901184647670886932695773939305038349316309123072\nCPI0_85:\n\t.cell 22817710806469312468375480303616\nCPI0_86:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_87:\nCPI13_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_88:\n\t.cell -26314937019391520585146947054695941613947897212292807772047415823230471658384\nCPI0_89:\n\t.cell 49951295240132451780060848434037009769057939416393011605775196116377835693432\nCPI0_90:\n\t.cell 904625697166532776746648320380374280103671755200316909509741426855349583872\nCPI0_91:\n\t.cell 32979765629134499048720002491187556026368817523138947255664173930886087494293\nCPI0_92:\n\t.cell 47669757614607126218955506204903649531993150226124517550845940923265535967232\nCPI0_93:\n\t.cell 53545048851678031934017216968987099130708113951740349732104039392592065986560\nCPI0_94:\n\t.cell 5070602400912917605986812821504\nCPI0_95:\nCPI6_0:\n\t.cell 18446744073709551616\nCPI0_96:\n\t.cell 18446744073709551519\nCPI0_97:\nCPI3_1:\nCPI4_3:\nCPI5_0:\nCPI6_3:\nCPI7_3:\nCPI10_5:\nCPI11_10:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_98:\nCPI3_2:\nCPI4_4:\nCPI5_1:\nCPI6_4:\nCPI7_4:\nCPI10_6:\nCPI11_11:\n\t.cell 2852213850513516153367582212096\nCPI0_99:\n\t.cell -30991751765622274519320752134368064134869217946116313751679903837235273743363\nCPI9_4:\nCPI11_5:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI9_5:\nCPI11_6:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI9_6:\nCPI11_7:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI9_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI9_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI10_7:\nCPI11_12:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI10_8:\nCPI11_13:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI10_11:\nCPI11_14:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI10_12:\nCPI11_15:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\n","bytecode":{"object":"0001000000000002000b00000000000200000000000103550000008003000039000000400030043f000000000301001900000060033002700000036f033001970000000102200190000000270000c13d000000040230008c000008900000413d000000000201043b000000e002200270000003750420009c000000650000213d000003900420009c000000780000a13d000003910420009c000000fc0000213d000003980420009c000001a00000a13d000003990420009c000004ed0000613d0000039a0420009c0000039f0000613d0000039b0220009c000008900000c13d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b00000000001004350000000401000039000004cb0000013d0000000001000416000000000101004b000008900000c13d0000000e04000039000000000104041a000000010210019000000001011002700000007f0310018f000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b0000005f0000c13d000000200130008c000000510000413d000a00000003001d000b00000004001d00000000004004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000a020000290000001f0220003900000005022002700000000002210019000000000321004b0000000b04000029000000510000813d000000000001041b0000000101100039000000000321004b0000004d0000413d0000037101000041000000000014041b0000000f04000039000000000104041a000000010210019000000001021002700000007f0320018f000000000302c0190000001f0230008c00000000020000190000000102002039000000000121013f0000000101100190000000ce0000613d000003d00100004100000000001004350000002201000039000000040010043f000003d10100004100000db800010430000003760420009c000000950000a13d000003770420009c000001050000213d0000037e0420009c000001a50000a13d0000037f0420009c000004f20000613d000003800420009c000004530000613d000003810120009c000008900000c13d0000000001000416000000000101004b000008900000c13d00000000010300190db608a50000040f0db60bd20000040f000005150000013d0000039e0420009c000001140000a13d0000039f0420009c0000015b0000a13d000003a00420009c000004760000613d000003a10420009c0000028d0000613d000003a20120009c000008900000c13d0000000001000416000000000101004b000008900000c13d00000000010300190db608a50000040f0db609560000040f000000400300043d00000020043000390000000000240435000000000101004b0000000001000019000000010100c03900000000001304350000036f010000410000036f0230009c00000000030180190000004001300210000003cd011001c700000db70001042e000003840420009c0000011b0000a13d000003850420009c000001750000a13d000003860420009c000004af0000613d000003870420009c000002e60000613d000003880120009c000008900000c13d0000000001000416000000000101004b000008900000c13d0000000001000411000b00000001001d00000000001004350000000201000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000900000001001d000000000101041a000a00000001001d000003ae01000041000000000010043900000000010004140000036f0210009c0000036f01008041000000c001100210000003af011001c70000800b020000390db60db10000040f0000000102200190000007b20000613d000000000101043b0000000a03000029000000000231004b0000063b0000413d0000000001310049000003b10110009c000006540000213d000000400100043d0000004402100039000003b703000041000000000032043500000024021000390000001203000039000002810000013d0000001f0130008c000000e90000a13d000a00000003001d000b00000004001d00000000004004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000a020000290000001f0220003900000005022002700000000002210019000000000321004b0000000b04000029000000e90000813d000000000001041b0000000101100039000000000321004b000000e50000413d0000037201000041000000000014041b0000001001000039000000000201041a000001000300008a000000000232016f00000012022001bf000000000021041b0000000c01000039000000000201041a00000373022001970000000003000410000000000232019f000000000021041b000000200100003900000100001004430000012000000443000003740100004100000db70001042e000003920420009c000001ae0000a13d000003930420009c0000051d0000613d000003940420009c000004bf0000613d000003950120009c000002040000613d000008900000013d000003780420009c000001c90000a13d000003790420009c0000015f0000613d0000037a0420009c000004d00000613d0000037b0120009c000008900000c13d0000000001000416000000000101004b000008900000c13d0000000c01000039000000000101041a000003aa01100197000005220000013d000003a50420009c0000012c0000213d000003a80120009c000002090000613d000003a90120009c000001e90000613d000008900000013d0000038b0420009c000001350000213d0000038e0420009c0000022b0000613d0000038f0220009c000008900000c13d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b00000000001004350000000301000039000004cb0000013d000003a60420009c0000024f0000613d000003a70120009c000008900000c13d0000000001000416000000000101004b000008900000c13d0000000d01000039000005210000013d0000038c0420009c0000025e0000613d0000038d0120009c000008900000c13d0000000001000416000000000101004b000008900000c13d0000000f03000039000000000203041a000000010420019000000001052002700000007f0150018f000000000105c0190000001f0510008c00000000050000190000000105002039000000000552013f00000001055001900000005f0000c13d000000800010043f000000000404004b000005ce0000613d0000000000300435000000a002000039000000000301004b000005d40000613d000003c10200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000514004b000001510000413d000000c002300039000005d40000013d000003a30420009c000002fd0000613d000003a40120009c000008900000c13d0000000001000416000000000101004b000008900000c13d00000000010300190db608a50000040f000b00000002001d00000000001004350000000101000039000000200010043f0000004002000039000a00000002001d00000000010000190db60d960000040f0000000b020000290000000000200435000000200010043f00000000010000190000000a020000290db60d960000040f000000000101041a000003aa01100197000005150000013d000003890420009c000003860000613d0000038a0220009c000008900000c13d0000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000002402100370000000000202043b0000000401100370000000000101043b000b00000001001d0db609560000040f000000000301004b000005250000c13d000000400400043d000003bf0240009c000007d60000213d0000002002400039000000400020043f0000000000040435000000400200043d000a00000000001d00000020032000390000000005020019000b00000005001d00000060020000390000000000230435000000000101004b0000000001000019000000010100c0390000000000150435000000600250003900000000010400190db608920000040f0000000b0400002900000040024000390000000a030000290000000000320435000005df0000013d0000039c0120009c0000038b0000613d0000039d0120009c000001b20000613d000008900000013d000003820120009c000001e90000613d000003830120009c000008900000c13d0000000001000416000000000101004b000008900000c13d0000000b01000039000005210000013d000003960120009c000002040000613d000003970120009c000008900000c13d0000000001000416000000000101004b000008900000c13d00000000010300190db608a50000040f000b00000002001d0000000000100435000000200000043f0000004002000039000a00000002001d00000000010000190db60d960000040f0000000b020000290000000000200435000000200010043f00000000010000190000000a020000290db60d960000040f000000000101041a000000ff011001900000000001000019000000010100c039000005150000013d0000037c0420009c000003920000613d0000037d0220009c000008900000c13d0000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000000402100370000000000202043b000003aa0320009c000008900000213d0000002401100370000000000101043b000b00000001001d000003aa0110009c000008900000213d00000000002004350000000701000039000000200010043f0000004002000039000a00000002001d00000000010000190db60d960000040f0000000b020000290000000000200435000000200010043f00000000010000190000000a02000029000004ce0000013d0000000001000416000000000101004b000008900000c13d00000000010300190db608a50000040f000b00000002001d00000000001004350000000501000039000000200010043f0000004002000039000a00000002001d00000000010000190db60d960000040f0000000b020000290000000000200435000000200010043f00000000010000190000000a020000290db60d960000040f0db608cc0000040f0000002002000039000000400300043d000b00000003001d00000000022304360db608920000040f0000000b04000029000005df0000013d0000000001000416000000000101004b000008900000c13d0000000901000039000005210000013d0000000001000416000000000101004b000008900000c13d0000000e03000039000000000203041a000000010420019000000001052002700000007f0150018f000000000105c0190000001f0510008c00000000050000190000000105002039000000000552013f00000001055001900000005f0000c13d000000800010043f000000000404004b000005940000613d0000000000300435000000a002000039000000000301004b000005d40000613d000003d20200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000514004b000002210000413d000000c002300039000005d40000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b000003aa0210009c000008900000213d00000000001004350000000201000039000000200010043f000000400200003900000000010000190db60d960000040f0000000402100039000000000202041a0000000303100039000000000303041a0000000204100039000000000404041a0000000105100039000000000505041a000000000101041a000000800010043f000000a00050043f000000c00040043f000000e00000043f000001000030043f000001200020043f000001400000043f000001600000043f000001800000043f000003c40100004100000db70001042e0000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000000402100370000000000202043b000003aa0320009c000008900000213d0000002401100370000000000301043b00000000010004110db60bfa0000040f000004bd0000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b000b00000001001d0000000001000411000a00000001001d00000000001004350000000201000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000401043b0000000102400039000000000302041a0000000b0130006c0000059b0000813d000000400100043d0000004402100039000003c303000041000000000032043500000024021000390000001b030000390000000000320435000003b50200004100000000002104350000000402100039000000200300003900000000003204350000036f020000410000036f0310009c00000000010280190000004001100210000003b8011001c700000db8000104300000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b00000000001004350000000601000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000301041a000000400200043d000a00000002001d000900000003001d0000000002320436000b00000002001d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d0000000905000029000000000205004b0000000b060000290000000002060019000002c10000613d000000000101043b00000000030000190000000002060019000000000401041a000000000242043600000001011000390000000103300039000000000453004b000002bb0000413d0000000a0400002900000000014200490000001f01100039000000200200008a000000000221016f0000000001420019000000000221004b00000000020000190000000102004039000003be0310009c000007d60000213d0000000102200190000007d60000c13d000000400010043f00000020020000390000000002210436000000000304043300000000003204350000004002100039000000000403004b000002dc0000613d0000000004000019000000006506043400000000025204360000000104400039000000000534004b000002d70000413d00000000021200490000036f030000410000036f0420009c00000000020380190000036f0410009c000000000103801900000040011002100000006002200210000000000112019f00000db70001042e0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b000b00000001001d000003aa0110009c000008900000213d0000000b0100006b000005e90000c13d000003b501000041000000800010043f0000002001000039000000840010043f0000001f01000039000000a40010043f000003bc01000041000000c40010043f000003bd0100004100000db8000104300000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000002402100370000000000202043b000b00000002001d0000000401100370000000000101043b000000a002000039000900000002001d000000400020043f000000800000043f000a00000001001d00000000001004350000000501000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000b020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000401043b000000800500043d000003ce0150009c000007d60000813d000000000104041a000000010210019000000001021002700000007f0320018f000000000302c0190000001f0230008c00000000020000190000000102002039000000000121013f00000001011001900000005f0000c13d000600000003001d000000200130008c000800000004001d000003580000413d000700000005001d00000000004004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d00000007050000290000001f025000390000000502200270000000200350008c0000000002004019000000000301043b00000006010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000000804000029000003580000813d000000000002041b0000000102200039000000000312004b000003540000413d0000001f0150008c000006890000a13d000700000005001d00000000004004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000200200008a0000000702200180000000000101043b000003760000613d00000020040000390000000003000019000000000504001900000080045000390000000004040433000000000041041b000000200450003900000001011000390000002003300039000000000623004b0000036c0000413d000900a00050003d000000070220006c000003820000813d00000007020000290000000302200210000000f80220018f000000010300008a000000000223022f000000000232013f00000009030000290000000003030433000000000223016f000000000021041b0000000701000029000000010110021000000001011001bf000006940000013d0000000001000416000000000101004b000008900000c13d000003c001000041000005220000013d0000000001000416000000000101004b000008900000c13d0000001001000039000000000101041a000000ff0110018f000005220000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000301043b000000000100041100000000020004100db60cc40000040f000000000100001900000db70001042e0000000002000416000000000202004b000008900000c13d000000040230008a000000800220008c000008900000413d0000000402100370000000000202043b000b00000002001d0000002402100370000000000402043b000003be0240009c000008900000213d0000002302400039000003c505000041000000000632004b00000000060000190000000006058019000003c502200197000000000702004b0000000005008019000003c50220009c000000000506c019000000000205004b000008900000c13d0000000402400039000000000521034f000000000505043b000a00000005001d000003be0550009c000008900000213d0000002405400039000900000005001d0000000a04500029000000000434004b000008900000213d0000004404100370000000000404043b000800000004001d0000006404100370000000000504043b000003be0450009c000008900000213d0000002304500039000003c506000041000000000734004b00000000070000190000000007068019000003c504400197000000000804004b0000000006008019000003c50440009c000000000607c019000000000406004b000008900000c13d0000000406500039000000000461034f000000000404043b000003be0740009c000007d60000213d000000bf074000390007002000000092000000070770017f000003be0870009c000007d60000213d0000002405500039000000400070043f000000800040043f0000000005540019000000000335004b000008900000213d0000002003600039000000000331034f0000001f0540018f0000000506400272000003f40000613d00000000070000190000000508700210000000000983034f000000000909043b000000a00880003900000000009804350000000107700039000000000867004b000003ec0000413d000000000705004b000004030000613d0000000506600210000000000363034f0000000305500210000000a006600039000000000706043300000000075701cf000000000757022f000000000303043b0000010005500089000000000353022f00000000035301cf000000000373019f0000000000360435000000a00340003900000000000304350000000a030000290000003f03300039000000070430017f000000400300043d0000000004430019000000000534004b00000000050000190000000105004039000003be0640009c000007d60000213d0000000105500190000007d60000c13d000000400040043f0000002002200039000000000221034f0000000a040000290005001f0040019300000000014304360000000507400272000004220000613d000000000400001900000005054002100000000006510019000000000552034f000000000505043b00000000005604350000000104400039000000000574004b0000041a0000413d000600000007001d000000050400006b000004340000613d00000006040000290000000504400210000000000242034f000000000441001900000005050000290000000305500210000000000604043300000000065601cf000000000656022f000000000202043b0000010005500089000000000252022f00000000025201cf000000000262019f00000000002404350000000a0210002900000000000204350000036f020000410000036f0410009c0000000001028019000000400110021000000000030304330000036f0430009c00000000030280190000006003300210000000000113019f00000000030004140000036f0430009c0000000003028019000000c002300210000000000112019f000003c6011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000003c70110009c000006ee0000c13d000000400100043d0000004402100039000003cc03000041000000000032043500000024021000390000001703000039000002810000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b000b00000001001d0000000001000411000a00000001001d00000000001004350000000201000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000301043b0000000204300039000000000104041a000000000201004b000900000003001d000006160000c13d00000000020004100000000a010000290000000b030000290db60cc40000040f000006230000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000600220008c000008900000413d0000000402100370000000000202043b000b00000002001d000003aa0220009c000008900000213d0000002402100370000000000202043b000003aa0320009c000008900000213d0000004401100370000000000301043b0000000b01000029000a00000003001d0db60c540000040f0000000b0100002900000000001004350000000701000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000002000411000900000002001d0000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000101041a0000000a03000029000000000231004b0000063b0000413d00000000033100490000000b0100002900000009020000290000025c0000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000000402100370000000000202043b000003aa0320009c000008900000213d0000002401100370000000000301043b00000000010004110db60c540000040f0000000101000039000005150000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000200220008c000008900000413d0000000401100370000000000101043b000003aa0210009c000008900000213d00000000001004350000000801000039000000200010043f000000400200003900000000010000190db60d960000040f000005210000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000002402100370000000000202043b000b00000002001d0000000401100370000000000101043b00000000001004350000000301000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a0000000b0220006b000008900000813d0000050e0000013d0000000001000416000000000101004b000008900000c13d0000000001000410000005220000013d0000000002000416000000000202004b000008900000c13d000000040230008a000000400220008c000008900000413d0000002402100370000000000202043b000b00000002001d0000000401100370000000000101043b00000000001004350000000601000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a0000000b0220006b000008900000813d0000000b020000290db6091a0000040f0000000302200210000000000101041a000000000121022f000000ff0220008c0000000001002019000000400200043d00000000001204350000036f010000410000036f0320009c00000000020180190000004001200210000003ad011001c700000db70001042e0000000001000416000000000101004b000008900000c13d0000000a01000039000000000101041a000000800010043f000003ab0100004100000db70001042e000a00000002001d000900000001001d0000000b0100002900000000001004350000000301000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a000000000302004b00000000030000190000054b0000613d0000000a0220006c00000000030000190000054b0000a13d00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000a01100029000000000301041a000a00000003001d0000000b0100002900000000001004350000000501000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000a020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a000000010320019000000001042002700000007f0540018f000000000504c0190000001f0450008c00000000040000190000000104002039000000000442013f00000001044001900000005f0000c13d000000400400043d000b00000004001d000800000005001d0000000004540436000700000004001d000000000303004b000006d60000613d00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d0000000805000029000000000205004b00000000020000190000000706000029000006dd0000613d000000000101043b00000000020000190000000003260019000000000401041a000000000043043500000001011000390000002002200039000000000352004b0000058c0000413d000006dd0000013d000001000300008a000000000232016f000000a00020043f000000000101004b000000c002000039000000a002006039000005d40000013d000900000004001d000700000003001d000800000002001d000003ae0100004100000000001004390000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003af011001c70000800b020000390db60db10000040f0000000102200190000007b20000613d000000000101043b0000000902000029000000000012041b0000000201200039000000000301041a0000000b040000290000000002430019000000000332004b0000000003000019000000010300403900000001033001900000063b0000c13d000000000021041b00000007014000690000000802000029000000000012041b000000400100043d000000200210003900000000004204350000000a02000029000003aa0220019700000000002104350000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000004001100210000000c002300210000000000112019f000003ac011001c70000800d020000390000000103000039000003c204000041000006840000013d000001000300008a000000000232016f000000a00020043f000000000101004b000000c002000039000000a002006039000000800220008a0000008001000039000b00000001001d0db608b90000040f0000002001000039000000400200043d000a00000002001d00000000021204360000000b010000290db608920000040f0000000a0400002900000000014100490000036f020000410000036f0310009c00000000010280190000036f0340009c000000000402801900000040024002100000006001100210000000000121019f00000db70001042e0000000d01000039000000000201041a000003b90320009c0000063b0000213d000003ba02200041000000000021041b0000000b0100002900000000001004350000000801000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a000003b90320009c0000063b0000213d000003ba02200041000000000021041b000003ba01000041000000400200043d00000000001204350000036f0100004100000000030004140000036f0430009c00000000030180190000036f0420009c00000000020180190000004001200210000000c002300210000000000112019f00000370011001c70000800d020000390000000303000039000003bb0400004100000000050000190000000b06000029000006840000013d0000000b03000029000000000231004b000006210000813d000000000313004900000000020004100000000a01000029000800000004001d0db60cc40000040f0000000801000029000000000001041b000006230000013d0000000001310049000000000014041b000003ae0100004100000000001004390000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003af011001c70000800b020000390db60db10000040f0000000102200190000007b20000613d000000000101043b0000000902000029000000000012041b0000000101200039000000000301041a0000000b040000290000000002430019000000000332004b0000000003000019000000010300403900000001033001900000063f0000613d000003d00100004100000000001004350000001101000039000000620000013d000000000021041b000000400100043d000000200210003900000000004204350000000a02000029000003aa0220019700000000002104350000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000004001100210000000c002300210000000000112019f000003ac011001c70000800d020000390000000103000039000003b004000041000006840000013d00000009010000290000000201100039000a00000001001d000000000301041a000000000103004b0000066f0000c13d000000400100043d0000006402100039000003b30300004100000000003204350000004402100039000003b4030000410000000000320435000000240210003900000022030000390000000000320435000003b50200004100000000002104350000000402100039000000200300003900000000003204350000036f020000410000036f0310009c00000000010280190000004001100210000003b6011001c700000db80001043000000000010004100000000b020000290db60c540000040f0000000a01000029000000000001041b000000400100043d0000000b0200002900000000002104350000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000004001100210000000c002300210000000000112019f00000370011001c70000800d020000390000000103000039000003b2040000410db60dac0000040f0000000101200190000008900000613d000000000100001900000db70001042e000000000105004b00000000010000190000068d0000613d000000a00100043d0000000302500210000000010300008a000000000223022f000000000232013f000000000121016f0000000102500210000000000121019f0000000802000029000000000012041b0000000a010000290000000000100435000000200000043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000b020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b0000000b01000039000000000201041a000000010300008a000000000332004b0000063b0000613d0000000102200039000900000002001d000000000021041b000000400200043d00000040012000390000000b030000290000000000310435000000400100003900000000011204360000000a030000290000000000310435000003cf0320009c000007d60000213d0000006003200039000000400030043f00000000020204330db60d960000040f00000000001004350000000601000039000000200010043f000000400200003900000000010000190db60d960000040f00000009020000290db609360000040f000000000100001900000db70001042e000001000100008a000000000112016f00000007020000290000000000120435000000080100006b000000200200003900000000020060190000003f01200039000000200200008a000000000121016f0000000b040000290000000002410019000000000112004b000000000300001900000001030040390000000005020019000003be0220009c0000000901000029000007d60000213d0000000102300190000007d60000c13d0000000002050019000000400020043f0000018f0000013d0000000b0100002900000000001004350000000301000039000400000001001d000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000080200006b0000070e0000613d000000000101041a000000080110006b0000070e0000613d000000400100043d0000004402100039000003c8030000410000000000320435000003b50200004100000000002104350000002402100039000000200300003900000000003204350000000402100039000002860000013d000000800100043d0000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000006001100210000000c002300210000000000121019f000003c9011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000b02000029000000650220008c0000072a0000413d0000000b0110006b0000072a0000613d000000400100043d0000004402100039000003cb03000041000000000032043500000024021000390000001d03000039000002810000013d0000000b0100002900000000001004350000000501000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000300000001001d000003ae01000041000000000010043900000000010004140000036f0210009c0000036f01008041000000c001100210000003af011001c70000800b020000390db60db10000040f0000000102200190000007b20000613d000000000101043b000200000001001d00000000001004350000000301000029000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000300000001001d000000000101041a000000010210019000000001021002700000007f0320018f000000000302c019000100000003001d0000001f0230008c00000000020000190000000102002039000000000121013f00000001011001900000005f0000c13d0000000101000029000000200110008c000007820000413d000000030100002900000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d0000000a030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000007820000813d000000000002041b0000000102200039000000000312004b0000077e0000413d0000000a010000290000001f0110008c000007b30000a13d000000030100002900000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d00000007030000290000000a03300180000000000101043b00000000020000190000000906000029000007a10000613d000000000400036700000000020000190000000005620019000000000554034f000000000505043b000000000051041b00000001011000390000002002200039000000000532004b000007990000413d0000000a0330006c000007ae0000813d0000000a030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f00000009022000290000000002200367000000000202043b000000000232016f000000000021041b0000000a01000029000000010110021000000001011001bf000007c10000013d000000000001042f0000000a0100006b0000000001000019000007b90000613d00000009010000290000000001100367000000000101043b0000000a040000290000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f0000000302000029000000000012041b0000000b0100002900000000001004350000000401000029000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a000400000002001d000003be0220009c000007da0000a13d000003d00100004100000000001004350000004101000039000000620000013d00000004020000290000000102200039000000000021041b00000000001004350000036f0300004100000000010004140000036f0210009c0000000001038019000000c00110021000000370011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b00000004011000290000000202000029000000000021041b0000000b0100002900000000001004350000000101000039000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b00000002020000290000000000200435000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b000000000201041a00000373022001970000000003000411000000000232019f000000000021041b000400000003001d00000000003004350000000201000039000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b00000003011000390000000202000029000000000021041b0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000008900000613d000000000101043b0000000401100039000000000201041a000000010300008a000000000332004b0000063b0000613d0000000102200039000000000021041b000000400100043d000000c0021000390000000a0300002900000000003204350000004002100039000000c00300003900000000003204350000002002100039000000020300002900000000003204350000000b020000290000000000210435000000e00210003900000009030000290000000003300367000000060400006b0000084a0000613d000000000400001900000005054002100000000006520019000000000553034f000000000505043b00000000005604350000000104400039000000060540006c000008420000413d000000050400006b0000085b0000613d00000006040000290000000504400210000000000343034f000000000442001900000005050000290000000305500210000000000604043300000000065601cf000000000656022f000000000303043b0000010005500089000000000353022f00000000035301cf000000000363019f00000000003404350000000a03000029000000000232001900000000000204350000006002100039000000080400002900000000004204350000001f02300039000000070220017f000000e003200039000000800410003900000000003404350000000004210019000000e005400039000000800300043d00000000003504350000010004400039000000000503004b000008750000613d00000000050000190000000006450019000000a007500039000000000707043300000000007604350000002005500039000000000635004b0000086e0000413d00000000044300190000000000040435000000a004100039000000040500002900000000005404350000001f03300039000000070330017f00000000023200190000036f030000410000036f0410009c0000000001038019000000400110021000000100022000390000036f0420009c00000000020380190000006002200210000000000112019f00000000020004140000036f0420009c0000000002038019000000c002200210000000000112019f000003c6011001c70000800d020000390000000103000039000003ca04000041000006840000013d000000000100001900000db80001043000000000030104330000000002320436000000000403004b0000089e0000613d000000000400001900000000054200190000002004400039000000000614001900000000060604330000000000650435000000000534004b000008970000413d000000000132001900000000000104350000001f01300039000000200300008a000000000131016f0000000001120019000000000001042d000000040110008a000003c5020000410000003f0310008c00000000030000190000000003022019000003c501100197000000000401004b0000000002008019000003c50110009c000000000203c019000000000102004b000008b70000613d00000000020003670000000401200370000000000101043b0000002402200370000000000202043b000000000001042d000000000100001900000db8000104300000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000003be0310009c000008c60000213d0000000102200190000008c60000c13d000000400010043f000000000001042d000003d00100004100000000001004350000004101000039000000040010043f000003d10100004100000db8000104300003000000000002000000000201041a000000010320019000000001042002700000007f0640018f000000000604c0190000001f0460008c00000000040000190000000104002039000000010440018f000000000443004b0000090e0000c13d000000400500043d0000000004650436000000000303004b000008fa0000613d000100000004001d000200000006001d000300000005001d00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000009180000613d0000000206000029000000000206004b000000000200001900000003050000290000000107000029000009000000613d000000000101043b00000000020000190000000003270019000000000401041a000000000043043500000001011000390000002002200039000000000362004b000008f20000413d000009000000013d000001000100008a000000000112016f0000000000140435000000000106004b000000200200003900000000020060190000003f01200039000000200200008a000000000221016f0000000001520019000000000221004b00000000020000190000000102004039000003be0310009c000009120000213d0000000102200190000009120000c13d000000400010043f0000000001050019000000000001042d000003d00100004100000000001004350000002201000039000009150000013d000003d00100004100000000001004350000004101000039000000040010043f000003d10100004100000db800010430000000000100001900000db8000104300001000000000002000000000301041a000100000002001d000000000223004b0000092e0000a13d00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000009340000613d000000000101043b00000001011000290000000002000019000000000001042d000003d00100004100000000001004350000003201000039000000040010043f000003d10100004100000db800010430000000000100001900000db8000104300002000000000002000200000002001d000000000301041a000003ce0230009c0000094e0000813d000100000003001d0000000102300039000000000021041b00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f0000000102200190000009540000613d000000000101043b00000001011000290000000202000029000000000021041b000000000001042d000003d00100004100000000001004350000004101000039000000040010043f000003d10100004100000db800010430000000000100001900000db8000104300009000000000002000500000002001d000800000001001d00000000001004350000000301000039000600000001001d000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000900000001001d000000000101004b0000000001000019000000000200001900000bc90000613d000000080100002900000000001004350000000601000029000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000201041a000000000202004b00000000020000190000098e0000613d00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000201041a000000050120006c0000000001000019000000000200001900000bc90000813d000000080100002900000000001004350000000601000029000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d00000009020000290009000100200092000000000101043b000000000201041a000000000302004b0000000003000019000009b80000613d000000090220006c0000000003000019000009b80000a13d00000000001004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b0000000901100029000000000301041a000000050130006c00000a000000813d000780100000003d000500000003001d00000008010000290000000000100435000000200000043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000007020000290db60db10000040f000000010220019000000bca0000613d000000000101043b00000005020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000007020000290db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000000ff0110019000000a890000613d000000090100006b00000a8b0000613d000000080100002900000000001004350000000601000029000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000007020000290db60db10000040f000000010220019000000bca0000613d00000009020000290009000100200092000000000101043b000000000201041a000000000302004b0000000003000019000009bb0000613d000000090220006c0000000003000019000009bb0000a13d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b0000000901100029000000000301041a000009bb0000013d000280100000003d000000000400001900000a080000013d000000050150006c00000aae0000413d000000000143004b000900000003001d00000bcc0000413d000000090140006900000001011002700000000002410019000400000002001d000700010020003d000000070110006b00000bcc0000a13d000300000004001d000000080100002900000000001004350000000601000029000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000002020000290db60db10000040f000000010220019000000bca0000613d000000000101043b000000000201041a000000000302004b000000000300001900000a320000613d000000070220006c000000000300001900000a320000a13d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b0000000701100029000000000301041a000000050130006c00000a620000813d000100000003001d000000010100008a000000070110006b00000bcc0000613d000000080100002900000000001004350000000601000029000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d00000004020000290000000204200039000000000101043b000000000301041a000000000203004b000000000200001900000a5e0000613d000000000243004b000000000200001900000a5e0000a13d000300000004001d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000003040000290000000001410019000000000201041a000000050120006c000000090300002900000a050000413d00000b180000013d000000080100002900000000001004350000000601000029000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000201041a000000000302004b00000000050000190000000403000029000000030400002900000a030000613d000000000232004b000000000500001900000a030000a13d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000004030000290000000001310019000000000501041a000000030400002900000a030000013d000000090100006b00000aab0000c13d00000008010000290000000000100435000000200000043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000005020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000000ff011001900000000001000019000000000200001900000bc90000c13d0000000101000039000000090200002900000bc90000013d000500000005001d00000008010000290000000000100435000000200000043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000005020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000300010000003d000000000101043b000000000101041a000000ff0110019000000003010000290000000402000029000000050300002900000bc90000613d000780100000003d000900000002001d000500000003001d00000008010000290000000000100435000000200000043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000007020000290db60db10000040f000000010220019000000bca0000613d000000000101043b00000005020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000007020000290db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000000ff0110019000000b800000613d000000090100006b00000b820000613d000000080100002900000000001004350000000601000029000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000007020000290db60db10000040f000000010220019000000bca0000613d00000009020000290009000100200092000000000101043b000000000201041a000000000302004b000000000300001900000ad30000613d000000090220006c000000000300001900000ad30000a13d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b0000000901100029000000000301041a00000ad30000013d00000008010000290000000000100435000000200000043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000001020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000500010000003d000000000101043b000000000101041a000000ff011001900000000501000029000000070200002900000bc90000613d000980100000003d0000000103000029000100000003001d00000008010000290000000000100435000000200000043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000009020000290db60db10000040f000000010220019000000bca0000613d000000000101043b00000001020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000009020000290db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000000ff0110019000000ba50000613d000000070100006b00000ba70000613d000000080100002900000000001004350000000601000029000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700000009020000290db60db10000040f000000010220019000000bca0000613d00000007020000290007000100200092000000000101043b000000000201041a000000000302004b000000000300001900000b3b0000613d000000070220006c000000000300001900000b3b0000a13d000000000010043500000000010004140000036f0210009c0000036f01008041000000c00110021000000370011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b0000000701100029000000000301041a00000b3b0000013d000000090100006b00000ba20000c13d00000008010000290000000000100435000000200000043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000005020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000000ff011001900000000001000019000000000200001900000bc90000c13d0000000301000029000000090200002900000bc90000013d000000070100006b00000bc70000c13d00000008010000290000000000100435000000200000043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b00000001020000290000000000200435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000bca0000613d000000000101043b000000000101041a000000ff011001900000000001000019000000000200001900000bc90000c13d00000005010000290000000702000029000000000001042d000000000100001900000db800010430000003d00100004100000000001004350000001101000039000000040010043f000003d10100004100000db8000104300001000000000002000100000002001d00000000001004350000000301000039000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000bf80000613d000000000201043b000000000302041a000000000103004b000000000100001900000bf70000613d000000010130006c000000000100001900000bf70000a13d00000000002004350000036f0100004100000000020004140000036f0320009c0000000002018019000000c00120021000000370011001c700008010020000390db60db10000040f000000010220019000000bf80000613d000000000101043b0000000101100029000000000101041a000000000001042d000000000100001900000db8000104300003000000000002000003aa0110019800000c350000613d000200000003001d000303aa0020019c00000c3f0000613d000100000001001d00000000001004350000000701000039000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000000030300002900000c330000613d000000000101043b0000000000300435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000306000029000000010220019000000c330000613d000000000101043b0000000202000029000000000021041b000000400100043d00000000002104350000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000004001100210000000c002300210000000000112019f00000370011001c70000800d020000390000000303000039000003d30400004100000001050000290db60dac0000040f000000010120019000000c330000613d000000000001042d000000000100001900000db800010430000000400100043d0000006402100039000003d60300004100000000003204350000004402100039000003d70300004100000000003204350000002402100039000000240300003900000c480000013d000000400100043d0000006402100039000003d40300004100000000003204350000004402100039000003d5030000410000000000320435000000240210003900000022030000390000000000320435000003b50200004100000000002104350000000402100039000000200300003900000000003204350000036f020000410000036f0310009c00000000010280190000004001100210000003b6011001c700000db8000104300004000000000002000003aa0110019800000ca50000613d000400000003001d000303aa0020019c00000caf0000613d000100000001001d00000000001004350000000801000039000200000001001d000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f0000000102200190000000040400002900000c9d0000613d000000000101043b000000000201041a000000000342004b00000c9f0000413d0000000002420049000000000021041b000000030100002900000000001004350000000201000029000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000c9d0000613d000000000101043b000000000301041a0000000402300029000000000332004b000000000300001900000001030040390000000103300190000000040300002900000c9f0000c13d000000000021041b000000400100043d00000000003104350000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000004001100210000000c002300210000000000112019f00000370011001c70000800d020000390000000303000039000003bb04000041000000010500002900000003060000290db60dac0000040f000000010120019000000c9d0000613d000000000001042d000000000100001900000db800010430000003d00100004100000000001004350000001101000039000000040010043f000003d10100004100000db800010430000000400100043d0000006402100039000003da0300004100000000003204350000004402100039000003db0300004100000000003204350000002402100039000000250300003900000cb80000013d000000400100043d0000006402100039000003d80300004100000000003204350000004402100039000003d9030000410000000000320435000000240210003900000023030000390000000000320435000003b50200004100000000002104350000000402100039000000200300003900000000003204350000036f020000410000036f0310009c00000000010280190000004001100210000003b6011001c700000db8000104300005000000000002000503aa0010019c00000d6c0000613d000400000003001d000303aa0020019c00000d760000613d000000050100002900000000001004350000000801000039000200000001001d000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000d640000613d000000000101043b000000000201041a0000000404000029000000000342004b00000d660000413d0000000002420049000000000021041b000000030100002900000000001004350000000201000029000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000d640000613d000000000101043b000000000301041a00000004040000290000000002430019000000000332004b00000000030000190000000103004039000000010330019000000d660000c13d000000000021041b000000400100043d00000000004104350000036f0400004100000000020004140000036f0320009c00000000020480190000036f0310009c00000000010480190000004001100210000000c002200210000000000112019f00000370011001c70000800d020000390000000303000039000003bb04000041000000050500002900000003060000290db60dac0000040f000000010120019000000d640000613d000000050100002900000000001004350000000701000039000200000001001d000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f000000010220019000000d640000613d000000000101043b00000000020004100000000000200435000000200010043f0000036f0100004100000000020004140000036f0320009c0000000002018019000000c001200210000003ac011001c700008010020000390db60db10000040f000000010220019000000d640000613d000000000101043b000000000201041a000000040120006c00000d660000413d000100000002001d0000000001000411000303aa0010019c00000d800000613d000000050100002900000000001004350000000201000029000000200010043f0000036f0300004100000000010004140000036f0210009c0000000001038019000000c001100210000003ac011001c700008010020000390db60db10000040f0000000102200190000000030300002900000d640000613d000000000101043b0000000000300435000000200010043f00000000010004140000036f0210009c0000036f01008041000000c001100210000003ac011001c700008010020000390db60db10000040f0000000306000029000000010220019000000d640000613d0000000103000029000000040230006a000000000101043b000000000021041b000000400100043d00000000002104350000036f0200004100000000030004140000036f0430009c00000000030280190000036f0410009c00000000010280190000004001100210000000c002300210000000000112019f00000370011001c70000800d020000390000000303000039000003d30400004100000005050000290db60dac0000040f000000010120019000000d640000613d000000000001042d000000000100001900000db800010430000003d00100004100000000001004350000001101000039000000040010043f000003d10100004100000db800010430000000400100043d0000006402100039000003da0300004100000000003204350000004402100039000003db0300004100000000003204350000002402100039000000250300003900000d890000013d000000400100043d0000006402100039000003d80300004100000000003204350000004402100039000003d90300004100000000003204350000002402100039000000230300003900000d890000013d000000400100043d0000006402100039000003d40300004100000000003204350000004402100039000003d5030000410000000000320435000000240210003900000022030000390000000000320435000003b50200004100000000002104350000000402100039000000200300003900000000003204350000036f020000410000036f0310009c00000000010280190000004001100210000003b6011001c700000db800010430000000000001042f0000036f030000410000036f0410009c000000000103801900000040011002100000036f0420009c00000000020380190000006002200210000000000112019f00000000020004140000036f0420009c0000000002038019000000c002200210000000000112019f000003c6011001c700008010020000390db60db10000040f000000010220019000000daa0000613d000000000101043b000000000001042d000000000100001900000db80001043000000daf002104210000000102000039000000000001042d0000000002000019000000000001042d00000db4002104230000000102000039000000000001042d0000000002000019000000000001042d00000db60000043200000db70001042e00000db80001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff020000000000000000000000000000000000002000000000000000000000000054656c6c6f72506c617967726f756e64000000000000000000000000000000205452425000000000000000000000000000000000000000000000000000000008ffffffffffffffffffffffff0000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000733bdeef00000000000000000000000000000000000000000000000000000000c5958af800000000000000000000000000000000000000000000000000000000d9c51cd300000000000000000000000000000000000000000000000000000000e07c548500000000000000000000000000000000000000000000000000000000e07c548600000000000000000000000000000000000000000000000000000000f25133f300000000000000000000000000000000000000000000000000000000fc0c546a00000000000000000000000000000000000000000000000000000000d9c51cd400000000000000000000000000000000000000000000000000000000dd62ed3e00000000000000000000000000000000000000000000000000000000c979fe9e00000000000000000000000000000000000000000000000000000000c979fe9f00000000000000000000000000000000000000000000000000000000cb82cc8f00000000000000000000000000000000000000000000000000000000ce5e11bf00000000000000000000000000000000000000000000000000000000c5958af900000000000000000000000000000000000000000000000000000000c63840710000000000000000000000000000000000000000000000000000000096426d9600000000000000000000000000000000000000000000000000000000a9059cba00000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000b86d1d6300000000000000000000000000000000000000000000000000000000bed9d8610000000000000000000000000000000000000000000000000000000096426d9700000000000000000000000000000000000000000000000000000000a792765f000000000000000000000000000000000000000000000000000000008929f4c5000000000000000000000000000000000000000000000000000000008929f4c60000000000000000000000000000000000000000000000000000000095d89b4100000000000000000000000000000000000000000000000000000000733bdef00000000000000000000000000000000000000000000000000000000077b03e0d00000000000000000000000000000000000000000000000000000000313ce5660000000000000000000000000000000000000000000000000000000060c7dc460000000000000000000000000000000000000000000000000000000069d43bd20000000000000000000000000000000000000000000000000000000069d43bd30000000000000000000000000000000000000000000000000000000070a0823100000000000000000000000000000000000000000000000000000000722580b60000000000000000000000000000000000000000000000000000000060c7dc470000000000000000000000000000000000000000000000000000000064473df2000000000000000000000000000000000000000000000000000000005aa6e674000000000000000000000000000000000000000000000000000000005aa6e675000000000000000000000000000000000000000000000000000000005eaa9ced00000000000000000000000000000000000000000000000000000000602bf22700000000000000000000000000000000000000000000000000000000313ce5670000000000000000000000000000000000000000000000000000000044e87f91000000000000000000000000000000000000000000000000000000001f379acb0000000000000000000000000000000000000000000000000000000023b872dc0000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000248638e50000000000000000000000000000000000000000000000000000000029449085000000000000000000000000000000000000000000000000000000001f379acc00000000000000000000000000000000000000000000000000000000217053c000000000000000000000000000000000000000000000000000000000095ea7b200000000000000000000000000000000000000000000000000000000095ea7b30000000000000000000000000000000000000000000000000000000018160ddd0000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000091b50ff000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000002000000080000000000000000002000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d955391320200000200000000000000000000000000000004000000000000000000000000a96c2cce65119a2170d1711a6e82f18f2006448828483ba7545e5954765436470000000000000000000000000000000000000000000000000000000000093a7f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec616c0000000000000000000000000000000000000000000000000000000000007265706f72746572206e6f74206c6f636b656420666f7220776974686472617708c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000000000000000000000372064617973206469646e2774207061737300000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffc9ca36523a215fffff00000000000000000000000000000000000000000000003635c9adc5dea00000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206d696e7420746f20746865207a65726f2061646472657373000000000000000000000000000000000000000064000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffdf00000000000000000000000000000000000000000000000006f05b59d3b200008d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8023d8d9df4bd0172df32e557fa48e96435cd7f2cac06aaffacfaee608e6f7898ef696e73756666696369656e74207374616b65642062616c616e63650000000000000000000000000000000000000000000000012000000080000000000000000080000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706e6f6e6365206d757374206d617463682074696d657374616d7020696e6465780200000000000000000000000000000000000000000000a0000000000000000048e9e2c732ba278de6ac88a3a57a5c5ba13d3d8370e709b3b98333a57876ca956964206d7573742062652068617368206f66206279746573206461746100000076616c7565206d757374206265207375626d697474656400000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000ffffffffffffff9f4e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925737300000000000000000000000000000000000000000000000000000000000045524332303a20617070726f766520746f20746865207a65726f206164647265726573730000000000000000000000000000000000000000000000000000000045524332303a20617070726f76652066726f6d20746865207a65726f20616464657373000000000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220746f20746865207a65726f2061646472647265737300000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f2061644fcb82f2103e249387d474bc979d28e98eeb35768287ef50b9cfc0ba768a7662"},"methodIdentifiers":{"addStakingRewards(uint256)":"d9c51cd4","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","beginDispute(bytes32,uint256)":"1f379acc","decimals()":"313ce567","depositStake(uint256)":"cb82cc8f","faucet(address)":"b86d1d63","getDataBefore(bytes32,uint256)":"a792765f","getIndexForDataBefore(bytes32,uint256)":"29449085","getNewValueCountbyQueryId(bytes32)":"77b03e0d","getReporterByTimestamp(bytes32,uint256)":"e07c5486","getStakeAmount()":"722580b6","getStakerInfo(address)":"733bdef0","getTimestampbyQueryIdandIndex(bytes32,uint256)":"ce5e11bf","getVoteRounds(bytes32)":"248638e5","governance()":"5aa6e675","isDisputed(bytes32,uint256)":"64473df2","isInDispute(bytes32,uint256)":"44e87f91","name()":"06fdde03","reporterByTimestamp(bytes32,uint256)":"217053c0","requestStakingWithdraw(uint256)":"8929f4c6","retrieveData(bytes32,uint256)":"c5958af9","stakeAmount()":"60c7dc47","submitValue(bytes32,bytes,uint256,bytes)":"5eaa9ced","symbol()":"95d89b41","timeBasedReward()":"96426d97","timestamps(bytes32,uint256)":"f25133f3","tips(bytes32)":"602bf227","tipsInContract()":"69d43bd3","token()":"fc0c546a","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","values(bytes32,uint256)":"091b50ff","voteCount()":"c6384071","voteRounds(bytes32,uint256)":"c979fe9f","withdrawStake()":"bed9d861"}},"irOptimized":"/// @use-src 0:\"contracts/TellorPlayground.sol\"\nobject \"TellorPlayground_1391\" {\n    code {\n        {\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let _1 := extract_byte_array_length(sload(/** @src 0:2309:2335  \"_name = \\\"TellorPlayground\\\"\" */ 0x0e))\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            if gt(_1, 31)\n            {\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 0:2309:2335  \"_name = \\\"TellorPlayground\\\"\" */ 0x0e)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _2, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20)\n                let _3 := add(data, shr(5, add(_1, 31)))\n                let start := data\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _2)\n                }\n            }\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            sstore(/** @src 0:2309:2335  \"_name = \\\"TellorPlayground\\\"\" */ 0x0e, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ add(\"TellorPlayground\", 32))\n            let _4 := extract_byte_array_length(sload(/** @src 0:2345:2361  \"_symbol = \\\"TRBP\\\"\" */ 0x0f))\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            if gt(_4, 31)\n            {\n                /// @src -1:-1:-1\n                let _5 := 0\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src -1:-1:-1 */ _5, /** @src 0:2345:2361  \"_symbol = \\\"TRBP\\\"\" */ 0x0f)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 32)\n                let _6 := add(data_1, shr(5, add(_4, 31)))\n                let start_1 := data_1\n                for { } lt(start_1, _6) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _5)\n                }\n            }\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            sstore(/** @src 0:2345:2361  \"_symbol = \\\"TRBP\\\"\" */ 0x0f, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ add(\"TRBP\", 8))\n            sstore(16, or(and(sload(16), not(255)), /** @src 0:2383:2385  \"18\" */ 0x12))\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            sstore(/** @src 0:2395:2416  \"token = address(this)\" */ 0x0c, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ or(and(sload(/** @src 0:2395:2416  \"token = address(this)\" */ 0x0c), /** @src 0:57:22821  \"contract TellorPlayground {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:2411:2415  \"this\" */ address()))\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            let _7 := mload(64)\n            let _8 := datasize(\"TellorPlayground_1391_deployed\")\n            codecopy(_7, dataoffset(\"TellorPlayground_1391_deployed\"), _8)\n            return(_7, _8)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n    }\n    /// @use-src 0:\"contracts/TellorPlayground.sol\"\n    object \"TellorPlayground_1391_deployed\" {\n        code {\n            {\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 0:19075:19080  \"_name\" */ 0x0e)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(_1, length)\n                        let _5 := 0x20\n                        let _6 := 1\n                        switch and(slotValue, _6)\n                        case 0 {\n                            mstore(add(_1, _5), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 0:19075:19080  \"_name\" */ 0x0e)\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let dataPos := 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(_1, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(_1, i), _5)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        mstore(memPos, _5)\n                        return(memPos, sub(abi_encode_string(_1, add(memPos, _5)), memPos))\n                    }\n                    case 0x091b50ff {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param)\n                        mstore(0x20, /** @src 0:1092:1151  \"mapping(bytes32 => mapping(uint256 => bytes)) public values\" */ 5)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot := keccak256(_4, _2)\n                        mstore(_4, param_1)\n                        mstore(0x20, dataSlot)\n                        let value := copy_array_from_storage_to_memory_bytes(keccak256(_4, _2))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 0x20)\n                        return(memPos_1, sub(abi_encode_string(value, add(memPos_1, 0x20)), memPos_1))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_16208()\n                        /// @src 0:3159:3166  \"_amount\"\n                        fun_approve(/** @src 0:3137:3147  \"msg.sender\" */ caller(), /** @src 0:3159:3166  \"_amount\" */ value0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ calldataload(36))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 0:19890:19902  \"_totalSupply\" */ 0x0d)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _7)\n                        return(memPos_3, 32)\n                    }\n                    case 0x1f379acc {\n                        if callvalue() { revert(_4, _4) }\n                        let param_2, param_3 := abi_decode_bytes32t_uint256(calldatasize())\n                        let memPtr := mload(_2)\n                        finalize_allocation_21765(memPtr)\n                        mstore(memPtr, _4)\n                        mstore(_4, param_2)\n                        let _8 := 0x20\n                        mstore(_8, /** @src 0:3462:3468  \"values\" */ 0x05)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_1 := keccak256(_4, _2)\n                        mstore(_4, param_3)\n                        mstore(_8, dataSlot_1)\n                        let dataSlot_2 := keccak256(_4, _2)\n                        let newLen := mload(memPtr)\n                        let _9 := 0xffffffffffffffff\n                        if gt(newLen, _9)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        clean_up_bytearray_end_slots_bytes_storage(dataSlot_2, extract_byte_array_length(sload(dataSlot_2)), newLen)\n                        let srcOffset := _4\n                        srcOffset := _8\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(_4, dataSlot_2)\n                            let dstPtr := keccak256(_4, _8)\n                            let i_1 := _4\n                            for { } lt(i_1, loopEnd) { i_1 := add(i_1, _8) }\n                            {\n                                sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _8)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(memPtr, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(dataSlot_2, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_1 := _4\n                            if newLen\n                            {\n                                value_1 := mload(add(memPtr, srcOffset))\n                            }\n                            sstore(dataSlot_2, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen))\n                        }\n                        mstore(_4, param_2)\n                        mstore(_8, _4)\n                        let dataSlot_3 := keccak256(_4, _2)\n                        mstore(_4, param_3)\n                        mstore(_8, dataSlot_3)\n                        let dataSlot_4 := keccak256(_4, _2)\n                        sstore(dataSlot_4, or(and(sload(dataSlot_4), not(255)), /** @src 0:3547:3551  \"true\" */ 0x01))\n                        /// @src 0:3561:3572  \"voteCount++\"\n                        let _10 := increment_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:3561:3572  \"voteCount++\" */ 0x0b))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        sstore(/** @src 0:3561:3572  \"voteCount++\" */ 0x0b, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _10)\n                        /// @src 0:3603:3641  \"abi.encodePacked(_queryId, _timestamp)\"\n                        let expr_mpos := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(_2)\n                        /// @src 0:3603:3641  \"abi.encodePacked(_queryId, _timestamp)\"\n                        let _11 := add(expr_mpos, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _8)\n                        mstore(_11, param_2)\n                        mstore(add(/** @src 0:3603:3641  \"abi.encodePacked(_queryId, _timestamp)\" */ expr_mpos, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2), param_3)\n                        /// @src 0:3603:3641  \"abi.encodePacked(_queryId, _timestamp)\"\n                        mstore(expr_mpos, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2)\n                        let newFreePtr := add(expr_mpos, 96)\n                        if or(gt(newFreePtr, _9), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(_4, /** @src 0:3593:3642  \"keccak256(abi.encodePacked(_queryId, _timestamp))\" */ keccak256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _11, mload(/** @src 0:3593:3642  \"keccak256(abi.encodePacked(_queryId, _timestamp))\" */ expr_mpos)))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_8, /** @src 0:3582:3592  \"voteRounds\" */ 0x06)\n                        /// @src 0:3582:3681  \"voteRounds[keccak256(abi.encodePacked(_queryId, _timestamp))].push(...\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ keccak256(_4, _2), _10)\n                        return(_4, _4)\n                    }\n                    case 0x217053c0 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_4, param_5 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_4)\n                        mstore(0x20, /** @src 0:750:824  \"mapping(bytes32 => mapping(uint256 => address)) public reporterByTimestamp\" */ 1)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_5 := keccak256(_4, _2)\n                        mstore(_4, param_5)\n                        mstore(0x20, dataSlot_5)\n                        let value_2 := and(sload(keccak256(_4, _2)), sub(shl(160, 1), 1))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, value_2)\n                        return(memPos_4, 0x20)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_16208()\n                        let value1 := abi_decode_address()\n                        let value_3 := calldataload(68)\n                        /// @src 0:7740:7747  \"_amount\"\n                        fun_transfer(value0_1, value1, value_3)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:7825:7836  \"_allowances\" */ 0x07)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _12 := keccak256(_4, _2)\n                        mstore(_4, /** @src 0:7801:7811  \"msg.sender\" */ caller())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(32, _12)\n                        /// @src 0:7825:7867  \"_allowances[_sender][msg.sender] - _amount\"\n                        fun_approve(value0_1, /** @src 0:7801:7811  \"msg.sender\" */ caller(), /** @src 0:7825:7867  \"_allowances[_sender][msg.sender] - _amount\" */ checked_sub_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(keccak256(_4, _2)), /** @src 0:7825:7867  \"_allowances[_sender][msg.sender] - _amount\" */ value_3))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x248638e5 {\n                        if callvalue() { revert(_4, _4) }\n                        let _13 := 32\n                        if slt(add(calldatasize(), not(3)), _13) { revert(_4, _4) }\n                        mstore(_4, calldataload(_3))\n                        mstore(_13, /** @src 0:18271:18281  \"voteRounds\" */ 0x06)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_6 := keccak256(_4, _2)\n                        let pos := mload(_2)\n                        let pos_1 := pos\n                        let length_1 := sload(dataSlot_6)\n                        mstore(pos, length_1)\n                        pos := add(pos, _13)\n                        let pos_2 := pos\n                        mstore(_4, dataSlot_6)\n                        let srcPtr := keccak256(_4, _13)\n                        let i_2 := _4\n                        for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, _13)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(pos_1, sub(pos, pos_1))\n                        let memPos_6 := mload(_2)\n                        let tail := add(memPos_6, _13)\n                        mstore(memPos_6, _13)\n                        let pos_3 := tail\n                        let length_2 := mload(pos_1)\n                        mstore(tail, length_2)\n                        pos_3 := add(memPos_6, _2)\n                        let srcPtr_1 := pos_2\n                        let i_3 := _4\n                        for { } lt(i_3, length_2) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(pos_3, mload(srcPtr_1))\n                            pos_3 := add(pos_3, _13)\n                            srcPtr_1 := add(srcPtr_1, _13)\n                        }\n                        return(memPos_6, sub(pos_3, memPos_6))\n                    }\n                    case 0x29449085 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_6, param_7 := abi_decode_bytes32t_uint256(calldatasize())\n                        let ret_1, ret_2 := fun_getIndexForDataBefore(param_6, param_7)\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, iszero(iszero(ret_1)))\n                        mstore(add(memPos_7, 32), ret_2)\n                        return(memPos_7, _2)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_4 := and(sload(/** @src 0:9365:9374  \"_decimals\" */ 0x10), /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0xff)\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, value_4)\n                        return(memPos_8, 32)\n                    }\n                    case 0x44e87f91 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_8, param_9 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_8)\n                        mstore(0x20, _4)\n                        let dataSlot_7 := keccak256(_4, _2)\n                        mstore(_4, param_9)\n                        mstore(0x20, dataSlot_7)\n                        let value_5 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, iszero(iszero(value_5)))\n                        return(memPos_9, 0x20)\n                    }\n                    case 0x5aa6e675 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, /** @src 0:18493:18497  \"this\" */ address())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0x5eaa9ced {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        let value_6 := calldataload(_3)\n                        let _14 := 36\n                        let offset := calldataload(_14)\n                        let _15 := 0xffffffffffffffff\n                        if gt(offset, _15) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let length_3 := calldataload(add(_3, offset))\n                        if gt(length_3, _15) { revert(_4, _4) }\n                        let arrayPos := add(offset, _14)\n                        if gt(add(add(offset, length_3), _14), calldatasize()) { revert(_4, _4) }\n                        let value_7 := calldataload(68)\n                        let offset_1 := calldataload(100)\n                        if gt(offset_1, _15) { revert(_4, _4) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_4, _4) }\n                        let array := abi_decode_available_length_bytes(add(offset_1, _14), calldataload(add(_3, offset_1)), calldatasize())\n                        /// @src 0:6032:6049  \"keccak256(_value)\"\n                        let _mpos := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ abi_decode_available_length_bytes(/** @src 0:6032:6049  \"keccak256(_value)\" */ arrayPos, length_3, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ calldatasize())\n                        let _16 := mload(/** @src 0:6032:6049  \"keccak256(_value)\" */ _mpos)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _17 := 32\n                        if /** @src 0:6032:6066  \"keccak256(_value) != keccak256(\\\"\\\")\" */ eq(/** @src 0:6032:6049  \"keccak256(_value)\" */ keccak256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ add(/** @src 0:6032:6049  \"keccak256(_value)\" */ _mpos, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _17), _16), /** @src 0:6053:6066  \"keccak256(\\\"\\\")\" */ 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), _17)\n                            mstore(add(memPtr_1, _14), 23)\n                            mstore(add(memPtr_1, 68), \"value must be submitted\")\n                            revert(memPtr_1, 100)\n                        }\n                        mstore(_4, value_6)\n                        mstore(_17, /** @src 0:6135:6145  \"timestamps\" */ 0x03)\n                        /// @src 0:6125:6177  \"_nonce == timestamps[_queryId].length || _nonce == 0\"\n                        let expr := /** @src 0:6125:6162  \"_nonce == timestamps[_queryId].length\" */ eq(value_7, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(keccak256(_4, _2)))\n                        /// @src 0:6125:6177  \"_nonce == timestamps[_queryId].length || _nonce == 0\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 0:6166:6177  \"_nonce == 0\" */ iszero(value_7)\n                        }\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), _17)\n                            mstore(add(memPtr_2, _14), _17)\n                            mstore(add(memPtr_2, 68), \"nonce must match timestamp index\")\n                            revert(memPtr_2, 100)\n                        }\n                        /// @src 0:6266:6327  \"_queryId == keccak256(_queryData) || uint256(_queryId) <= 100\"\n                        let expr_1 := /** @src 0:6266:6299  \"_queryId == keccak256(_queryData)\" */ eq(value_6, /** @src 0:6278:6299  \"keccak256(_queryData)\" */ keccak256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ add(/** @src 0:6278:6299  \"keccak256(_queryData)\" */ array, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _17), mload(/** @src 0:6278:6299  \"keccak256(_queryData)\" */ array)))\n                        /// @src 0:6266:6327  \"_queryId == keccak256(_queryData) || uint256(_queryId) <= 100\"\n                        if iszero(expr_1)\n                        {\n                            expr_1 := /** @src 0:6303:6327  \"uint256(_queryId) <= 100\" */ iszero(gt(value_6, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 100))\n                        }\n                        if iszero(expr_1)\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), _17)\n                            mstore(add(memPtr_3, _14), 29)\n                            mstore(add(memPtr_3, 68), \"id must be hash of bytes data\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(_4, value_6)\n                        mstore(_17, /** @src 0:6392:6398  \"values\" */ 0x05)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 0:6409:6424  \"block.timestamp\" */ timestamp())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_17, dataSlot_8)\n                        let dataSlot_9 := keccak256(_4, _2)\n                        clean_up_bytearray_end_slots_bytes_storage(dataSlot_9, extract_byte_array_length(sload(dataSlot_9)), length_3)\n                        let srcOffset_1 := _4\n                        switch gt(length_3, 0x1f)\n                        case 1 {\n                            let loopEnd_1 := and(length_3, not(31))\n                            mstore(_4, dataSlot_9)\n                            let dstPtr_1 := keccak256(_4, _17)\n                            let i_4 := _4\n                            for { } lt(i_4, loopEnd_1) { i_4 := add(i_4, _17) }\n                            {\n                                sstore(dstPtr_1, calldataload(add(add(offset, srcOffset_1), _14)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, _17)\n                            }\n                            if lt(loopEnd_1, length_3)\n                            {\n                                sstore(dstPtr_1, and(calldataload(add(add(offset, srcOffset_1), _14)), not(shr(and(shl(/** @src 0:6135:6145  \"timestamps\" */ 0x03, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ length_3), 248), not(0)))))\n                            }\n                            sstore(dataSlot_9, add(shl(1, length_3), 1))\n                        }\n                        default {\n                            let value_8 := _4\n                            if length_3\n                            {\n                                value_8 := calldataload(add(add(offset, srcOffset_1), _14))\n                            }\n                            sstore(dataSlot_9, extract_used_part_and_set_length_of_short_byte_array(value_8, length_3))\n                        }\n                        mstore(_4, value_6)\n                        mstore(_17, /** @src 0:6135:6145  \"timestamps\" */ 0x03)\n                        /// @src 0:6444:6486  \"timestamps[_queryId].push(block.timestamp)\"\n                        array_push_from_uint256_to_array_uint256_dyn_storage_ptr(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ keccak256(_4, _2), /** @src 0:6409:6424  \"block.timestamp\" */ timestamp())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_4, value_6)\n                        mstore(_17, 1)\n                        let dataSlot_10 := keccak256(_4, _2)\n                        mstore(_4, /** @src 0:6409:6424  \"block.timestamp\" */ timestamp())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_17, dataSlot_10)\n                        let dataSlot_11 := keccak256(_4, _2)\n                        sstore(dataSlot_11, or(and(sload(dataSlot_11), shl(160, 0xffffffffffffffffffffffff)), /** @src 0:6545:6555  \"msg.sender\" */ caller()))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_4, /** @src 0:6545:6555  \"msg.sender\" */ caller())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_17, /** @src 0:6565:6578  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        sstore(/** @src 0:6565:6612  \"stakerDetails[msg.sender].reporterLastTimestamp\" */ add(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ keccak256(_4, _2), /** @src 0:6135:6145  \"timestamps\" */ 0x03), /** @src 0:6409:6424  \"block.timestamp\" */ timestamp())\n                        /// @src 0:6640:6682  \"stakerDetails[msg.sender].reportsSubmitted\"\n                        let _18 := add(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ keccak256(_4, _2), _3)\n                        sstore(_18, /** @src 0:6640:6684  \"stakerDetails[msg.sender].reportsSubmitted++\" */ increment_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:6640:6684  \"stakerDetails[msg.sender].reportsSubmitted++\" */ _18)))\n                        /// @src 0:6699:6857  \"NewReport(...\"\n                        let _19 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(_2)\n                        mstore(_19, value_6)\n                        mstore(add(_19, _17), /** @src 0:6409:6424  \"block.timestamp\" */ timestamp())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(add(_19, _2), 192)\n                        mstore(add(_19, 192), length_3)\n                        calldatacopy(add(_19, 224), arrayPos, length_3)\n                        mstore(add(add(_19, length_3), 224), _4)\n                        let _20 := add(_19, and(add(length_3, 0x1f), not(31)))\n                        mstore(add(_19, 96), value_7)\n                        mstore(add(_19, 128), add(sub(_20, _19), 224))\n                        let tail_1 := abi_encode_string(array, add(_20, 224))\n                        mstore(add(_19, 160), /** @src 0:6545:6555  \"msg.sender\" */ caller())\n                        /// @src 0:6699:6857  \"NewReport(...\"\n                        log1(_19, sub(tail_1, _19), 0x48e9e2c732ba278de6ac88a3a57a5c5ba13d3d8370e709b3b98333a57876ca95)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(_4, _4)\n                    }\n                    case 0x602bf227 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, calldataload(_3))\n                        mstore(32, _3)\n                        let _21 := sload(keccak256(_4, _2))\n                        let memPos_11 := mload(_2)\n                        mstore(memPos_11, _21)\n                        return(memPos_11, 32)\n                    }\n                    case 0x60c7dc47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _22 := sload(/** @src 0:1431:1457  \"uint256 public stakeAmount\" */ 9)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_12 := mload(_2)\n                        mstore(memPos_12, _22)\n                        return(memPos_12, 32)\n                    }\n                    case 0x64473df2 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_10, param_11 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_10)\n                        mstore(0x20, _4)\n                        let dataSlot_12 := keccak256(_4, _2)\n                        mstore(_4, param_11)\n                        mstore(0x20, dataSlot_12)\n                        let value_9 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_13 := mload(_2)\n                        mstore(memPos_13, iszero(iszero(value_9)))\n                        return(memPos_13, 0x20)\n                    }\n                    case 0x69d43bd3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _23 := sload(/** @src 0:1587:1616  \"uint256 public tipsInContract\" */ 10)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_14 := mload(_2)\n                        mstore(memPos_14, _23)\n                        return(memPos_14, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_16208(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:9094:9103  \"_balances\" */ 0x08)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _24 := sload(keccak256(_4, _2))\n                        let memPos_15 := mload(_2)\n                        mstore(memPos_15, _24)\n                        return(memPos_15, 32)\n                    }\n                    case 0x722580b6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _25 := sload(/** @src 0:16085:16096  \"stakeAmount\" */ 0x09)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_16 := mload(_2)\n                        mstore(memPos_16, _25)\n                        return(memPos_16, 32)\n                    }\n                    case 0x733bdef0 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_16208(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:17105:17118  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_13 := keccak256(_4, _2)\n                        let _26 := sload(/** @src 0:17165:17182  \"_staker.startDate\" */ dataSlot_13)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _27 := sload(/** @src 0:17196:17217  \"_staker.stakedBalance\" */ add(dataSlot_13, 1))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _28 := sload(/** @src 0:17231:17252  \"_staker.lockedBalance\" */ add(dataSlot_13, /** @src 0:17105:17118  \"stakerDetails\" */ 0x02))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _29 := sload(/** @src 0:17296:17325  \"_staker.reporterLastTimestamp\" */ add(dataSlot_13, 3))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _30 := sload(/** @src 0:17339:17363  \"_staker.reportsSubmitted\" */ add(dataSlot_13, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3))\n                        let memPos_17 := mload(_2)\n                        mstore(memPos_17, _26)\n                        mstore(add(memPos_17, 32), _27)\n                        mstore(add(memPos_17, _2), _28)\n                        mstore(add(memPos_17, 96), _4)\n                        mstore(add(memPos_17, 128), _29)\n                        mstore(add(memPos_17, 160), _30)\n                        mstore(add(memPos_17, 192), _4)\n                        mstore(add(memPos_17, 224), _4)\n                        mstore(add(memPos_17, 256), _4)\n                        return(memPos_17, 288)\n                    }\n                    case 0x77b03e0d {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, calldataload(_3))\n                        mstore(32, /** @src 0:15449:15459  \"timestamps\" */ 0x03)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let length_4 := sload(keccak256(_4, _2))\n                        let memPos_18 := mload(_2)\n                        mstore(memPos_18, length_4)\n                        return(memPos_18, 32)\n                    }\n                    case 0x8929f4c6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value_10 := calldataload(_3)\n                        mstore(_4, /** @src 0:5146:5156  \"msg.sender\" */ caller())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(32, /** @src 0:5132:5145  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_14 := keccak256(_4, _2)\n                        /// @src 0:5188:5209  \"_staker.stakedBalance\"\n                        let _31 := add(dataSlot_14, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 1)\n                        let _32 := sload(/** @src 0:5188:5209  \"_staker.stakedBalance\" */ _31)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        if /** @src 0:5188:5220  \"_staker.stakedBalance >= _amount\" */ lt(_32, value_10)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), 32)\n                            mstore(add(memPtr_4, 36), 27)\n                            mstore(add(memPtr_4, 68), \"insufficient staked balance\")\n                            revert(memPtr_4, 100)\n                        }\n                        sstore(dataSlot_14, /** @src 0:5303:5318  \"block.timestamp\" */ timestamp())\n                        /// @src 0:5328:5349  \"_staker.lockedBalance\"\n                        let _33 := add(dataSlot_14, /** @src 0:5132:5145  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        sstore(_33, /** @src 0:5328:5360  \"_staker.lockedBalance += _amount\" */ checked_add_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:5328:5360  \"_staker.lockedBalance += _amount\" */ _33), value_10))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        sstore(_31, /** @src 0:5370:5402  \"_staker.stakedBalance -= _amount\" */ checked_sub_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _32, /** @src 0:5370:5402  \"_staker.stakedBalance -= _amount\" */ value_10))\n                        /// @src 0:5417:5460  \"StakeWithdrawRequested(msg.sender, _amount)\"\n                        let _34 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(_2)\n                        /// @src 0:5417:5460  \"StakeWithdrawRequested(msg.sender, _amount)\"\n                        log1(_34, sub(abi_encode_address_uint256(_34, /** @src 0:5146:5156  \"msg.sender\" */ caller(), /** @src 0:5417:5460  \"StakeWithdrawRequested(msg.sender, _amount)\" */ value_10), _34), 0x3d8d9df4bd0172df32e557fa48e96435cd7f2cac06aaffacfaee608e6f7898ef)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(_4, _4)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_5 := mload(_2)\n                        let ret_3 := _4\n                        let slotValue_1 := sload(/** @src 0:19686:19693  \"_symbol\" */ 0x0f)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let length_5 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_5, length_5)\n                        let _35 := 0x20\n                        let _36 := 1\n                        switch and(slotValue_1, _36)\n                        case 0 {\n                            mstore(add(memPtr_5, _35), and(slotValue_1, not(255)))\n                            ret_3 := add(add(memPtr_5, shl(5, iszero(iszero(length_5)))), _35)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 0:19686:19693  \"_symbol\" */ 0x0f)\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let dataPos_1 := 63806209331542711802848847270949280092855778197726125910674179583545433573378\n                            let i_5 := _4\n                            for { } lt(i_5, length_5) { i_5 := add(i_5, _35) }\n                            {\n                                mstore(add(add(memPtr_5, i_5), _35), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _36)\n                            }\n                            ret_3 := add(add(memPtr_5, i_5), _35)\n                        }\n                        finalize_allocation(memPtr_5, sub(ret_3, memPtr_5))\n                        let memPos_19 := mload(_2)\n                        mstore(memPos_19, _35)\n                        return(memPos_19, sub(abi_encode_string(memPtr_5, add(memPos_19, _35)), memPos_19))\n                    }\n                    case 0x96426d97 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_20 := mload(_2)\n                        mstore(memPos_20, /** @src 0:1505:1509  \"5e17\" */ 0x06f05b59d3b20000)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(memPos_20, 32)\n                    }\n                    case 0xa792765f {\n                        if callvalue() { revert(_4, _4) }\n                        let param_12, param_13 := abi_decode_bytes32t_uint256(calldatasize())\n                        let ret_4, ret_5, ret_6 := fun_getDataBefore(param_12, param_13)\n                        let memPos_21 := mload(_2)\n                        mstore(memPos_21, iszero(iszero(ret_4)))\n                        mstore(add(memPos_21, 32), 96)\n                        let tail_2 := abi_encode_string(ret_5, add(memPos_21, 96))\n                        mstore(add(memPos_21, _2), ret_6)\n                        return(memPos_21, sub(tail_2, memPos_21))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_16208()\n                        /// @src 0:7251:7258  \"_amount\"\n                        fun_transfer(/** @src 0:7227:7237  \"msg.sender\" */ caller(), /** @src 0:7251:7258  \"_amount\" */ value0_2, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ calldataload(36))\n                        let memPos_22 := mload(_2)\n                        mstore(memPos_22, 1)\n                        return(memPos_22, 32)\n                    }\n                    case 0xb86d1d63 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _37 := and(abi_decode_address_16208(), sub(shl(160, 1), 1))\n                        if /** @src 0:21320:21342  \"_account != address(0)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _37)\n                        {\n                            let memPtr_6 := mload(_2)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _3), 32)\n                            mstore(add(memPtr_6, 36), 31)\n                            mstore(add(memPtr_6, 68), \"ERC20: mint to the zero address\")\n                            revert(memPtr_6, 100)\n                        }\n                        sstore(/** @src 0:21388:21411  \"_totalSupply += _amount\" */ 0x0d, checked_add_uint256_16222(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:21388:21411  \"_totalSupply += _amount\" */ 0x0d)))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(_4, _37)\n                        mstore(32, /** @src 0:21421:21430  \"_balances\" */ 0x08)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_15 := keccak256(_4, _2)\n                        sstore(dataSlot_15, /** @src 0:21421:21451  \"_balances[_account] += _amount\" */ checked_add_uint256_16222(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:21421:21451  \"_balances[_account] += _amount\" */ dataSlot_15)))\n                        /// @src 0:21466:21505  \"Transfer(address(0), _account, _amount)\"\n                        let _38 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(_2)\n                        mstore(_38, /** @src 0:4862:4872  \"1000 ether\" */ 0x3635c9adc5dea00000)\n                        /// @src 0:21466:21505  \"Transfer(address(0), _account, _amount)\"\n                        log3(_38, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 32, /** @src 0:21466:21505  \"Transfer(address(0), _account, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _4, /** @src 0:21466:21505  \"Transfer(address(0), _account, _amount)\" */ _37)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(_4, _4)\n                    }\n                    case 0xbed9d861 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        mstore(_4, /** @src 0:8049:8059  \"msg.sender\" */ caller())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(0x20, /** @src 0:8035:8048  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_16 := keccak256(_4, _2)\n                        if /** @src 0:8147:8187  \"block.timestamp - _s.startDate >= 7 days\" */ lt(/** @src 0:8147:8177  \"block.timestamp - _s.startDate\" */ checked_sub_uint256(/** @src 0:8147:8162  \"block.timestamp\" */ timestamp(), /** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:8165:8177  \"_s.startDate\" */ dataSlot_16)), /** @src 0:8181:8187  \"7 days\" */ 0x093a80)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        {\n                            let memPtr_7 := mload(_2)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _3), 0x20)\n                            mstore(add(memPtr_7, 36), 18)\n                            mstore(add(memPtr_7, 68), \"7 days didn't pass\")\n                            revert(memPtr_7, 100)\n                        }\n                        /// @src 0:8228:8244  \"_s.lockedBalance\"\n                        let _39 := add(dataSlot_16, /** @src 0:8035:8048  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _40 := sload(/** @src 0:8228:8244  \"_s.lockedBalance\" */ _39)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        if /** @src 0:8228:8248  \"_s.lockedBalance > 0\" */ iszero(_40)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        {\n                            let memPtr_8 := mload(_2)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, _3), 0x20)\n                            mstore(add(memPtr_8, 36), 34)\n                            mstore(add(memPtr_8, 68), \"reporter not locked for withdraw\")\n                            mstore(add(memPtr_8, 100), \"al\")\n                            revert(memPtr_8, 132)\n                        }\n                        /// @src 0:8334:8350  \"_s.lockedBalance\"\n                        fun_transfer(/** @src 0:8315:8319  \"this\" */ address(), /** @src 0:8049:8059  \"msg.sender\" */ caller(), /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _40)\n                        sstore(_39, _4)\n                        /// @src 0:8396:8422  \"StakeWithdrawn(msg.sender)\"\n                        let _41 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(_2)\n                        mstore(_41, /** @src 0:8049:8059  \"msg.sender\" */ caller())\n                        /// @src 0:8396:8422  \"StakeWithdrawn(msg.sender)\"\n                        log1(_41, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20, /** @src 0:8396:8422  \"StakeWithdrawn(msg.sender)\" */ 0x4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(_4, _4)\n                    }\n                    case 0xc5958af9 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_14, param_15 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_14)\n                        mstore(0x20, /** @src 0:19469:19475  \"values\" */ 0x05)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_17 := keccak256(_4, _2)\n                        mstore(_4, param_15)\n                        mstore(0x20, dataSlot_17)\n                        let converted := copy_array_from_storage_to_memory_bytes(keccak256(_4, _2))\n                        let memPos_23 := mload(_2)\n                        mstore(memPos_23, 0x20)\n                        return(memPos_23, sub(abi_encode_string(converted, add(memPos_23, 0x20)), memPos_23))\n                    }\n                    case 0xc6384071 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _42 := sload(/** @src 0:1660:1684  \"uint256 public voteCount\" */ 11)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_24 := mload(_2)\n                        mstore(memPos_24, _42)\n                        return(memPos_24, 32)\n                    }\n                    case 0xc979fe9f {\n                        if callvalue() { revert(_4, _4) }\n                        let param_16, param_17 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_16)\n                        mstore(0x20, /** @src 0:1189:1236  \"mapping(bytes32 => uint256[]) public voteRounds\" */ 6)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_18 := keccak256(_4, _2)\n                        /// @src 0:1189:1236  \"mapping(bytes32 => uint256[]) public voteRounds\"\n                        if iszero(lt(param_17, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:1189:1236  \"mapping(bytes32 => uint256[]) public voteRounds\" */ dataSlot_18)))\n                        {\n                            revert(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _4, _4)\n                        }\n                        /// @src 0:1189:1236  \"mapping(bytes32 => uint256[]) public voteRounds\"\n                        let slot, offset_2 := storage_array_index_access_uint256_dyn(dataSlot_18, param_17)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _43 := sload(/** @src 0:1189:1236  \"mapping(bytes32 => uint256[]) public voteRounds\" */ slot)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_25 := mload(_2)\n                        mstore(memPos_25, shr(shl(3, offset_2), _43))\n                        return(memPos_25, 0x20)\n                    }\n                    case 0xcb82cc8f {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value_11 := calldataload(_3)\n                        mstore(_4, /** @src 0:3904:3914  \"msg.sender\" */ caller())\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        mstore(32, /** @src 0:3890:3903  \"stakerDetails\" */ 0x02)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_19 := keccak256(_4, _2)\n                        /// @src 0:3929:3950  \"_staker.lockedBalance\"\n                        let _44 := add(dataSlot_19, /** @src 0:3890:3903  \"stakerDetails\" */ 0x02)\n                        /// @src 0:3925:4468  \"if (_staker.lockedBalance > 0) {...\"\n                        switch /** @src 0:3929:3954  \"_staker.lockedBalance > 0\" */ iszero(iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:3929:3950  \"_staker.lockedBalance\" */ _44)))\n                        case /** @src 0:3925:4468  \"if (_staker.lockedBalance > 0) {...\" */ 0 {\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            if iszero(/** @src 0:4407:4456  \"_transferFrom(msg.sender, address(this), _amount)\" */ fun_transferFrom(/** @src 0:3904:3914  \"msg.sender\" */ caller(), /** @src 0:4441:4445  \"this\" */ address(), /** @src 0:4407:4456  \"_transferFrom(msg.sender, address(this), _amount)\" */ value_11))\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            { revert(_4, _4) }\n                        }\n                        default /// @src 0:3925:4468  \"if (_staker.lockedBalance > 0) {...\"\n                        {\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let _45 := sload(/** @src 0:3974:3995  \"_staker.lockedBalance\" */ _44)\n                            /// @src 0:3970:4369  \"if (_staker.lockedBalance >= _amount) {...\"\n                            switch /** @src 0:3974:4006  \"_staker.lockedBalance >= _amount\" */ iszero(lt(_45, value_11))\n                            case /** @src 0:3970:4369  \"if (_staker.lockedBalance >= _amount) {...\" */ 0 {\n                                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                if iszero(/** @src 0:4126:4293  \"_transferFrom(...\" */ fun_transferFrom(/** @src 0:3904:3914  \"msg.sender\" */ caller(), /** @src 0:4209:4213  \"this\" */ address(), /** @src 0:4240:4271  \"_amount - _staker.lockedBalance\" */ checked_sub_uint256(value_11, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _45))) { revert(_4, _4) }\n                                sstore(_44, _4)\n                            }\n                            default /// @src 0:3970:4369  \"if (_staker.lockedBalance >= _amount) {...\"\n                            {\n                                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                sstore(_44, /** @src 0:4026:4058  \"_staker.lockedBalance -= _amount\" */ checked_sub_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:4026:4058  \"_staker.lockedBalance -= _amount\" */ _44), value_11))\n                            }\n                        }\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        sstore(dataSlot_19, /** @src 0:4497:4512  \"block.timestamp\" */ timestamp())\n                        /// @src 0:4567:4588  \"_staker.stakedBalance\"\n                        let _46 := add(dataSlot_19, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 1)\n                        sstore(_46, /** @src 0:4567:4599  \"_staker.stakedBalance += _amount\" */ checked_add_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:4567:4599  \"_staker.stakedBalance += _amount\" */ _46), value_11))\n                        /// @src 0:4614:4644  \"NewStaker(msg.sender, _amount)\"\n                        let _47 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(_2)\n                        /// @src 0:4614:4644  \"NewStaker(msg.sender, _amount)\"\n                        log1(_47, sub(abi_encode_address_uint256(_47, /** @src 0:3904:3914  \"msg.sender\" */ caller(), /** @src 0:4614:4644  \"NewStaker(msg.sender, _amount)\" */ value_11), _47), 0xa96c2cce65119a2170d1711a6e82f18f2006448828483ba7545e595476543647)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        return(_4, _4)\n                    }\n                    case 0xce5e11bf {\n                        if callvalue() { revert(_4, _4) }\n                        let param_18, param_19 := abi_decode_bytes32t_uint256(calldatasize())\n                        let ret_7 := fun_getTimestampbyQueryIdandIndex(param_18, param_19)\n                        let memPos_26 := mload(_2)\n                        mstore(memPos_26, ret_7)\n                        return(memPos_26, 32)\n                    }\n                    case 0xd9c51cd4 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        if iszero(/** @src 0:2671:2720  \"_transferFrom(msg.sender, address(this), _amount)\" */ fun_transferFrom(/** @src 0:2685:2695  \"msg.sender\" */ caller(), /** @src 0:2705:2709  \"this\" */ address(), /** @src 0:57:22821  \"contract TellorPlayground {...\" */ calldataload(_3))) { revert(_4, _4) }\n                        return(_4, _4)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_16208()\n                        let value1_1 := abi_decode_address()\n                        let _48 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_3, _48))\n                        mstore(32, /** @src 0:8821:8832  \"_allowances\" */ 0x07)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let _49 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _48))\n                        mstore(32, _49)\n                        let _50 := sload(keccak256(_4, _2))\n                        let memPos_27 := mload(_2)\n                        mstore(memPos_27, _50)\n                        return(memPos_27, 32)\n                    }\n                    case 0xe07c5486 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_20, param_21 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_20)\n                        mstore(0x20, /** @src 0:15866:15885  \"reporterByTimestamp\" */ 0x01)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_20 := keccak256(_4, _2)\n                        mstore(_4, param_21)\n                        mstore(0x20, dataSlot_20)\n                        let value_12 := and(sload(keccak256(_4, _2)), sub(shl(160, 1), 1))\n                        let memPos_28 := mload(_2)\n                        mstore(memPos_28, value_12)\n                        return(memPos_28, 0x20)\n                    }\n                    case 0xf25133f3 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_22, param_23 := abi_decode_bytes32t_uint256(calldatasize())\n                        mstore(_4, param_22)\n                        mstore(0x20, /** @src 0:934:981  \"mapping(bytes32 => uint256[]) public timestamps\" */ 3)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let dataSlot_21 := keccak256(_4, _2)\n                        /// @src 0:934:981  \"mapping(bytes32 => uint256[]) public timestamps\"\n                        if iszero(lt(param_23, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:934:981  \"mapping(bytes32 => uint256[]) public timestamps\" */ dataSlot_21)))\n                        {\n                            revert(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _4, _4)\n                        }\n                        /// @src 0:934:981  \"mapping(bytes32 => uint256[]) public timestamps\"\n                        let slot_1, offset_3 := storage_array_index_access_uint256_dyn(dataSlot_21, param_23)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let value_13 := shr(shl(/** @src 0:934:981  \"mapping(bytes32 => uint256[]) public timestamps\" */ 3, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ offset_3), sload(/** @src 0:934:981  \"mapping(bytes32 => uint256[]) public timestamps\" */ slot_1))\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let memPos_29 := mload(_2)\n                        mstore(memPos_29, value_13)\n                        return(memPos_29, 0x20)\n                    }\n                    case 0xfc0c546a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_14 := and(sload(/** @src 0:1690:1710  \"address public token\" */ 12), /** @src 0:57:22821  \"contract TellorPlayground {...\" */ sub(shl(160, 1), 1))\n                        let memPos_30 := mload(_2)\n                        mstore(memPos_30, value_14)\n                        return(memPos_30, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_bytes32t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_21765(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_bytes(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_decode_address_16208() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_available_length_bytes(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            function storage_array_index_access_uint256_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    let _2 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function array_push_from_uint256_to_array_uint256_dyn_storage_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                sstore(array, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_uint256_dyn(array, oldLen)\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                let mask := shl(shiftBits, not(0))\n                sstore(slot, or(and(_1, not(mask)), and(shl(shiftBits, value0), mask)))\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_add_uint256_16222(x) -> sum\n            {\n                sum := add(x, /** @src 0:4862:4872  \"1000 ether\" */ 0x3635c9adc5dea00000)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 689 @src 0:9790:10380  \"function getDataBefore(bytes32 _queryId, uint256 _timestamp)...\"\n            function fun_getDataBefore(var_queryId, var_timestamp) -> var_ifRetrieve, var_value_mpos, var_timestampRetrieved\n            {\n                /// @src 0:10058:10135  \"getIndexForDataBefore(...\"\n                let expr_component, expr_component_1 := fun_getIndexForDataBefore(var_queryId, var_timestamp)\n                /// @src 0:10145:10186  \"if (!_found) return (false, bytes(\\\"\\\"), 0)\"\n                if /** @src 0:10149:10156  \"!_found\" */ iszero(expr_component)\n                /// @src 0:10145:10186  \"if (!_found) return (false, bytes(\\\"\\\"), 0)\"\n                {\n                    /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation_21765(memPtr)\n                    mstore(memPtr, 0)\n                    /// @src 0:10158:10186  \"return (false, bytes(\\\"\\\"), 0)\"\n                    var_ifRetrieve := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0\n                    /// @src 0:10158:10186  \"return (false, bytes(\\\"\\\"), 0)\"\n                    var_value_mpos := memPtr\n                    var_timestampRetrieved := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0\n                    /// @src 0:10158:10186  \"return (false, bytes(\\\"\\\"), 0)\"\n                    leave\n                }\n                /// @src 0:10218:10265  \"getTimestampbyQueryIdandIndex(_queryId, _index)\"\n                let expr := fun_getTimestampbyQueryIdandIndex(var_queryId, expr_component_1)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                mstore(0x20, /** @src 0:10284:10290  \"values\" */ 0x05)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ expr)\n                mstore(0x20, dataSlot)\n                let converted := copy_array_from_storage_to_memory_bytes(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40))\n                /// @src 0:10331:10373  \"return (true, _value, _timestampRetrieved)\"\n                var_ifRetrieve := /** @src 0:10339:10343  \"true\" */ 0x01\n                /// @src 0:10331:10373  \"return (true, _value, _timestampRetrieved)\"\n                var_value_mpos := converted\n                var_timestampRetrieved := expr\n            }\n            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n            function decrement_uint256(value) -> ret\n            {\n                if iszero(value)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, not(0))\n            }\n            /// @ast-id 974 @src 0:10817:15100  \"function getIndexForDataBefore(bytes32 _queryId, uint256 _timestamp)...\"\n            function fun_getIndexForDataBefore(var_queryId, var_timestamp) -> var_found, var_index\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                let _2 := 0x20\n                mstore(_2, /** @src 0:15449:15459  \"timestamps\" */ 0x03)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let _3 := 0x40\n                let length := sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3))\n                /// @src 0:11036:15067  \"if (_count > 0) {...\"\n                if /** @src 0:11040:11050  \"_count > 0\" */ iszero(iszero(length))\n                /// @src 0:11036:15067  \"if (_count > 0) {...\"\n                {\n                    /// @src 0:11066:11081  \"uint256 _middle\"\n                    let var_middle := /** @src -1:-1:-1 */ _1\n                    /// @src 0:11095:11113  \"uint256 _start = 0\"\n                    let var_start := /** @src -1:-1:-1 */ _1\n                    /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                    let _4 := not(0)\n                    let diff := add(length, _4)\n                    if gt(diff, length)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                    }\n                    /// @src 0:11127:11152  \"uint256 _end = _count - 1\"\n                    let var_end := diff\n                    /// @src 0:11166:11179  \"uint256 _time\"\n                    let var_time := /** @src -1:-1:-1 */ _1\n                    /// @src 0:11327:11369  \"if (_time >= _timestamp) return (false, 0)\"\n                    if /** @src 0:11331:11350  \"_time >= _timestamp\" */ iszero(lt(/** @src 0:11266:11313  \"getTimestampbyQueryIdandIndex(_queryId, _start)\" */ fun_getTimestampbyQueryIdandIndex_16261(var_queryId), /** @src 0:11331:11350  \"_time >= _timestamp\" */ var_timestamp))\n                    /// @src 0:11327:11369  \"if (_time >= _timestamp) return (false, 0)\"\n                    {\n                        /// @src 0:11352:11369  \"return (false, 0)\"\n                        var_found := /** @src -1:-1:-1 */ _1\n                        /// @src 0:11352:11369  \"return (false, 0)\"\n                        var_index := /** @src -1:-1:-1 */ _1\n                        /// @src 0:11352:11369  \"return (false, 0)\"\n                        leave\n                    }\n                    /// @src 0:11383:11436  \"_time = getTimestampbyQueryIdandIndex(_queryId, _end)\"\n                    var_time := /** @src 0:11391:11436  \"getTimestampbyQueryIdandIndex(_queryId, _end)\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, diff)\n                    /// @src 0:11450:11836  \"if (_time < _timestamp) {...\"\n                    if /** @src 0:11454:11472  \"_time < _timestamp\" */ lt(var_time, var_timestamp)\n                    /// @src 0:11450:11836  \"if (_time < _timestamp) {...\"\n                    {\n                        /// @src 0:11492:11663  \"while (isInDispute(_queryId, _time) && _end > 0) {...\"\n                        for { }\n                        /** @src 0:11151:11152  \"1\" */ 0x01\n                        /// @src 0:11492:11663  \"while (isInDispute(_queryId, _time) && _end > 0) {...\"\n                        { }\n                        {\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                            mstore(_2, /** @src -1:-1:-1 */ _1)\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_time)\n                            mstore(_2, dataSlot)\n                            /// @src 0:11499:11539  \"isInDispute(_queryId, _time) && _end > 0\"\n                            let expr := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), 0xff)\n                            /// @src 0:11499:11539  \"isInDispute(_queryId, _time) && _end > 0\"\n                            if expr\n                            {\n                                expr := /** @src 0:11531:11539  \"_end > 0\" */ iszero(iszero(var_end))\n                            }\n                            /// @src 0:11499:11539  \"isInDispute(_queryId, _time) && _end > 0\"\n                            if iszero(expr) { break }\n                            /// @src 0:11563:11569  \"_end--\"\n                            var_end := decrement_uint256(var_end)\n                            /// @src 0:11591:11644  \"_time = getTimestampbyQueryIdandIndex(_queryId, _end)\"\n                            var_time := /** @src 0:11599:11644  \"getTimestampbyQueryIdandIndex(_queryId, _end)\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, var_end)\n                        }\n                        /// @src 0:11684:11725  \"_end == 0 && isInDispute(_queryId, _time)\"\n                        let expr_1 := /** @src 0:11684:11693  \"_end == 0\" */ iszero(var_end)\n                        /// @src 0:11684:11725  \"_end == 0 && isInDispute(_queryId, _time)\"\n                        if expr_1\n                        {\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                            mstore(_2, /** @src -1:-1:-1 */ _1)\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_time)\n                            mstore(_2, dataSlot_1)\n                            /// @src 0:11684:11725  \"_end == 0 && isInDispute(_queryId, _time)\"\n                            expr_1 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), 0xff)\n                        }\n                        /// @src 0:11680:11785  \"if (_end == 0 && isInDispute(_queryId, _time)) {...\"\n                        if expr_1\n                        {\n                            /// @src 0:11749:11766  \"return (false, 0)\"\n                            var_found := /** @src -1:-1:-1 */ _1\n                            /// @src 0:11749:11766  \"return (false, 0)\"\n                            var_index := /** @src -1:-1:-1 */ _1\n                            /// @src 0:11749:11766  \"return (false, 0)\"\n                            leave\n                        }\n                        /// @src 0:11802:11821  \"return (true, _end)\"\n                        var_found := /** @src 0:11151:11152  \"1\" */ 0x01\n                        /// @src 0:11802:11821  \"return (true, _end)\"\n                        var_index := var_end\n                        leave\n                    }\n                    /// @src 0:11924:15057  \"while (true) {...\"\n                    for { }\n                    /** @src 0:11151:11152  \"1\" */ 0x01\n                    /// @src 0:11924:15057  \"while (true) {...\"\n                    { }\n                    {\n                        /// @src 0:11966:11979  \"_end - _start\"\n                        let _5 := checked_sub_uint256(var_end, var_start)\n                        /// @src 0:11151:11152  \"1\"\n                        let _6 := 0x01\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let r := shr(/** @src 0:11151:11152  \"1\" */ _6, /** @src 0:11966:11979  \"_end - _start\" */ _5)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        let sum := add(r, /** @src 0:11151:11152  \"1\" */ _6)\n                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                        if gt(r, sum)\n                        {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                        }\n                        /// @src 0:11955:11997  \"_middle = (_end - _start) / 2 + 1 + _start\"\n                        var_middle := /** @src 0:11965:11997  \"(_end - _start) / 2 + 1 + _start\" */ checked_add_uint256(/** @src 0:11965:11988  \"(_end - _start) / 2 + 1\" */ sum, /** @src 0:11965:11997  \"(_end - _start) / 2 + 1 + _start\" */ var_start)\n                        /// @src 0:12015:12071  \"_time = getTimestampbyQueryIdandIndex(_queryId, _middle)\"\n                        var_time := /** @src 0:12023:12071  \"getTimestampbyQueryIdandIndex(_queryId, _middle)\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, var_middle)\n                        /// @src 0:12015:12071  \"_time = getTimestampbyQueryIdandIndex(_queryId, _middle)\"\n                        let var_time_1 := var_time\n                        /// @src 0:12089:15043  \"if (_time < _timestamp) {...\"\n                        switch /** @src 0:12093:12111  \"_time < _timestamp\" */ lt(var_time, var_timestamp)\n                        case /** @src 0:12089:15043  \"if (_time < _timestamp) {...\" */ 0 {\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let diff_1 := add(var_middle, _4)\n                            if gt(diff_1, var_middle)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                            }\n                            /// @src 0:13563:13705  \"uint256 _prevTime = getTimestampbyQueryIdandIndex(...\"\n                            let var_prevTime := /** @src 0:13583:13705  \"getTimestampbyQueryIdandIndex(...\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, /** @src 0:13672:13683  \"_middle - 1\" */ diff_1)\n                            /// @src 0:13727:15025  \"if (_prevTime < _timestamp) {...\"\n                            switch /** @src 0:13731:13753  \"_prevTime < _timestamp\" */ lt(var_prevTime, var_timestamp)\n                            case /** @src 0:13727:15025  \"if (_prevTime < _timestamp) {...\" */ 0 {\n                                /// @src 0:14984:15002  \"_end = _middle - 1\"\n                                var_end := diff_1\n                            }\n                            default /// @src 0:13727:15025  \"if (_prevTime < _timestamp) {...\"\n                            {\n                                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                                mstore(_2, /** @src -1:-1:-1 */ _1)\n                                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_prevTime)\n                                mstore(_2, dataSlot_2)\n                                let _7 := 0xff\n                                /// @src 0:13781:14863  \"if (!isInDispute(_queryId, _prevTime)) {...\"\n                                switch /** @src 0:13785:13818  \"!isInDispute(_queryId, _prevTime)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), _7))\n                                case /** @src 0:13781:14863  \"if (!isInDispute(_queryId, _prevTime)) {...\" */ 0 {\n                                    /// @src 0:14075:14084  \"_middle--\"\n                                    var_middle := decrement_uint256(var_middle)\n                                    /// @src 0:14114:14506  \"while (...\"\n                                    for { }\n                                    /** @src 0:11151:11152  \"1\" */ _6\n                                    /// @src 0:14114:14506  \"while (...\"\n                                    { }\n                                    {\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                                        mstore(_2, /** @src -1:-1:-1 */ _1)\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        let dataSlot_3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_prevTime)\n                                        mstore(_2, dataSlot_3)\n                                        /// @src 0:14154:14201  \"isInDispute(_queryId, _prevTime) && _middle > 0\"\n                                        let expr_2 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), _7)\n                                        /// @src 0:14154:14201  \"isInDispute(_queryId, _prevTime) && _middle > 0\"\n                                        if expr_2\n                                        {\n                                            expr_2 := /** @src 0:14190:14201  \"_middle > 0\" */ iszero(iszero(var_middle))\n                                        }\n                                        /// @src 0:14154:14201  \"isInDispute(_queryId, _prevTime) && _middle > 0\"\n                                        if iszero(expr_2) { break }\n                                        /// @src 0:14266:14275  \"_middle--\"\n                                        var_middle := decrement_uint256(var_middle)\n                                        /// @src 0:14309:14475  \"_prevTime = getTimestampbyQueryIdandIndex(...\"\n                                        var_prevTime := /** @src 0:14321:14475  \"getTimestampbyQueryIdandIndex(...\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, var_middle)\n                                    }\n                                    /// @src 0:14572:14620  \"_middle == 0 && isInDispute(_queryId, _prevTime)\"\n                                    let expr_3 := /** @src 0:14572:14584  \"_middle == 0\" */ iszero(var_middle)\n                                    /// @src 0:14572:14620  \"_middle == 0 && isInDispute(_queryId, _prevTime)\"\n                                    if expr_3\n                                    {\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                                        mstore(_2, /** @src -1:-1:-1 */ _1)\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        let dataSlot_4 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_prevTime)\n                                        mstore(_2, dataSlot_4)\n                                        /// @src 0:14572:14620  \"_middle == 0 && isInDispute(_queryId, _prevTime)\"\n                                        expr_3 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), _7)\n                                    }\n                                    /// @src 0:14535:14733  \"if (...\"\n                                    if expr_3\n                                    {\n                                        /// @src 0:14685:14702  \"return (false, 0)\"\n                                        var_found := /** @src -1:-1:-1 */ _1\n                                        /// @src 0:14685:14702  \"return (false, 0)\"\n                                        var_index := /** @src -1:-1:-1 */ _1\n                                        /// @src 0:14685:14702  \"return (false, 0)\"\n                                        leave\n                                    }\n                                    /// @src 0:14814:14836  \"return (true, _middle)\"\n                                    var_found := /** @src 0:11151:11152  \"1\" */ _6\n                                    /// @src 0:14814:14836  \"return (true, _middle)\"\n                                    var_index := var_middle\n                                    leave\n                                }\n                                default /// @src 0:13781:14863  \"if (!isInDispute(_queryId, _prevTime)) {...\"\n                                {\n                                    /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                    let diff_2 := add(var_middle, _4)\n                                    if gt(diff_2, var_middle)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                                    }\n                                    /// @src 0:13902:13928  \"return (true, _middle - 1)\"\n                                    var_found := /** @src 0:11151:11152  \"1\" */ _6\n                                    /// @src 0:13902:13928  \"return (true, _middle - 1)\"\n                                    var_index := diff_2\n                                    leave\n                                }\n                            }\n                        }\n                        default /// @src 0:12089:15043  \"if (_time < _timestamp) {...\"\n                        {\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            let sum_1 := add(var_middle, /** @src 0:11151:11152  \"1\" */ _6)\n                            /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                            if gt(var_middle, sum_1)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                            }\n                            /// @src 0:12346:13517  \"if (_nextTime >= _timestamp) {...\"\n                            switch /** @src 0:12350:12373  \"_nextTime >= _timestamp\" */ iszero(lt(/** @src 0:12202:12324  \"getTimestampbyQueryIdandIndex(...\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, /** @src 0:12291:12302  \"_middle + 1\" */ sum_1), /** @src 0:12350:12373  \"_nextTime >= _timestamp\" */ var_timestamp))\n                            case /** @src 0:12346:13517  \"if (_nextTime >= _timestamp) {...\" */ 0 {\n                                /// @src 0:13474:13494  \"_start = _middle + 1\"\n                                var_start := sum_1\n                            }\n                            default /// @src 0:12346:13517  \"if (_nextTime >= _timestamp) {...\"\n                            {\n                                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                                mstore(_2, /** @src -1:-1:-1 */ _1)\n                                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                let dataSlot_5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_time_1)\n                                mstore(_2, dataSlot_5)\n                                let _8 := 0xff\n                                /// @src 0:12401:13354  \"if (!isInDispute(_queryId, _time)) {...\"\n                                switch /** @src 0:12405:12434  \"!isInDispute(_queryId, _time)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), _8))\n                                case /** @src 0:12401:13354  \"if (!isInDispute(_queryId, _time)) {...\" */ 0 {\n                                    /// @src 0:12683:13067  \"while (...\"\n                                    for { }\n                                    /** @src 0:11151:11152  \"1\" */ _6\n                                    /// @src 0:12683:13067  \"while (...\"\n                                    { }\n                                    {\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                                        mstore(_2, /** @src -1:-1:-1 */ _1)\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        let dataSlot_6 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_time)\n                                        mstore(_2, dataSlot_6)\n                                        /// @src 0:12723:12766  \"isInDispute(_queryId, _time) && _middle > 0\"\n                                        let expr_4 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), _8)\n                                        /// @src 0:12723:12766  \"isInDispute(_queryId, _time) && _middle > 0\"\n                                        if expr_4\n                                        {\n                                            expr_4 := /** @src 0:12755:12766  \"_middle > 0\" */ iszero(iszero(var_middle))\n                                        }\n                                        /// @src 0:12723:12766  \"isInDispute(_queryId, _time) && _middle > 0\"\n                                        if iszero(expr_4) { break }\n                                        /// @src 0:12831:12840  \"_middle--\"\n                                        var_middle := decrement_uint256(var_middle)\n                                        /// @src 0:12874:13036  \"_time = getTimestampbyQueryIdandIndex(...\"\n                                        var_time := /** @src 0:12882:13036  \"getTimestampbyQueryIdandIndex(...\" */ fun_getTimestampbyQueryIdandIndex(var_queryId, var_middle)\n                                    }\n                                    /// @src 0:13100:13144  \"_middle == 0 && isInDispute(_queryId, _time)\"\n                                    let expr_5 := /** @src 0:13100:13112  \"_middle == 0\" */ iszero(var_middle)\n                                    /// @src 0:13100:13144  \"_middle == 0 && isInDispute(_queryId, _time)\"\n                                    if expr_5\n                                    {\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                                        mstore(_2, /** @src -1:-1:-1 */ _1)\n                                        /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                                        let dataSlot_7 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                                        mstore(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_time)\n                                        mstore(_2, dataSlot_7)\n                                        /// @src 0:13100:13144  \"_middle == 0 && isInDispute(_queryId, _time)\"\n                                        expr_5 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)), _8)\n                                    }\n                                    /// @src 0:13096:13228  \"if (_middle == 0 && isInDispute(_queryId, _time)) {...\"\n                                    if expr_5\n                                    {\n                                        /// @src 0:13180:13197  \"return (false, 0)\"\n                                        var_found := /** @src -1:-1:-1 */ _1\n                                        /// @src 0:13180:13197  \"return (false, 0)\"\n                                        var_index := /** @src -1:-1:-1 */ _1\n                                        /// @src 0:13180:13197  \"return (false, 0)\"\n                                        leave\n                                    }\n                                    /// @src 0:13305:13327  \"return (true, _middle)\"\n                                    var_found := /** @src 0:11151:11152  \"1\" */ _6\n                                    /// @src 0:13305:13327  \"return (true, _middle)\"\n                                    var_index := var_middle\n                                    leave\n                                }\n                                default /// @src 0:12401:13354  \"if (!isInDispute(_queryId, _time)) {...\"\n                                {\n                                    /// @src 0:12514:12536  \"return (true, _middle)\"\n                                    var_found := /** @src 0:11151:11152  \"1\" */ _6\n                                    /// @src 0:12514:12536  \"return (true, _middle)\"\n                                    var_index := var_middle\n                                    leave\n                                }\n                            }\n                        }\n                    }\n                }\n                /// @src 0:15076:15093  \"return (false, 0)\"\n                var_found := /** @src -1:-1:-1 */ _1\n                /// @src 0:15076:15093  \"return (false, 0)\"\n                var_index := /** @src -1:-1:-1 */ _1\n            }\n            /// @ast-id 1096 @src 0:17690:17976  \"function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index)...\"\n            function fun_getTimestampbyQueryIdandIndex_16261(var_queryId) -> var\n            {\n                /// @src 0:11049:11050  \"0\"\n                let _1 := 0x00\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                mstore(0x20, /** @src 0:17846:17856  \"timestamps\" */ 0x03)\n                /// @src 0:17887:17914  \"_len == 0 || _len <= _index\"\n                let expr := /** @src 0:17887:17896  \"_len == 0\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(keccak256(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)))\n                /// @src 0:17887:17914  \"_len == 0 || _len <= _index\"\n                if iszero(expr) { expr := expr }\n                /// @src 0:17883:17924  \"if (_len == 0 || _len <= _index) return 0\"\n                if expr\n                {\n                    /// @src 0:17916:17924  \"return 0\"\n                    var := /** @src 0:11049:11050  \"0\" */ _1\n                    /// @src 0:17916:17924  \"return 0\"\n                    leave\n                }\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let _2 := keccak256(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)\n                if iszero(sload(_2))\n                {\n                    mstore(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x24)\n                }\n                mstore(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2)\n                /// @src 0:17934:17969  \"return timestamps[_queryId][_index]\"\n                var := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(keccak256(/** @src 0:11049:11050  \"0\" */ _1, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20))\n            }\n            /// @ast-id 1096 @src 0:17690:17976  \"function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index)...\"\n            function fun_getTimestampbyQueryIdandIndex(var_queryId, var_index) -> var\n            {\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ var_queryId)\n                mstore(0x20, /** @src 0:17846:17856  \"timestamps\" */ 0x03)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let length := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40))\n                /// @src 0:17887:17914  \"_len == 0 || _len <= _index\"\n                let expr := /** @src 0:17887:17896  \"_len == 0\" */ iszero(length)\n                /// @src 0:17887:17914  \"_len == 0 || _len <= _index\"\n                if iszero(expr)\n                {\n                    expr := /** @src 0:17900:17914  \"_len <= _index\" */ iszero(gt(length, var_index))\n                }\n                /// @src 0:17883:17924  \"if (_len == 0 || _len <= _index) return 0\"\n                if expr\n                {\n                    /// @src 0:17916:17924  \"return 0\"\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 0:17916:17924  \"return 0\"\n                    leave\n                }\n                /// @src 0:17941:17969  \"timestamps[_queryId][_index]\"\n                let _1, _2 := storage_array_index_access_uint256_dyn(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40), /** @src 0:17941:17969  \"timestamps[_queryId][_index]\" */ var_index)\n                /// @src 0:17934:17969  \"return timestamps[_queryId][_index]\"\n                var := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ shr(shl(/** @src 0:17846:17856  \"timestamps\" */ 0x03, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2), sload(/** @src 0:17941:17969  \"timestamps[_queryId][_index]\" */ _1))\n            }\n            /// @ast-id 1228 @src 0:20211:20583  \"function _approve(...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:20337:20357  \"_owner != address(0)\" */ var_owner, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _1)\n                if /** @src 0:20337:20357  \"_owner != address(0)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 0:20416:20438  \"_spender != address(0)\" */ var_spender, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _1)\n                if /** @src 0:20416:20438  \"_spender != address(0)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 0:20355:20356  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2)\n                mstore(0x20, /** @src 0:20487:20498  \"_allowances\" */ 0x07)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let _4 := keccak256(/** @src 0:20355:20356  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)\n                mstore(/** @src 0:20355:20356  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 0:20355:20356  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40), var_amount)\n                /// @src 0:20541:20576  \"Approval(_owner, _spender, _amount)\"\n                let _5 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 0:20541:20576  \"Approval(_owner, _spender, _amount)\"\n                log3(_5, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20, /** @src 0:20541:20576  \"Approval(_owner, _spender, _amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n            /// @ast-id 1353 @src 0:21752:22167  \"function _transfer(...\"\n            function fun_transfer(var_sender, var_recipient, var_amount)\n            {\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:21881:21902  \"_sender != address(0)\" */ var_sender, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _1)\n                if /** @src 0:21881:21902  \"_sender != address(0)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 0:21963:21987  \"_recipient != address(0)\" */ var_recipient, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _1)\n                if /** @src 0:21963:21987  \"_recipient != address(0)\" */ iszero(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 0:21900:21901  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _2)\n                mstore(0x20, /** @src 0:22036:22045  \"_balances\" */ 0x08)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let dataSlot := keccak256(/** @src 0:21900:21901  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)\n                sstore(dataSlot, /** @src 0:22036:22065  \"_balances[_sender] -= _amount\" */ checked_sub_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:22036:22065  \"_balances[_sender] -= _amount\" */ dataSlot), var_amount))\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src 0:21900:21901  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ _3)\n                mstore(0x20, /** @src 0:22036:22045  \"_balances\" */ 0x08)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let dataSlot_1 := keccak256(/** @src 0:21900:21901  \"0\" */ 0x00, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)\n                sstore(dataSlot_1, /** @src 0:22075:22107  \"_balances[_recipient] += _amount\" */ checked_add_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(/** @src 0:22075:22107  \"_balances[_recipient] += _amount\" */ dataSlot_1), var_amount))\n                /// @src 0:22122:22160  \"Transfer(_sender, _recipient, _amount)\"\n                let _4 := /** @src 0:57:22821  \"contract TellorPlayground {...\" */ mload(0x40)\n                mstore(_4, var_amount)\n                /// @src 0:22122:22160  \"Transfer(_sender, _recipient, _amount)\"\n                log3(_4, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x20, /** @src 0:22122:22160  \"Transfer(_sender, _recipient, _amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 1390 @src 0:22479:22819  \"function _transferFrom(...\"\n            function fun_transferFrom(var__sender, var_recipient, var_amount) -> var\n            {\n                /// @src 0:22651:22658  \"_amount\"\n                fun_transfer(var__sender, var_recipient, var_amount)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ and(var__sender, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:22736:22747  \"_allowances\" */ 0x07)\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:22765:22769  \"this\" */ address())\n                /// @src 0:57:22821  \"contract TellorPlayground {...\"\n                mstore(0x20, dataSlot)\n                /// @src 0:22736:22781  \"_allowances[_sender][address(this)] - _amount\"\n                fun_approve(var__sender, /** @src 0:22712:22722  \"msg.sender\" */ caller(), /** @src 0:22736:22781  \"_allowances[_sender][address(this)] - _amount\" */ checked_sub_uint256(/** @src 0:57:22821  \"contract TellorPlayground {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:57:22821  \"contract TellorPlayground {...\" */ 0x40)), /** @src 0:22736:22781  \"_allowances[_sender][address(this)] - _amount\" */ var_amount))\n                /// @src 0:22801:22812  \"return true\"\n                var := /** @src 0:22808:22812  \"true\" */ 0x01\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207008faabcc2d2365516405163b0bfba17eb7f498be41ff42f0bd209d83ee840f64736f6c63430008110033\"\n    }\n}\n","hash":"010003ddcbfd36520f8a9c4fd839227a8a00ef111088cb81015229d1562c0266","factoryDependencies":{}}}}}}